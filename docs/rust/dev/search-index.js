var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","dtype","effective_metadata","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","inner_dtype","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_reduce","std_reduce","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","MAX_VALUE","MIN_VALUE","Metadata","MetadataFlags","MetadataProperties","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","difference","drop","drop","drop","empty","empty","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","vzip","vzip","vzip","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Reinterpret","SlicedArray","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","leaf_dtype","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PathIterator","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesReshape","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_full_join_from_series","_join_suffix_name","_left_join_from_series","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","century","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full_join","full_join","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_leaf_array","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_reader_with_file_handle","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reserve","reshape","reshape_array","reshape_list","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_fields","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","Quarter","Random","Range","Rank","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_concat","str_head","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_set_metadata","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[813,"polars::chunked_array::arithmetic"],[841,"polars::chunked_array::builder"],[1098,"polars::chunked_array::builder::list"],[1115,"polars::chunked_array::collect"],[1129,"polars::chunked_array::float"],[1131,"polars::chunked_array::from_iterator_par"],[1135,"polars::chunked_array::iterator"],[1205,"polars::chunked_array::iterator::par"],[1207,"polars::chunked_array::metadata"],[1376,"polars::chunked_array::object"],[1447,"polars::chunked_array::object::builder"],[1470,"polars::chunked_array::object::registry"],[1498,"polars::chunked_array::ops"],[1696,"polars::chunked_array::ops::arity"],[1731,"polars::chunked_array::ops::float_sorted_arg_max"],[1733,"polars::chunked_array::ops::gather"],[1736,"polars::chunked_array::ops::search_sorted"],[1765,"polars::chunked_array::ops::sort"],[1772,"polars::chunked_array::ops::sort::arg_bottom_k"],[1773,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1780,"polars::chunked_array::ops::sort::options"],[1793,"polars::chunked_array::temporal"],[1800,"polars::chunked_array::temporal::conversion"],[1803,"polars::datatypes"],[3174,"polars::datatypes::categorical"],[3191,"polars::datatypes::categorical::revmap"],[3197,"polars::datatypes::categorical::string_cache"],[3216,"polars::docs"],[3218,"polars::error"],[3302,"polars::error::PolarsError"],[3306,"polars::error::constants"],[3309,"polars::frame"],[3562,"polars::frame::explode"],[3591,"polars::frame::group_by"],[3826,"polars::frame::group_by::GroupByMethod"],[3827,"polars::frame::group_by::GroupsProxy"],[3829,"polars::frame::group_by::aggregations"],[3842,"polars::frame::group_by::expr"],[3845,"polars::frame::row"],[3952,"polars::functions"],[3954,"polars::prelude"],[8928,"polars::prelude::AggExpr"],[8935,"polars::prelude::BooleanFunction"],[8938,"polars::prelude::DslPlan"],[8992,"polars::prelude::Expr"],[9026,"polars::prelude::FunctionExpr"],[9047,"polars::prelude::GroupByMethod"],[9048,"polars::prelude::GroupsProxy"],[9050,"polars::prelude::LiteralValue"],[9053,"polars::prelude::PolarsError"],[9057,"polars::prelude::StringFunction"],[9071,"polars::prelude::TemporalFunction"],[9073,"polars::prelude::aggregations"],[9086,"polars::prelude::arity"],[9121,"polars::prelude::array"],[9140,"polars::prelude::binary"],[9156,"polars::prelude::cat"],[9157,"polars::prelude::chunkedarray"],[9224,"polars::prelude::chunkedarray::string"],[9262,"polars::prelude::chunkedarray::string::infer"],[9292,"polars::prelude::cloud"],[9339,"polars::prelude::cloud::options"],[9347,"polars::prelude::datatypes"],[9613,"polars::prelude::datatypes::categorical"],[9630,"polars::prelude::datatypes::categorical::revmap"],[9636,"polars::prelude::datatypes::categorical::string_cache"],[9640,"polars::prelude::datetime"],[9643,"polars::prelude::default_arrays"],[9649,"polars::prelude::dt"],[9701,"polars::prelude::expr"],[9704,"polars::prelude::fixed_size_list"],[9724,"polars::prelude::float_sorted_arg_max"],[9726,"polars::prelude::function_expr"],[9889,"polars::prelude::function_expr::BooleanFunction"],[9892,"polars::prelude::function_expr::FunctionExpr"],[9913,"polars::prelude::function_expr::StringFunction"],[9927,"polars::prelude::function_expr::TemporalFunction"],[9929,"polars::prelude::function_expr::cat"],[9931,"polars::prelude::function_expr::pow"],[9935,"polars::prelude::function_expr::rolling"],[9964,"polars::prelude::function_expr::rolling_by"],[9993,"polars::prelude::gather"],[9996,"polars::prelude::interpolate"],[10000,"polars::prelude::interpolate_by"],[10001,"polars::prelude::mode"],[10002,"polars::prelude::nan_propagating_aggregate"],[10006,"polars::prelude::null"],[10036,"polars::prelude::schema_inference"],[10060,"polars::prelude::search_sorted"],[10066,"polars::prelude::series"],[10088,"polars::prelude::slice"],[10091,"polars::prelude::sort"],[10098,"polars::prelude::sort::arg_bottom_k"],[10099,"polars::prelude::sort::arg_sort_multiple"],[10106,"polars::prelude::sort::options"],[10119,"polars::prelude::strings"],[10173,"polars::prelude::udf"],[10179,"polars::prelude::utf8"],[10183,"polars::series"],[10584,"polars::series::arithmetic"],[10605,"polars::series::arithmetic::checked"],[10611,"polars::series::ops"],[10637,"polars::series::unstable"],[10661,"dyn_clone::sealed"],[10662,"polars_core::datatypes"],[10663,"polars_core::chunked_array"],[10664,"num_traits"],[10665,"num_traits::cast"],[10666,"polars_core::series"],[10667,"polars_error"],[10668,"core::result"],[10669,"polars_core::series::arithmetic::borrowed"],[10670,"polars_core::frame::group_by::proxy"],[10671,"polars_core::chunked_array::object"],[10672,"core::option"],[10673,"polars_arrow::array"],[10674,"alloc::boxed"],[10675,"core::iter::traits::iterator"],[10676,"polars_core::chunked_array::list::iterator"],[10677,"core::ops::function"],[10678,"core::marker"],[10679,"alloc::borrow"],[10680,"polars_core::series::unstable"],[10681,"polars_core::datatypes::dtype"],[10682,"alloc::string"],[10683,"polars_core::chunked_array::ops::sort::options"],[10684,"polars_core::series::arithmetic::borrowed::checked"],[10685,"core::slice::iter"],[10686,"core::iter::adapters::map"],[10687,"alloc::vec"],[10688,"polars_core::chunked_array::metadata"],[10689,"core::iter::traits::double_ended"],[10690,"polars_arrow::offset"],[10691,"core::fmt"],[10692,"core::iter::traits::collect"],[10693,"polars_utils::iter::fallible"],[10694,"core::borrow"],[10695,"core::convert"],[10696,"polars_core::chunked_array::from_iterator"],[10697,"polars_arrow::bitmap::immutable"],[10698,"rayon::iter"],[10699,"polars_arrow::pushable"],[10700,"polars_arrow::trusted_len"],[10701,"polars_core::datatypes::any_value"],[10702,"polars_core::chunked_array::logical"],[10703,"polars_core::datatypes::time_unit"],[10704,"core::iter::traits::exact_size"],[10705,"polars_core::series::series_trait"],[10706,"polars_core::chunked_array::iterator"],[10707,"alloc::sync"],[10708,"core::ops::range"],[10709,"polars_core::datatypes::field"],[10710,"polars_arrow::legacy::kernels::rolling::no_nulls"],[10711,"polars_core::chunked_array::ops::rolling_window"],[10712,"polars_ops::chunked_array::scatter"],[10713,"polars_utils::index"],[10714,"ahash::random_state"],[10715,"polars_utils::hashing"],[10716,"ndarray"],[10717,"ndarray::dimension::dim"],[10718,"ndarray::data_repr"],[10719,"either"],[10720,"core::any"],[10721,"polars_core::chunked_array::arithmetic::numeric"],[10722,"polars_core::chunked_array::builder::list::anonymous"],[10723,"polars_core::chunked_array::builder::list::boolean"],[10724,"polars_core::chunked_array::builder::list::primitive"],[10725,"polars_core::chunked_array::builder::list"],[10726,"polars_core::chunked_array::builder"],[10727,"polars_core::chunked_array::builder::list::binary"],[10728,"polars_core::chunked_array::builder::list::null"],[10729,"polars_core::chunked_array::builder::string"],[10730,"polars_arrow::array::binview"],[10731,"polars_core::chunked_array::builder::boolean"],[10732,"polars_core::chunked_array::builder::null"],[10733,"polars_core::chunked_array::builder::primitive"],[10734,"core::clone"],[10735,"polars_core::series::implementations::null"],[10736,"polars_core::chunked_array::collect"],[10737,"polars_core::chunked_array::float"],[10738,"polars_core::chunked_array::from_iterator_par"],[10739,"polars_arrow::array::boolean"],[10740,"polars_arrow::array::fixed_size_list"],[10741,"bitflags::iter"],[10742,"polars_arrow::datatypes"],[10743,"polars_arrow::bitmap::utils::iterator"],[10744,"polars_arrow::bitmap::utils::zip_validity"],[10745,"polars_core::chunked_array::object::builder"],[10746,"polars_core::chunked_array::object::registry"],[10747,"polars_core::chunked_array::ops"],[10748,"core::hash"],[10749,"polars_arrow::legacy::array::slice"],[10750,"polars_core::chunked_array::ops::arity"],[10751,"polars_arrow::array::static_array"],[10752,"core::error"],[10753,"polars_arrow::array::primitive"],[10754,"polars_core::chunked_array::ops::search_sorted"],[10755,"polars_core::utils"],[10756,"polars_row::row"],[10757,"chrono::naive::datetime"],[10758,"chrono_tz::timezones"],[10759,"chrono::naive::time"],[10760,"polars_core::chunked_array::logical::struct_"],[10761,"polars_core::chunked_array::logical::categorical"],[10762,"polars_core::chunked_array::logical::categorical::builder"],[10763,"polars_arrow::array::static_array_collect"],[10764,"bytemuck::zeroable"],[10765,"polars_core::chunked_array::logical::categorical::revmap"],[10766,"polars_core::chunked_array::logical::categorical::merge"],[10767,"polars_arrow::types"],[10768,"polars_arrow::datatypes::physical_type"],[10769,"chrono::time_delta"],[10770,"chrono::naive::date"],[10771,"smartstring::config"],[10772,"smartstring"],[10773,"core::cmp"],[10774,"polars_time::windows::duration"],[10775,"polars_core::frame"],[10776,"polars_core::chunked_array::logical::categorical::string_cache"],[10777,"polars_error::warning"],[10778,"alloc::collections"],[10779,"simdutf8::basic"],[10780,"planus::errors"],[10781,"std::io::error"],[10782,"polars_parquet::parquet::error"],[10783,"regex::error"],[10784,"polars_core::schema"],[10785,"polars_core::series::from"],[10786,"hashbrown::set"],[10787,"polars_arrow::datatypes::schema"],[10788,"polars_core::frame::row"],[10789,"polars_core::frame::group_by"],[10790,"polars_time::group_by::dynamic"],[10791,"polars_lazy::frame"],[10792,"polars_core::frame::explode"],[10793,"polars_core::chunked_array::ndarray"],[10794,"polars_arrow::record_batch"],[10795,"polars_arrow::array::struct_"],[10796,"polars_utils::idx_vec"],[10797,"rayon::iter::plumbing"],[10798,"polars_plan::logical_plan::aexpr"],[10799,"polars_core::frame::group_by::into_groups"],[10800,"core::iter::adapters::copied"],[10801,"core::iter::adapters::zip"],[10802,"polars_utils::float"],[10803,"polars_arrow::types::native"],[10804,"polars_core::frame::group_by::aggregations::agg_list"],[10805,"polars_core::frame::group_by::aggregations"],[10806,"polars_core::frame::group_by::expr"],[10807,"polars_core::frame::row::av_buffer"],[10808,"polars_utils::arena"],[10809,"polars_plan::logical_plan::alp"],[10810,"polars_ops::frame::join::hash_join"],[10811,"polars_ops::frame::join::args"],[10812,"polars_ops::chunked_array::gather::chunked"],[10813,"polars_ops::frame"],[10814,"polars_io::csv::read::reader"],[10815,"polars_io::predicates"],[10816,"polars_io::mmap"],[10817,"polars_plan::dsl::expr"],[10818,"core::alloc"],[10819,"polars_plan::logical_plan::anonymous_scan"],[10820,"polars_lazy::scan::ndjson"],[10821,"polars_lazy::scan::anonymous_scan"],[10822,"polars_plan::dsl::expr_dyn_fn"],[10823,"polars_plan::logical_plan::visitor"],[10824,"polars_plan::dsl::function_expr"],[10825,"polars_ops::series::ops::arg_min_max"],[10826,"polars_plan::dsl::array"],[10827,"polars_plan::dsl::list"],[10828,"polars_plan::dsl::function_expr::schema"],[10829,"polars_io::ipc::ipc_stream"],[10830,"std::io"],[10831,"polars_ops::chunked_array::binary"],[10832,"polars_time::chunkedarray::string"],[10833,"std::os::fd::owned"],[10834,"polars_ops::chunked_array::list"],[10835,"std::os::fd::raw"],[10836,"polars_ops::series::ops"],[10837,"polars_ops::chunked_array::strings"],[10838,"core::mem::maybe_uninit"],[10839,"polars_ops::chunked_array::strings::namespace"],[10840,"polars_io::csv::read::read_impl::batched"],[10841,"polars_io::csv::write::writer"],[10842,"polars_io::ipc::write"],[10843,"polars_io::parquet::read::reader"],[10844,"polars_io::parquet::read::read_impl"],[10845,"polars_io::parquet::write::writer"],[10846,"polars_io::parquet::write::batched_writer"],[10847,"polars_plan::dsl::binary"],[10848,"polars_plan::dsl::udf"],[10849,"polars_lazy::frame::exitable"],[10850,"hashbrown::map"],[10851,"polars_plan::dsl::cat"],[10852,"polars_ops::series::ops::round"],[10853,"polars_time::series"],[10854,"polars_time::chunkedarray::rolling_window"],[10855,"polars_time::windows::bounds"],[10856,"polars_lazy::scan::csv"],[10857,"polars_time::windows::group_by"],[10858,"polars_lazy::scan::ipc"],[10859,"polars_lazy::scan::parquet"],[10860,"polars_time::windows::window"],[10861,"polars_io::csv::read::options"],[10862,"polars_io::csv::write::options"],[10863,"polars_io::ipc::ipc_file"],[10864,"polars_io::json"],[10865,"polars_io::parquet::read::options"],[10866,"polars_io::parquet::write::options"],[10867,"polars_ops::frame::join::asof"],[10868,"polars_ops::series::ops::interpolation::interpolate"],[10869,"polars_ops::series::ops::is_between"],[10870,"polars_ops::series::ops::rank"],[10871,"polars_plan::logical_plan"],[10872,"polars_plan::dsl::arity"],[10873,"polars_plan::dsl::function_expr::boolean"],[10874,"polars_plan::dsl::function_expr::cat"],[10875,"polars_plan::dsl::function_expr::datetime"],[10876,"polars_plan::dsl::function_expr::pow"],[10877,"polars_plan::dsl::function_expr::strings"],[10878,"polars_plan::dsl::functions::temporal"],[10879,"polars_plan::dsl::options"],[10880,"polars_plan::frame::opt_state"],[10881,"polars_plan::logical_plan::lit"],[10882,"polars_plan::logical_plan::options"],[10883,"polars_parquet::parquet::metadata::file_metadata"],[10884,"polars_arrow::legacy::kernels::rolling"],[10885,"polars_arrow::legacy::kernels::time"],[10886,"polars_lazy::scan::file_list_reader"],[10887,"polars_io::cloud::options"],[10888,"polars_parquet::parquet::metadata::column_order"],[10889,"polars_ops::chunked_array::binary::namespace"],[10890,"std::path"],[10891,"polars_io::shared"],[10892,"polars_ops::frame::join::cross_join"],[10893,"polars_lazy::dsl::eval"],[10894,"polars_time::chunkedarray::date"],[10895,"polars_time::chunkedarray::datetime"],[10896,"polars_time::chunkedarray::duration"],[10897,"core::default"],[10898,"polars_parquet::parquet::metadata::row_metadata"],[10899,"polars_core::series::ops"],[10900,"polars_plan::dsl::dt"],[10901,"polars_ops::series::ops::various"],[10902,"polars_arrow::scalar"],[10903,"polars_lazy::dsl::list"],[10904,"crossterm::command"],[10905,"polars_plan::dsl::struct_"],[10906,"polars_io::ndjson::core"],[10907,"std::fs"],[10908,"polars_plan::logical_plan::apply"],[10909,"polars_plan::dsl::function_expr::range"],[10910,"polars_plan::dsl::function_expr::array"],[10911,"polars_plan::dsl::function_expr::binary"],[10912,"polars_plan::dsl::function_expr::list"],[10913,"polars_plan::dsl::function_expr::struct_"],[10914,"std::ffi::os_str"],[10915,"alloc::ffi::c_str"],[10916,"core::ffi::c_str"],[10917,"polars_parquet::arrow::read::statistics"],[10918,"polars_arrow::array::struct_::mutable"],[10919,"polars_arrow::array::growable::structure"],[10920,"polars_arrow::legacy::array::default_arrays"],[10921,"polars_arrow::buffer::immutable"],[10922,"polars_arrow::array::list"],[10923,"polars_core::named_from"],[10924,"polars_ops::frame::join"],[10925,"polars_ops::series::ops::reshape"],[10926,"polars_arrow::legacy::array"],[10927,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[10928,"polars_time::chunkedarray::time"],[10929,"parquet_format_safe::parquet_format"],[10930,"polars_arrow::array::struct_::iterator"],[10931,"polars_ops::frame::join::asof::groups"],[10932,"polars_ops::chunked_array::list::namespace"],[10933,"polars_plan::dsl::name"],[10934,"polars_io::options"],[10935,"polars_core::chunked_array::ops::aggregate"],[10936,"polars_core::chunked_array::ops::aggregate::quantile"],[10937,"polars_time::month_end"],[10938,"polars_time::month_start"],[10939,"polars_arrow::legacy::index"],[10940,"polars_ops::chunked_array::strings::split"],[10941,"core::pin"],[10942,"core::io::borrowed_buf"],[10943,"parquet_format_safe::thrift::varint::decode"],[10944,"polars_time::chunkedarray::rolling_window::dispatch"],[10945,"polars_time::round"],[10946,"polars_parquet::parquet::metadata::schema_descriptor"],[10947,"polars_core::chunked_array::ops::aggregate::var"],[10948,"polars_plan::dsl::string"],[10949,"polars_ops::series::ops::to_dummies"],[10950,"polars_time::truncate"],[10951,"std::sync::rwlock"],[10952,"polars_io::csv::read::schema_inference"],[10953,"polars_time::upsample"],[10954,"polars_core::hashing::vector_hasher"],[10955,"core::num::nonzero"],[10956,"alloc::collections::btree::map"],[10957,"polars_ops::chunked_array::array::namespace"],[10958,"polars_ops::chunked_array::array"],[10959,"polars_time::chunkedarray::string::patterns"],[10960,"polars_time::chunkedarray::string::infer"],[10961,"polars_arrow::legacy::array::fixed_size_list"],[10962,"polars_plan::dsl::function_expr::rolling"],[10963,"polars_plan::dsl::function_expr::rolling_by"],[10964,"polars_arrow::legacy::array::null"],[10965,"polars_arrow::bitmap::mutable"],[10966,"polars_arrow::array::utf8"],[10967,"polars_arrow::array::binary"],[10968,"polars_core::series::iterator"],[10969,"polars_core"],[10970,"polars_core::chunked_array::iterator::par"],[10971,"polars_core::chunked_array::ops::float_sorted_arg_max"],[10972,"polars_core::chunked_array::ops::gather"],[10973,"polars_core::chunked_array::ops::sort"],[10974,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[10975,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[10976,"polars_core::chunked_array::temporal"],[10977,"polars_core::chunked_array::temporal::conversion"],[10978,"polars_core::chunked_array::temporal::time"],[10979,"polars_core::chunked_array::logical::date"],[10980,"polars_core::chunked_array::logical::datetime"],[10981,"polars_core::chunked_array::logical::decimal"],[10982,"polars_core::chunked_array::logical::duration"],[10983,"polars_core::datatypes::aliases"],[10984,"polars_utils::aliases"],[10985,"polars_core::chunked_array::logical::time"],[10986,"polars_error::constants"],[10987,"polars_core::functions"],[10988,"polars_io::utils"],[10989,"polars_io::parquet::metadata"],[10990,"polars_arrow::legacy::prelude"],[10991,"polars_ops::series::ops::rolling"],[10992,"polars_parquet::parquet::write"],[10993,"polars_ops::frame::join::general"],[10994,"polars_ops::series::ops::abs"],[10995,"polars_plan::dsl::functions::selectors"],[10996,"polars_plan::dsl::functions::horizontal"],[10997,"polars_plan::dsl::functions::arity"],[10998,"polars_plan::dsl"],[10999,"polars_plan::dsl::functions::range"],[11000,"polars_plan::dsl::functions::index"],[11001,"polars_ops::chunked_array"],[11002,"polars_plan::dsl::functions::coerce"],[11003,"polars_plan::dsl::functions::syntactic_sugar"],[11004,"polars_time::base_utc_offset"],[11005,"polars_time"],[11006,"polars_ops::series::ops::clip"],[11007,"polars_io"],[11008,"polars_ops::series::ops::horizontal"],[11009,"polars_lazy::dsl::functions"],[11010,"polars_plan::dsl::functions::concat"],[11011,"polars_ops::series::ops::index"],[11012,"polars_io::csv::read::parser"],[11013,"polars_ops::series::ops::cum_agg"],[11014,"polars_ops::series::ops::diff"],[11015,"polars_time::dst_offset"],[11016,"polars_ops::series::ops::floor_divide"],[11017,"polars_ops::chunked_array::strings::concat"],[11018,"polars_ops::chunked_array::datetime::replace_time_zone"],[11019,"polars_time::date_range"],[11020,"polars_ops::series::ops::interpolation"],[11021,"polars_ops::series::ops::interpolation::interpolate_by"],[11022,"polars_io::csv::read::utils"],[11023,"polars_ops::series::ops::is_first_distinct"],[11024,"polars_ops::series::ops::is_in"],[11025,"polars_ops::series::ops::is_last_distinct"],[11026,"polars_io::parquet::read::utils"],[11027,"polars_ops::series::ops::negate"],[11028,"polars_ops::series::ops::not"],[11029,"polars_ops::series::ops::int_range"],[11030,"polars_plan::dsl::functions::repeat"],[11031,"polars_ops::chunked_array::repeat_by"],[11032,"polars_ops::series::ops::replace"],[11033,"polars_io::csv::read"],[11034,"polars_ops::chunked_array::strings::strip"],[11035,"polars_time::chunkedarray"],[11036,"polars_io::cloud"],[11037,"polars_ops::chunked_array::mode"],[11038,"polars_ops::chunked_array::nan_propagating_aggregate"],[11039,"polars_arrow::legacy::array::utf8"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,95,6,95,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,6,6,6,6,6,6,95,6,95,6,6,6,6,6,6,6,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,95,6,6,6,6,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,95,6,6,95,6,6,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,145,146,147,134,134,135,136,137,137,138,139,134,135,140,141,136,142,137,143,145,146,147,134,134,138,137,143,139,138,134,135,140,141,136,142,137,137,140,141,139,143,145,147,140,141,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,137,143,145,146,147,143,145,146,147,134,135,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,140,141,136,137,138,140,141,136,137,138,139,134,135,142,138,143,143,145,146,147,0,134,135,140,141,136,142,137,143,145,146,147,150,150,150,150,0,134,135,140,141,136,142,137,143,145,146,147,140,141,136,137,138,134,135,140,141,136,142,137,143,145,146,147,0,134,135,140,141,136,142,137,143,145,146,147,137,139,145,146,147,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,0,0,0,0,0,0,0,0,138,138,138,137,138,138,138,0,138,0,0,151,152,151,152,152,152,151,152,151,152,152,152,0,153,0,0,154,155,0,0,0,0,0,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,157,159,160,161,157,159,161,0,157,159,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,0,0,57,55,55,77,55,55,0,0,0,55,77,77,57,55,77,55,77,55,77,55,77,55,77,55,77,55,55,77,77,55,77,55,77,57,55,77,57,55,77,57,55,77,57,55,77,55,77,55,77,57,55,77,57,55,77,57,55,77,55,77,57,55,77,55,77,55,77,55,77,57,55,55,55,55,55,77,77,77,77,77,57,55,77,55,77,55,55,77,77,55,77,55,77,55,77,55,77,57,57,77,57,57,57,77,57,55,77,55,77,55,77,55,77,57,55,77,55,77,55,77,55,77,57,57,57,55,77,55,77,55,77,55,77,55,77,57,57,57,57,57,57,57,57,77,55,77,55,77,55,77,57,55,77,55,77,57,55,77,57,55,77,57,55,77,55,77,57,55,77,0,0,0,0,164,164,164,164,164,78,164,164,164,164,0,164,164,164,164,164,164,78,78,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,0,164,164,164,164,164,78,164,164,164,164,164,164,164,164,164,78,23,164,164,164,164,164,164,164,164,164,164,164,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,0,0,0,171,171,171,172,172,172,172,172,172,172,172,0,0,0,172,172,0,172,0,171,172,172,172,172,179,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,179,174,0,0,180,179,179,179,179,179,179,0,0,0,0,179,44,47,179,174,175,175,174,174,176,176,177,0,44,47,179,44,47,179,178,178,44,47,179,44,47,179,44,47,44,47,179,44,47,179,44,47,44,47,179,44,47,179,180,180,44,44,44,47,47,47,181,181,0,182,183,0,44,47,179,44,44,47,47,179,0,184,185,0,186,186,180,180,44,47,179,44,47,179,44,47,179,188,189,180,180,44,47,190,190,191,190,190,44,47,177,44,47,192,180,180,44,47,181,191,193,193,194,195,196,196,0,196,197,198,199,199,0,176,176,200,190,201,202,203,44,47,179,44,47,179,44,47,179,44,47,179,177,200,44,47,179,44,47,44,47,44,47,44,47,47,44,47,0,204,0,209,207,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,211,211,211,0,211,0,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,0,211,211,211,211,211,0,0,0,0,0,199,199,0,0,0,0,0,0,0,0,0,0,0,44,47,44,47,44,47,44,47,199,199,0,0,0,0,0,0,0,0,0,0,234,0,75,42,33,0,0,0,0,0,0,0,75,42,165,0,42,0,0,75,0,165,75,42,165,0,0,0,75,42,0,0,0,0,0,0,0,0,75,42,165,165,0,0,75,42,0,0,75,42,165,165,0,0,165,75,42,165,0,0,75,42,165,0,0,0,165,165,0,234,165,75,42,165,0,0,75,42,165,0,0,0,229,0,33,574,575,0,0,0,0,0,0,234,0,0,75,42,165,0,0,75,42,165,0,0,75,42,165,0,0,75,42,165,0,0,165,33,165,165,165,232,75,42,165,0,0,229,0,0,165,236,85,236,85,236,85,7,75,42,165,0,75,42,0,75,0,0,33,232,33,0,0,0,0,0,0,0,0,0,240,0,0,236,0,234,75,42,0,75,0,75,42,165,0,75,75,42,165,165,0,0,0,0,165,240,0,75,42,165,0,0,75,42,165,0,0,75,42,165,0,0,75,42,165,0,0,165,42,165,0,165,165,206,206,33,206,83,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,217,218,75,75,218,83,75,87,100,108,45,107,101,105,81,84,40,41,10,11,15,217,219,218,219,219,218,220,220,221,221,97,75,83,83,42,110,222,206,83,219,249,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,219,249,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,42,229,0,231,83,83,83,83,83,218,217,75,83,83,0,87,100,108,45,107,101,105,81,84,40,41,217,83,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,83,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,110,237,237,237,237,42,42,42,0,110,83,238,232,229,75,234,42,165,219,249,83,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,219,249,83,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,83,87,100,108,45,107,101,105,81,84,40,41,219,219,249,83,576,32,5,21,87,22,238,232,229,218,217,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,231,83,83,83,83,83,218,217,97,75,110,232,75,234,42,42,110,85,165,236,75,218,218,218,217,218,218,218,217,75,75,75,234,234,234,42,42,42,110,110,110,85,85,85,165,165,165,236,236,236,83,217,217,217,229,230,219,238,232,229,233,75,75,234,42,42,110,85,85,165,236,219,249,83,83,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,75,75,75,75,75,234,42,42,42,42,110,110,110,85,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,165,165,236,42,218,83,83,218,83,83,83,83,83,83,110,218,206,206,206,206,218,217,206,229,83,83,83,83,83,231,218,217,83,83,83,83,83,231,218,217,229,33,5,21,87,22,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,229,218,42,75,248,206,218,218,218,217,218,218,218,217,75,234,42,110,85,165,236,75,83,83,219,249,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,42,165,219,249,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,249,217,83,83,83,83,83,218,217,97,75,42,42,42,75,42,42,218,217,218,42,75,42,229,75,42,42,42,229,42,42,75,42,75,42,75,42,42,42,42,75,42,42,42,42,75,42,165,206,217,218,206,42,229,218,217,218,218,218,217,218,218,218,217,0,0,42,218,0,238,83,83,218,83,83,83,83,83,83,83,87,100,108,45,107,101,105,81,84,40,41,218,218,217,110,110,83,83,574,575,219,83,83,83,83,83,83,83,83,238,217,97,110,249,218,218,218,217,218,218,218,217,218,217,83,83,75,85,218,83,217,217,219,87,100,108,45,107,101,105,81,84,40,41,217,83,83,217,229,83,83,83,110,83,83,83,249,218,218,83,83,83,75,83,87,100,108,45,107,101,105,81,84,40,41,83,83,83,218,42,110,85,42,85,218,218,218,165,83,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,42,165,83,83,83,75,42,85,75,217,83,83,220,220,221,221,237,237,237,237,75,219,249,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,219,249,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,75,42,219,249,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,165,218,217,97,218,206,97,218,206,42,206,219,249,83,576,32,5,21,87,22,238,232,229,218,217,97,233,75,234,42,110,85,100,108,45,107,101,105,81,84,40,41,82,91,10,11,46,15,88,86,89,235,165,236,574,575,206,75,0,0,0,0,0,229,0,232,229,232,0,0,230,0,0,0,0,0,229,232,229,232,0,0,255,255,255,255,255,0,255,255,0,255,255,255,255,255,255,255,0,255,0,0,257,17,17,17,17,0,17,17,257,17,17,0,0,0,17,17,17,17,17,257,256,257,256,17,257,256,17,0,17,17,257,256,256,17,257,256,17,257,256,17,0,257,256,256,17,17,257,256,256,17,17,17,17,17,17,17,0,257,256,17,257,256,17,0,0,0,0,0,0,0,256,17,257,256,17,257,256,17,257,256,17,257,256,17,577,578,577,578,0,0,0,268,0,268,267,268,268,0,0,267,0,0,267,268,254,254,254,254,254,254,254,254,254,254,254,254,254,279,280,267,268,254,279,280,267,268,254,254,267,268,254,267,268,254,254,254,268,254,279,280,267,268,254,279,280,267,268,254,279,280,267,268,254,254,254,254,254,254,254,254,268,254,254,254,268,268,268,254,0,254,254,254,254,254,254,267,268,254,254,279,280,267,268,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,0,254,254,254,254,268,254,254,254,254,254,254,254,254,254,254,254,254,254,279,280,267,268,254,254,279,280,267,268,254,279,280,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,279,280,254,254,254,254,254,254,254,254,254,254,254,254,0,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,279,280,254,254,254,254,254,254,254,254,254,254,254,254,254,267,268,254,254,254,254,254,254,279,280,267,268,254,254,254,254,254,279,280,267,268,254,279,280,267,268,254,254,254,254,254,254,254,254,254,279,280,267,268,254,254,254,254,254,254,254,0,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,0,291,291,0,0,291,0,0,0,0,0,0,295,20,0,291,0,291,291,291,291,291,291,291,291,291,295,20,0,291,291,291,289,20,272,291,272,0,289,272,20,295,300,293,292,289,20,272,291,295,300,293,292,289,20,272,291,289,20,272,291,289,20,272,291,272,289,20,295,300,293,292,292,289,20,272,291,295,300,293,292,289,20,272,291,272,293,295,300,293,292,289,289,20,272,291,289,20,289,289,289,20,20,20,0,295,289,272,289,289,20,272,291,291,0,295,300,293,292,289,289,289,289,20,20,272,291,291,289,289,289,20,272,272,20,297,272,20,295,300,293,292,289,20,272,291,295,300,293,292,289,20,272,291,20,300,289,289,293,289,289,295,20,289,289,20,272,272,272,295,20,272,272,272,272,272,289,272,300,300,272,289,20,272,272,20,289,20,272,272,20,20,272,272,289,20,272,291,291,295,300,293,292,289,20,272,291,295,300,293,292,289,20,272,291,295,300,293,292,289,20,272,291,20,20,20,272,295,300,293,292,289,20,272,291,579,580,580,0,0,0,0,0,0,0,0,0,0,303,304,304,0,305,305,306,307,0,0,306,307,306,306,306,306,307,306,307,306,307,306,307,306,307,306,307,306,307,0,306,307,307,306,306,307,306,307,306,307,306,307,306,307,271,306,307,307,306,307,271,306,307,271,306,307,271,306,307,271,0,271,306,307,271,306,307,271,306,307,271,271,271,271,271,271,306,306,307,307,271,0,306,307,271,306,307,271,306,307,306,307,271,306,307,0,0,0,306,307,271,306,307,271,306,307,271,306,307,271,306,307,271,0,0,331,319,0,346,319,416,386,386,416,0,389,0,363,319,0,0,0,416,211,234,268,416,0,0,0,331,331,0,428,75,42,33,0,0,331,0,0,0,0,0,0,0,0,0,0,397,0,0,0,331,0,0,0,396,408,0,402,179,331,420,418,0,0,430,75,42,165,0,0,319,331,0,42,0,0,75,0,0,165,331,430,75,42,165,0,0,0,0,0,376,407,0,0,401,0,286,410,319,418,0,331,75,42,0,0,0,0,0,0,0,419,331,418,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,331,0,0,331,395,319,17,396,319,418,0,17,331,420,420,420,17,418,346,291,420,397,0,0,0,0,0,0,0,331,331,331,331,331,418,0,0,0,0,0,410,378,380,0,418,430,75,42,165,165,0,0,430,0,418,75,42,0,0,418,0,0,418,75,42,165,165,0,0,408,0,165,331,410,363,331,331,0,415,319,17,0,418,430,75,42,165,0,0,0,0,0,0,494,420,75,42,363,363,319,0,319,427,0,0,0,410,331,165,420,420,420,0,0,0,0,319,0,0,0,0,0,331,0,0,331,410,319,420,346,291,268,165,165,0,430,234,165,430,75,42,165,0,0,430,75,42,165,0,0,331,363,286,402,179,331,380,0,0,0,397,174,319,0,0,319,331,419,0,417,0,229,0,0,410,0,291,0,0,0,0,0,0,427,363,363,401,0,410,410,33,574,575,420,420,113,418,0,0,17,410,295,20,0,0,0,0,0,346,291,0,319,0,0,0,0,0,397,0,430,234,0,0,430,75,42,165,0,0,430,75,42,165,0,0,430,75,42,165,0,0,430,75,42,165,0,0,331,331,0,165,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,416,416,0,416,416,416,0,416,418,416,33,416,416,416,418,180,410,427,0,0,0,0,0,395,0,0,553,0,0,553,0,0,0,395,319,392,0,165,0,165,0,0,165,346,291,268,494,0,0,0,0,0,376,378,397,407,211,0,319,420,420,232,0,405,113,428,75,42,165,0,0,0,0,331,0,0,0,0,0,0,0,0,319,0,229,0,363,363,0,384,113,331,420,363,363,401,401,398,398,165,410,408,346,179,291,179,331,346,179,291,331,346,291,0,418,236,85,113,418,418,236,85,408,346,179,291,179,331,363,418,331,363,380,418,385,363,0,346,291,415,386,0,0,291,291,418,236,85,7,402,405,113,389,331,0,389,0,17,0,0,389,376,396,407,268,416,363,363,319,0,430,75,42,494,165,436,331,0,0,0,0,0,0,75,42,0,75,0,179,398,398,0,0,363,408,418,133,17,320,426,0,0,33,0,0,0,0,0,0,0,0,232,33,0,0,0,0,0,363,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,331,0,0,346,291,0,0,418,0,494,436,408,331,331,430,331,0,0,0,319,0,331,420,331,418,331,0,420,331,376,378,407,211,426,0,331,331,0,0,0,0,0,0,418,331,331,0,0,396,380,0,133,410,0,0,0,0,17,17,0,0,418,236,410,319,0,0,0,0,430,0,0,0,0,0,0,0,0,0,331,17,331,331,331,385,410,410,319,420,295,20,0,0,401,410,319,319,0,0,0,420,420,420,0,419,0,420,0,346,291,234,430,430,75,42,0,17,0,0,331,0,0,0,75,0,420,420,420,420,420,420,0,75,42,165,0,0,331,17,0,75,319,346,291,331,380,420,0,331,0,0,319,0,380,418,430,75,42,165,165,0,0,418,0,0,0,165,420,420,0,420,331,418,418,418,418,418,418,418,418,133,240,363,0,418,380,430,75,42,165,0,0,430,75,42,165,0,0,430,75,42,165,0,0,430,75,42,165,0,0,0,401,410,165,0,331,0,42,165,0,331,420,0,384,165,165,331,206,206,346,291,0,0,380,418,418,0,319,0,319,380,0,0,418,363,418,392,179,33,206,401,0,373,273,284,367,281,374,322,251,327,375,376,377,326,378,379,380,381,128,117,382,383,384,385,386,387,388,389,390,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,433,114,286,288,265,241,270,113,434,435,436,0,281,312,312,312,0,312,314,314,314,314,315,281,316,0,319,320,319,251,251,321,251,322,319,0,319,0,319,0,99,324,425,325,326,325,325,421,319,281,319,0,319,138,139,138,139,138,139,174,322,319,0,319,175,175,319,319,0,174,174,0,288,332,333,334,319,332,333,334,319,176,319,335,0,176,177,319,335,0,336,425,0,319,220,220,221,221,0,337,325,335,339,326,288,335,288,340,341,341,341,341,99,344,99,99,346,99,222,347,335,206,348,0,341,99,99,0,319,350,350,0,387,316,352,355,357,359,316,0,319,0,335,335,335,369,333,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,369,333,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,281,288,137,281,377,379,424,364,365,0,339,366,365,367,0,178,231,335,281,319,281,178,0,319,99,319,370,319,114,371,0,0,0,372,335,372,335,382,0,335,335,0,319,0,319,0,319,373,273,284,367,281,374,322,251,327,375,376,377,326,378,379,380,381,128,117,382,383,384,385,386,387,388,389,390,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,433,114,286,288,265,241,270,113,434,435,436,335,373,273,284,367,281,374,322,251,327,375,376,377,326,378,379,380,381,128,117,382,383,384,385,386,387,388,389,390,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,433,114,286,288,265,241,270,113,434,435,436,373,273,284,0,437,377,379,581,429,251,99,0,324,395,313,0,0,281,0,237,237,237,237,151,152,151,152,152,152,281,0,433,433,382,315,383,251,99,391,399,410,0,350,0,437,375,0,0,0,0,333,441,350,334,265,441,350,350,0,0,281,319,350,350,0,0,312,443,445,433,281,446,446,0,319,0,0,319,0,319,0,319,0,0,319,447,399,288,241,241,0,388,0,0,0,388,0,0,0,0,0,448,449,371,421,450,251,422,251,423,434,383,99,99,443,445,273,284,281,327,377,379,380,382,383,384,387,388,389,391,392,393,313,395,396,398,399,400,401,402,407,409,410,319,329,329,329,421,422,424,425,426,427,429,431,99,432,114,286,265,241,270,113,0,0,369,333,212,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,369,333,212,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,409,44,47,410,281,281,281,281,410,99,0,272,0,432,0,334,319,410,454,320,319,321,319,99,99,99,369,333,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,367,281,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,319,281,319,335,0,0,319,231,335,110,0,0,382,0,581,429,99,99,383,441,441,0,0,460,383,373,273,284,251,376,378,380,128,382,383,384,385,386,387,388,389,390,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,346,319,319,415,363,329,329,416,417,418,419,420,331,423,424,425,426,427,428,430,431,99,99,99,432,454,114,286,288,288,265,241,270,113,436,319,180,180,273,273,273,284,284,284,251,251,251,376,376,376,378,378,378,380,380,380,128,128,128,382,382,382,383,383,383,384,384,384,385,385,385,386,386,386,387,387,387,388,388,388,389,389,389,391,391,391,392,392,392,393,393,393,313,313,313,394,394,394,395,395,395,396,396,396,397,397,397,398,398,398,399,399,399,400,400,400,401,401,401,402,402,402,403,403,403,404,404,404,405,405,405,406,406,406,407,407,407,319,319,319,415,415,415,363,363,363,416,416,416,417,417,417,418,418,418,419,419,419,420,420,420,423,423,423,424,424,424,425,425,425,426,426,426,427,427,427,428,428,428,431,431,431,99,99,99,432,432,432,286,286,286,265,265,265,241,241,241,270,270,270,113,113,113,436,436,436,463,273,424,319,319,99,281,281,181,319,181,0,319,443,445,350,117,350,350,350,138,581,429,367,281,367,138,335,465,465,465,288,270,581,429,281,319,0,281,319,319,182,183,335,281,319,270,350,350,350,466,444,139,230,324,316,352,467,337,468,355,437,469,470,375,471,357,359,138,437,375,326,467,358,0,281,334,319,0,319,388,0,329,370,319,319,0,99,339,366,364,373,273,284,374,251,251,376,378,380,128,117,382,383,384,385,386,387,388,389,390,325,391,392,473,393,313,394,395,396,397,397,398,398,399,400,401,402,403,404,405,406,407,408,409,319,319,415,363,363,329,416,416,417,417,418,418,419,419,420,420,331,331,421,422,423,424,425,426,427,428,365,429,430,431,99,99,99,432,454,433,114,286,288,265,241,270,113,434,435,436,0,431,373,114,0,324,425,424,0,319,369,333,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,281,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,128,358,117,357,359,382,383,384,385,385,386,387,388,389,390,537,391,392,393,313,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,319,319,319,319,319,319,319,319,319,319,319,319,319,415,363,329,329,329,329,329,329,329,329,329,329,329,416,417,418,419,420,331,331,331,331,331,421,422,423,424,425,426,426,427,428,365,429,430,431,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,432,454,454,433,114,286,494,288,288,288,265,265,265,265,265,265,265,241,270,270,113,434,435,436,489,491,492,212,99,265,212,212,99,265,582,582,582,150,582,212,212,582,150,212,99,432,471,99,99,150,150,494,212,212,329,495,206,206,0,184,206,281,496,185,206,365,0,319,0,319,319,99,335,333,334,206,319,265,186,231,186,231,265,265,369,281,430,33,381,381,381,451,328,265,288,336,265,500,357,99,99,501,265,270,335,335,339,381,382,0,473,0,248,206,335,437,375,379,281,504,281,281,0,0,297,180,319,99,180,319,382,335,505,273,284,251,376,378,380,382,383,384,385,386,387,388,389,390,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,346,319,415,363,416,417,418,419,420,331,423,424,425,426,427,428,430,431,99,432,286,265,241,113,436,507,507,322,334,319,350,350,379,0,508,449,371,421,450,422,324,313,283,128,382,0,0,500,319,0,352,387,273,352,387,99,99,0,273,284,501,265,270,0,0,470,471,327,382,369,333,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,128,138,281,496,117,365,265,0,0,435,0,0,319,0,0,319,369,333,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,288,212,99,528,502,319,288,265,509,334,99,382,266,99,433,282,528,528,397,0,319,0,0,251,335,265,270,358,319,0,188,319,251,0,319,319,0,189,319,448,449,371,319,319,0,335,319,0,335,117,319,128,241,0,99,266,460,99,128,398,99,251,448,449,371,206,288,265,265,265,265,265,437,333,281,334,496,512,513,281,514,514,324,313,465,515,433,433,273,0,281,334,206,319,517,281,99,400,281,496,324,133,133,133,0,335,334,319,288,265,270,281,335,358,388,319,0,518,519,430,319,319,281,322,326,471,379,382,394,319,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,180,319,99,180,319,387,391,393,399,44,47,0,0,99,281,515,319,0,319,336,336,329,329,319,329,515,329,319,0,319,319,0,336,382,336,336,336,336,430,0,0,0,333,281,334,190,319,521,335,454,0,281,334,190,319,335,0,333,281,334,191,319,335,522,335,281,377,390,467,265,0,265,241,270,409,421,450,422,371,450,422,0,333,281,334,190,319,190,373,423,114,521,335,454,508,449,371,421,450,422,383,0,319,448,449,371,421,523,524,251,251,320,251,319,321,44,47,335,437,375,326,327,377,379,382,537,352,382,333,334,177,319,335,335,319,327,365,110,241,319,319,0,508,449,371,450,251,422,99,398,319,0,0,251,525,319,319,336,574,466,444,575,526,212,324,316,352,336,467,337,468,443,355,445,469,470,251,375,326,381,471,358,357,359,313,329,421,422,365,99,288,265,241,99,288,192,335,385,99,265,0,385,288,375,326,385,99,99,99,99,99,99,99,99,528,502,361,351,358,319,319,0,319,180,180,0,0,128,117,388,335,281,319,454,383,44,47,357,433,273,284,381,181,324,281,365,319,448,449,371,371,412,414,537,319,319,379,394,432,251,448,508,449,382,251,251,99,437,375,326,382,437,375,326,273,284,319,99,99,0,0,0,0,319,537,581,429,515,515,0,435,521,319,281,382,581,429,99,99,0,281,191,319,522,335,448,449,371,99,383,388,388,382,531,319,99,99,357,99,99,99,99,437,335,375,326,377,379,382,432,0,193,193,320,319,321,265,335,281,265,465,0,0,319,0,350,319,350,336,350,350,0,265,319,500,500,0,365,194,335,333,281,334,319,400,324,504,281,319,195,319,335,319,535,319,535,319,535,319,535,319,319,319,535,319,535,319,535,319,535,319,535,319,535,319,535,319,535,319,535,319,535,319,536,370,319,381,381,370,319,381,581,429,399,433,437,375,326,327,377,379,382,425,425,514,329,319,319,382,325,326,281,281,281,281,538,196,196,467,337,281,326,358,357,325,433,327,382,537,433,0,382,281,0,508,449,371,421,450,422,99,281,281,383,388,387,0,196,281,265,265,357,359,467,337,470,357,466,319,288,197,335,333,281,334,319,198,281,319,265,265,319,139,335,319,581,429,281,281,281,281,327,382,431,382,0,335,281,334,319,288,288,313,581,429,199,288,199,288,288,288,288,288,0,176,333,281,334,319,319,281,176,335,99,350,350,350,0,350,0,350,319,273,441,441,399,333,281,334,200,319,335,541,335,117,319,0,350,350,350,350,350,350,400,283,581,429,371,424,319,0,0,350,0,350,0,350,0,350,0,350,99,319,320,319,321,324,515,313,313,515,0,333,281,334,190,319,521,335,329,99,281,322,334,319,201,335,543,543,335,335,202,335,288,0,411,413,388,0,421,422,421,371,281,410,281,430,334,265,288,203,281,545,315,319,350,333,350,515,128,373,273,284,367,281,374,322,251,327,375,376,377,326,378,379,380,381,128,117,382,383,384,385,386,387,388,389,390,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,433,114,286,288,265,241,270,113,434,435,436,319,336,371,251,397,398,319,363,416,417,418,419,420,331,99,265,432,350,350,515,400,400,281,133,133,133,546,251,251,381,381,381,381,251,381,383,251,381,220,220,221,221,237,237,237,237,151,152,151,152,152,152,369,333,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,430,431,99,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,433,265,265,265,265,265,501,369,333,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,382,336,336,319,336,525,403,404,406,99,288,99,99,99,99,99,383,99,99,339,99,581,429,369,333,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,23,0,177,333,281,334,319,335,333,281,334,319,281,99,99,382,319,550,550,357,379,394,0,324,313,288,288,206,460,319,283,206,283,288,206,288,333,281,334,200,319,335,541,335,283,551,551,433,99,369,333,212,324,361,351,316,528,352,336,467,337,468,502,443,355,445,373,553,469,273,470,284,367,281,374,322,251,327,375,376,377,326,378,379,380,334,381,471,515,465,128,358,117,357,359,382,383,384,385,386,387,388,389,390,537,391,392,393,313,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,519,410,411,412,413,414,346,319,415,363,329,416,417,418,419,420,331,421,422,423,424,425,426,427,428,365,429,430,431,99,432,454,433,114,286,494,288,265,241,270,113,434,435,436,99,448,449,371,448,449,371,380,251,422,251,114,0,412,414,373,423,114,324,421,352,470,326,375,574,575,265,471,382,281,313,281,265,467,337,281,357,382,537,281,375,383,468,443,355,445,359,281,359,352,352,421,422,375,383,336,375,382,375,383,375,383,443,445,465,352,422,375,375,382,357,421,422,421,422,470,375,326,471,382,375,326,382,469,470,352,375,382,241,270,421,422,422,421,422,375,383,421,437,467,337,375,375,326,326,471,357,382,471,382,422,352,375,383,281,382,437,375,326,471,382,437,375,326,468,355,357,281,467,337,470,357,382,281,352,375,383,352,375,382,437,375,326,471,382,281,359,437,467,337,281,375,375,326,326,357,382,336,382,470,375,326,471,357,382,375,470,471,382,421,422,352,375,383,281,375,382,375,382,281,359,281,313,352,421,421,375,383,375,383,281,288,288,206,422,421,281,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,99,99,99,319,448,449,371,421,0,204,583,584,585,583,584,585,583,586,587,588,589,589,590,591,592,593,594,595,596,597,598,598,599,592,600,592,596,589,597,601,591,602,599,593,603,604,604,590,605,589,604,602,589,595,602,596,589,604,597,601,605,594,598,603,600,598,594,604,598,594,594,591,591,595,606,607,608,608,609,610,606,611,612,613,614,611,615,610,613,607,616,615,617,616,616,617,609,613,614,615,615,614,612,610,617,606,608,612,618,619,620,620,621,622,623,624,625,624,626,625,627,628,629,630,631,632,626,623,625,579,580,580,633,633,633,577,578,577,578,634,635,636,634,635,637,638,639,640,640,637,636,638,639,641,641,0,0,0,0,0,0,0,0,0,0,303,304,304,0,209,207,205,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,557,0,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,0,0,0,0,0,0,0,0,341,341,341,341,341,373,448,449,450,373,508,449,450,448,449,448,449,450,450,373,508,449,450,448,449,508,449,450,448,449,448,508,449,448,449,535,535,535,535,535,535,535,535,535,535,535,535,535,535,508,449,450,0,448,449,448,449,373,448,449,0,559,559,559,559,559,0,0,559,341,341,341,341,558,341,559,559,559,559,559,559,559,559,559,559,559,559,559,559,0,559,559,559,559,559,559,559,559,0,563,0,0,560,560,560,560,560,560,560,560,560,0,560,560,560,560,561,560,560,560,560,560,563,560,560,560,560,560,564,564,0,0,564,564,564,438,438,564,438,564,438,438,438,438,564,438,564,438,564,438,564,438,438,438,438,438,564,564,438,438,438,564,438,564,438,0,438,438,564,438,564,438,564,438,564,564,564,0,0,564,564,564,438,234,0,75,42,33,0,0,0,0,0,0,0,75,42,165,0,42,0,0,75,0,165,75,42,165,0,0,0,75,42,0,0,0,0,0,0,0,0,75,42,165,165,0,0,75,42,0,0,75,42,165,165,0,0,165,75,42,165,0,0,75,42,165,0,0,0,165,165,0,234,165,75,42,165,0,0,75,42,165,0,0,0,229,0,33,574,575,0,0,0,0,0,0,234,0,0,75,42,165,0,0,75,42,165,0,0,75,42,165,0,0,75,42,165,0,0,165,33,165,165,165,232,75,42,165,0,0,229,0,0,165,236,85,236,85,236,85,7,75,42,165,0,75,42,0,75,0,0,33,232,33,0,0,0,0,0,0,0,0,0,240,0,0,236,0,234,75,42,0,75,0,75,42,165,0,75,75,42,165,165,0,0,0,0,165,240,0,75,42,165,0,0,75,42,165,0,0,75,42,165,0,0,75,42,165,0,0,165,42,165,0,165,165,206,206,33,206,220,220,221,221,222,206,0,231,0,237,237,237,237,0,231,110,230,206,206,206,206,206,231,231,33,248,206,206,206,0,0,0,110,574,575,220,220,221,221,237,237,237,237,206,206,206,574,575,206,0,0,0,0,0,229,0,232,229,232,0,0,230,0,0,0,0,0,229,232,229,232,0,0,0,0,0,0,0,0,0,0,0,489,491,492,0,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,0,305,305,0,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,0,0,331,416,416,416,416,331,331,331,331,331,420,418,331,331,0,418,331,0,419,331,418,331,331,418,331,420,420,420,418,420,331,331,331,331,331,418,418,418,418,418,331,331,331,418,420,331,420,420,420,331,331,420,331,331,0,331,419,417,420,420,418,331,331,416,416,416,416,416,416,418,416,416,416,416,418,420,420,331,331,420,331,331,418,418,418,331,418,331,418,418,331,416,331,418,331,0,418,331,331,331,331,420,331,418,331,420,331,331,331,418,331,331,418,331,331,331,331,420,420,420,420,419,420,331,0,420,420,420,420,420,420,331,331,420,331,0,418,418,420,420,420,331,418,418,418,418,418,418,418,418,418,331,331,420,331,418,418,418,418,0,0,0,0,586,587,588,618,619,620,620,621,622,623,624,625,624,626,625,627,628,629,630,631,632,626,623,625,634,635,636,634,635,637,638,639,640,640,637,636,638,639,641,641,0,417,419,419,0,419,566,566,566,566,0,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,567,567,567,567,0,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,0,0,0,0,405,405,0,0,0,0,0,0,0,0,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,0,549,549,549,549,549,549,549,549,549,549,549,549,549,0,549,549,549,549,549,549,549,549,549,211,211,211,0,0,0,0,0,570,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,0,199,199,0,0,0,0,0,199,199,0,0,0,0,0,0,0,0,0,0,0,44,47,44,47,44,47,44,47,199,199,0,0,0,348,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,0,350,350,350,350,350,350,350,0,350,0,350,0,350,350,350,350,350,350,0,350,0,350,0,350,0,350,0,350,350,350,350,350,0,365,365,365,365,365,0,0,642,643,93,0,93,0,0,180,93,0,0,0,0,93,16,16,16,16,16,16,16,16,16,16,335,335,0,16,16,335,335,16,335,335,16,16,16,335,16,16,16,335,335,335,16,573,93,16,573,93,16,335,16,16,16,335,16,16,335,335,335,16,16,93,16,335,93,16,16,16,16,16,16,573,93,16,16,573,93,16,16,16,16,16,573,93,16,335,335,16,93,16,180,16,16,16,180,16,16,16,16,16,93,93,93,16,16,16,16,16,16,335,16,335,16,93,16,16,16,573,93,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,335,16,16,335,335,335,180,16,16,16,180,16,16,16,335,93,16,16,16,16,16,16,0,573,93,16,573,93,16,16,573,266,16,335,16,16,16,16,335,335,266,16,16,16,335,335,16,16,180,16,16,16,180,16,16,16,16,335,335,16,335,335,16,335,16,16,16,16,335,335,335,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,335,16,573,180,16,16,16,180,16,16,16,16,335,0,16,16,335,335,16,16,16,335,16,335,93,335,16,16,16,16,335,335,16,16,573,335,16,335,335,335,16,16,16,16,16,16,16,16,16,335,16,16,335,16,16,335,335,16,16,335,16,16,16,16,16,16,93,16,16,16,16,573,93,16,16,16,16,16,573,93,16,16,573,93,16,16,16,16,16,335,16,335,0,335,335,573,93,16,16,16,16,0,0,0,320,0,320,321,19,0,320,321,19,320,321,19,320,321,19,320,321,19,0,0,372,49,372,49,455,455,0,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38],"f":"``````{{}b}`````````{{}d}```````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}e}{}n{A`Ab}}{{{l{c}}e}{}n{A`Ab}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}}{{{l{Af}}{l{Af}}}}{{{f{{l{Ad}}}}{f{Ah}}}}{{{f{{l{Af}}}}{f{{Al{Aj}}}}}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}}{{{l{An}}{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{Ad}}{l{Ad}}}}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Ad}}}}{f{Bh}}}B`}{{{f{{l{Bj}}}}{f{Bh}}}B`}{{{f{{l{An}}}}{f{Bh}}}B`}{{{f{{l{{Bl{c}}}}}}{f{Bh}}}B`Bn}{{{f{{l{c}}}}{f{Bh}}}B`n}{{{f{{l{j}}}}{f{Bh}}}B`}{{{f{{l{Af}}}}{f{Bh}}}B`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{C`{d}}}}{{{f{{l{Bj}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bj}}}}{f{Ah}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{Ah}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}54{{{f{Cl{l{c}}}}{f{{l{c}}}}}b{{Db{}{{Cn{D`}}}}}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Df{{C`{{f{c}}}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{{C`{B`}}}{{Dd{{C`{B`}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}n{{Df{C`}{{Dd{C`}}}}Dh}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Df{{C`{{f{Ah}}}}}{{Dd{{C`{{Dj{Ah}}}}}}}}Dh}}{{{f{{l{An}}}}c}{{l{An}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}Dh}}{{{f{{l{Af}}}}c}{{l{Af}}}{{Df{{C`{{f{{Al{Aj}}}}}}}{{Dd{{C`{{Dj{{Al{Aj}}}}}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{Bj}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{j}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{E`}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{C`}{{Dd{{C`{e}}}}}}}Db}{{{l{c}}e}{{l{c}}}n{{Df{}{{Dd{}}}}Dh}}{{{f{{l{c}}}}{f{Df}}}{{l{c}}}n}{{{f{{l{Ad}}}}{f{Df}}}{{l{Ad}}}}{{{f{{l{An}}}}{f{Df}}}{{l{An}}}}{{{f{{l{Af}}}}{f{Df}}}{{l{Af}}}}{{{f{{l{Ad}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{Df}}}{{l{e}}}nDb}{{{f{{l{An}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{Af}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{Af}}}}c}{{l{Af}}}{{Dn{{f{{Al{Aj}}}}}{{Dd{{f{{Al{Aj}}}}}}}}}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Dn{{f{Ah}}}{{Dd{{f{Ah}}}}}}}}{{{f{Cl{l{c}}}}e}bn{{Df{}{{Dd{}}}}Dh}}{{{f{{l{c}}}}Edg}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Dn{{f{Ah}}{f{ClEf}}}}}}{{{f{{l{Bj}}}}{f{Df}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{j}}}}{f{Df}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{{Bl{c}}}}}}g{f{Cl{Al{e}}}}}bBn{}{{Df{{C`{{f{c}}}}{f{e}}}{{Dd{e}}}}}}{{{f{{l{Ad}}}}e{f{Cl{Al{c}}}}}b{}{{Df{{C`{{f{Ah}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{c}}}}g{f{Cl{Al{e}}}}}bn{}{{Df{C`{f{e}}}{{Dd{e}}}}}}{{{f{{l{An}}}}e{f{Cl{Al{c}}}}}b{}{{Df{{C`{d}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{Af}}}}e{f{Cl{Al{c}}}}}b{}{{Df{{C`{{f{{Al{Aj}}}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{j}}}}e{f{Cl{Al{c}}}}}b{}{{Df{{C`{B`}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Df{{f{c}}}{{Dd{c}}}}Dh}}{{{f{{l{Af}}}}c}{{l{Af}}}{{Df{{f{{Al{Aj}}}}}{{Dd{{Dj{{Al{Aj}}}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}n{{Df{}{{Dd{}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{B`}{{Dd{B`}}}}Dh}}{{{f{{l{An}}}}c}{{l{An}}}{{Df{d}{{Dd{d}}}}Dh}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Df{{f{Ah}}}{{Dd{{Dj{Ah}}}}}}Dh}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{c}}}}Eh}{{l{Ej}}}n}{{{f{{l{El}}}}Eh}{{l{Ej}}}}{{{f{{l{Ad}}}}Eh}{{l{Ej}}}}{{{f{{l{Af}}}}Eh}{{l{Ej}}}}{{{f{{l{An}}}}Eh}{{l{Ej}}}}{{{f{{l{c}}}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}n}{{{f{{l{El}}}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{An}}}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{Ad}}}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{Af}}}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{Ej}}Bb}}}n}{{{f{{l{Af}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{An}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{Ej}}Bb}}}Bn}{{{f{{l{Ad}}}}}{{Bd{{l{Ej}}Bb}}}}`{{{f{{l{Bj}}}}}{{f{{l{Bj}}}}}}{{{f{{l{Ad}}}}}{{l{Af}}}}{{{f{{l{Af}}}}}{{f{{l{Af}}}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{Ad}}}}}{{f{{l{Ad}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DbDb{{Dn{{C`{Dl}}C`C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}F`}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{l{An}}{l{An}}}}210201{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0``{{{f{{l{Af}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{El}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Bj}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Ad}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ed}}}{{Bd{B`Bb}}}n}{{{f{{l{An}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}e}{{l{g}}}n{{Df{}{{Dd{}}}}Dh}n}6543217{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fb}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FbAb}{{{f{{l{c}}}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}Db}{{{f{{l{c}}}}}{{f{{Fl{{Cf{Cd}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Db}0{{{f{c}}{f{Cle}}}b{}{}}``{{{f{{l{c}}}}}{{Bd{{f{Al}}Bb}}}n}{{{f{Cl{l{c}}}}{f{{l{c}}}}Fn}bDb}{{{f{Cl{l{c}}}}{f{{l{e}}}}Fn}bDbDb}{{{f{{l{c}}}}}{{`{G`}}}n}{{}{{l{c}}}Db}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}e}{}n{A`Ab}}{{{l{c}}e}{}n{A`Ab}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}}bDb}{Ffb}0{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{c}}}}}{{f{{Gb{c}}}}}Db}{{{f{{l{Ad}}}}{f{Ah}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{An}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}nAb}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}n}{{{f{{l{Af}}}}{f{{Al{Aj}}}}}{{l{An}}}}872654130{{{f{{l{j}}}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}{{{f{{l{Bj}}}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}{{{f{Cl{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{Af}}}}{f{{Al{Aj}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{An}}}}d}{{Bd{{l{An}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{Bj}}}}{f{{l{An}}}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{Ad}}}}{f{{l{An}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{Af}}}}{f{{l{An}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{{Bl{c}}}}}}{f{{l{An}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{An}}}}{f{{l{An}}}}}{{Bd{{l{An}}Bb}}}}{{{f{{l{j}}}}{f{{l{An}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{El}}}}{f{{l{An}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}{f{{l{An}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{c}}}}}{{C`{Ff}}}Db}`{{{f{{l{Ad}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{Bj}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{{Bl{c}}}}}}{f{ClGj}}}{{Bd{bGl}}}Bn}{{{f{{l{Af}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{j}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{An}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{c}}}}{f{ClGj}}}{{Bd{bGl}}}n}{{{f{{l{c}}}}e}bDb{{Dn{C`}}}}{{{f{{l{Bj}}}}c}b{{Dn{{C`{Dl}}}}}}{{{f{{l{j}}}}c}b{{Dn{{C`{Dl}}}}}}{cc{}}{c{{l{e}}}Cd{{Db{}{{Gn{c}}}}}}1{{{f{Ah}}c}{{l{e}}}H`{{Db{}{{Gn{}}}}Db}}{{{f{{l{c}}}}e}{{l{c}}}{{Db{}{{Gn{}}}}Db}H`}{{{f{Ah}}{Fl{{Cf{Cd}}}}}{{l{c}}}Db}{{{f{Ah}}{Fl{{Cf{Cd}}}}Ed}{{l{c}}}Db}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{e{{l{j}}}{{Hd{B`}}}{{H`{}{{Cb{c}}}}}}{c{{l{j}}}{{H`{}{{Cb{{C`{B`}}}}}}}}{e{{l{Ad}}}{{Hf{Ah}}}{{H`{}{{Cb{{C`{c}}}}}}}}{c{{l{An}}}{{H`{}{{Cb{{C`{d}}}}}}}}{e{{l{Af}}}{{Hf{{Al{Aj}}}}}{{H`{}{{Cb{{C`{c}}}}}}}}{c{{l{e}}}{{H`{}{{Cb{C`}}}}}n}{c{{l{An}}}{{H`{}{{Cb{d}}}}}}{e{{l{Ad}}}{{Hh{Ah}}}{{H`{}{{Cb{c}}}}}}{e{{l{Af}}}{{Hh{{Al{Aj}}}}}{{H`{}{{Cb{c}}}}}}{e{{l{{Bl{c}}}}}Bn{{H`{}{{Cb{{C`{c}}}}}}}}{c{{l{e}}}{{H`{}{{Cb{{Gh{Fl{C`{Hj}}}}}}}}}n}{c{{l{j}}}{{H`{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{{{f{Ah}}e}{{l{Af}}}{{Hf{{Al{Aj}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Ah}}c}{{l{An}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{{{f{Ah}}c}{{l{e}}}{{Ch{}{{Cb{C`}}}}}n}{{{f{Ah}}e}{{l{Ad}}}{{Hf{Ah}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Ah}}e}{{l{{Bl{c}}}}}Bn{{Ch{}{{Cb{{C`{c}}}}}}}}7{e{{l{El}}}{{Hf{{Al{Aj}}}}}{{H`{}{{Cb{{C`{c}}}}}}}}{c{{l{j}}}{{H`{}{{Cb{{C`{B`}}}}}}}}{e{{l{El}}}{{Hh{{Al{Aj}}}}}{{H`{}{{Cb{c}}}}}}?;={e{{l{j}}}{{Hd{B`}}}{{H`{}{{Cb{c}}}}}}{c{{l{An}}}{{H`{}{{Cb{{C`{d}}}}}}}}{e{{l{Ad}}}{{Hf{Ah}}}{{H`{}{{Cb{{C`{c}}}}}}}}{c{{l{e}}}{{H`{}{{Cb{C`}}}}}n}{e{{l{Ad}}}{{Hh{Ah}}}{{H`{}{{Cb{c}}}}}}{{{f{Ah}}e}{{l{{Bl{c}}}}}Bn{{Ch{}{{Cb{c}}}}}}{{{f{Ah}}c}{{l{e}}}{{Ch{}{{Cb{}}}}}n}{{{f{Ah}}e}{{l{Af}}}{{Hf{{Al{Aj}}}}}{{Ch{}{{Cb{c}}}}}}{{{f{Ah}}c}{{l{An}}}{{Ch{}{{Cb{d}}}}}}{{{f{Ah}}e}{{l{Ad}}}{{Hf{Ah}}}{{Ch{}{{Cb{c}}}}}}`{e{{l{Af}}}{{Hf{{Al{Aj}}}}HlHn}{{I`{}{{Cb{{C`{c}}}}}}}}{c{{l{An}}}{{I`{}{{Cb{d}}}}}}{c{{l{An}}}{{I`{}{{Cb{{C`{d}}}}}}}}{e{{l{Af}}}{{Hh{{Al{Aj}}}}HlHnIb}{{I`{}{{Cb{c}}}}}}{e{{l{Ad}}}{{Hf{Ah}}HlHn}{{I`{}{{Cb{{C`{c}}}}}}}}{e{{l{Ad}}}{{Hh{Ah}}HlHnIb}{{I`{}{{Cb{c}}}}}}{c{{l{j}}}{{I`{}{{Cb{{C`{B`}}}}}}}}{c{{l{e}}}{{I`{}{{Cb{C`}}}}}n}{{c{f{Ah}}Ed}{{l{j}}}{{I`{}{{Cb{{C`{B`}}}}}}}}{{{f{Ah}}{f{{Al{c}}}}}{{l{Ad}}}{{Hf{Ah}}}}{{{f{Ah}}{f{{Al{c}}}}}{{l{Af}}}{{Hf{{Al{Aj}}}}}}{{{f{Ah}}{f{Al}}}{{l{c}}}n}{{{f{Ah}}{f{{Al{d}}}}}{{l{An}}}}{{{f{Ah}}{f{{Al{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}{f{{Al{C`}}}}}{{l{c}}}n}{{{f{Ah}}{f{{Al{{C`{c}}}}}}}{{l{Ad}}}{{Hf{Ah}}}}{{{f{Ah}}{f{{Al{{C`{d}}}}}}}{{l{An}}}}{{{f{Ah}}{f{{Al{{C`{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}{f{{Al{{C`{c}}}}}}}{{l{Af}}}{{Hf{{Al{Aj}}}}}}{c{{l{An}}}{{Id{}{{Cb{{C`{d}}}}}}}}{c{{l{e}}}{{Id{}{{Cb{C`}}}}}n}{{{f{Ah}}Fl}{{l{c}}}n}{{{f{Ah}}Fl{C`{Hj}}}{{l{c}}}n}{{{f{Ah}}Ff}{{l{c}}}n}{{{f{Ah}}{f{B`}}Ff}{{l{Bj}}}}{{{f{Ah}}{f{{Al{Aj}}}}Ff}{{l{El}}}}{{{f{Ah}}cFf}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}{f{Ah}}Ff}{{l{Ad}}}}{{{f{Ah}}{f{B`}}Ff}{{l{j}}}}{{{f{Ah}}dFf}{{l{An}}}}{{{f{Ah}}{f{{Al{Aj}}}}Ff}{{l{Af}}}}{{{f{Ah}}Ff}{{l{El}}}}{{{f{Ah}}Ff}{{l{Ad}}}}{{{f{Ah}}Ff}{{l{Bj}}}}{{{f{Ah}}Ff}{{l{Af}}}};{{{f{Ah}}Ff}{{l{j}}}}{{{f{Ah}}Ff}{{l{An}}}}{{{f{Ah}}Ff}{{l{{Bl{c}}}}}Bn}{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{Ah}}Ff{f{Ed}}Ff}{{l{Bj}}}}{{{f{Ah}}Ff{f{Ed}}}{{l{j}}}}{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{Af}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{Bj}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{{Bl{c}}}}}}Ff}{{Bd{IfBb}}}Bn}{{{f{{l{c}}}}Ff}{{Bd{IfBb}}}n}{{{f{{l{An}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{j}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{El}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{Ad}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{An}}}}Ff}If}{{{f{{l{c}}}}Ff}Ifn}{{{f{{l{Ad}}}}Ff}If}{{{f{{l{Af}}}}Ff}If}{{{f{{l{El}}}}Ff}If}{{{f{{l{Bj}}}}Ff}If}{{{f{{l{j}}}}Ff}If}{{{f{{l{{Bl{c}}}}}}Ff}IfBn}{{{f{{l{Bj}}}}Ff}{{C`{B`}}}}{{{f{{l{j}}}}Ff}{{C`{B`}}}}{{{f{{l{c}}}}}{{C`{Ih}}}Db}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}IjDb}{{{f{{l{Bj}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{c}}}}}{{C`{f}}}Db}0{{{f{{l{{Bl{c}}}}}}Ff}{{C`{{f{Il}}}}}Bn}0{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{Bj}}}}}Ff}{{{f{{l{Ad}}}}}Ff}{{{f{{l{j}}}}}Ff}{{{f{{l{El}}}}}Ff}{{{f{{l{Bj}}}}dd}{{Bd{BhBb}}}}{{{f{{l{El}}}}dd}{{Bd{BhBb}}}}{{{f{{l{{Bl{c}}}}}}dd}{{Bd{BhBb}}}Bn}{{{f{{l{j}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Af}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}dd}{{Bd{BhBb}}}n}{{{f{{l{An}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Ad}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}FfdFf}BhF`}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{An}}}}{{{f{{l{Ad}}}}{f{Ah}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}nAb}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{An}}}}{{{f{{l{Af}}}}{f{{Al{Aj}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}n}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}763812054{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{}Ff}0{{FfIn{C`{J`}}}{{l{c}}}n}{{{f{{l{j}}}}}Ed}{{{f{{l{Bj}}}}}Ed}{ce{}{}}0{{{l{Jb}}}{{Jf{JdJb}}}}{{{l{Jh}}Jj{C`{Ef}}}{{Jf{JlJh}}}}{{{l{Jn}}{C`{Ff}}Ff}{{Bd{{Jf{K`Jn}}Bb}}}}{{{l{Jn}}{C`{Ff}}Ff}{{Jf{K`Jn}}}}{{{l{Jh}}Jj}{{Jf{KbJh}}}}{{{f{{l{j}}}}}}{{{f{{l{El}}}}}}{{{f{{l{An}}}}}}{{{f{{l{Ad}}}}}}{{{f{{l{Af}}}}}}{{{f{{l{c}}}}}{}n}{{{f{{l{{Bl{c}}}}}}}{}Bn}{{{f{{l{Bj}}}}}}{{{f{{l{c}}}}}{{`{HlHnKdG`Id}}}n}{{{l{Jn}}}B`}{{{l{c}}}B`Db}{{{l{Jh}}}{{Jf{KfJh}}}}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}{{l{An}}}Kh}000{{{f{{l{c}}}}}{{l{An}}}Db}02{{{f{{l{c}}}}}KjDb}{{{f{{l{c}}}}}{{`{Kl}}}Db}{{{f{{l{j}}}}}{{`{{Ch{}{{Cb{Gd}}}}}}}}{{{f{{l{c}}}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{{C`{{f{Hj}}}}}}}}}}}Db}`{{{f{{l{c}}}}}C`Db}{{{f{{l{c}}}}}{{C`{Ff}}}Db}{{{f{{l{c}}}}}{{Kn{c}}}Db}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}}{}n}{{{l{c}}}{}n}10{{{f{{l{c}}}}}FfDb}{{{f{{l{c}}}}e}{{l{c}}}n{A`L`}}00{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{{l{c}}}}e}{{l{An}}}nAb}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Ad}}}}{f{Ah}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}n}{{{f{{l{Af}}}}{f{{Al{Aj}}}}}{{l{An}}}}346587120{{{f{{l{c}}}}}C`n}{{{f{{l{An}}}}}{{C`{d}}}}{{{f{{l{Ad}}}}}Lb}{{{f{{l{Af}}}}}Lb}{{{f{{l{c}}}}}Lbn}{{{f{{l{An}}}}}Lb}{{{f{{l{c}}}}}{{C`{Ld}}}n}{{{f{{l{An}}}}}{{C`{Ld}}}}{{{f{{l{Eb}}}}}{{C`{Ld}}}}{{{f{{l{c}}}}}{{C`{Ld}}}F`}{{{f{{l{E`}}}}}{{C`{In}}}}{{{f{{l{c}}}}}LbF`}{{{f{{l{Eb}}}}}Lb}{{{f{{l{E`}}}}}Lb}`{{{f{{l{c}}}}}{{C`{{f{{Gb{c}}}}}}}Db}{{{f{{l{c}}}}}{{C`{{f{{Lf{{Gb{c}}}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Lf{{Gb{c}}}}}}}Db}{{{f{{l{c}}}}}{{Lf{{Gb{c}}}}}Db}{{{f{{l{An}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`n}{{{f{{l{c}}}}}{{C`{Gh}}}n}?{{{f{{l{c}}}}}Lbn}{{{f{{l{Af}}}}}Lb}{{{f{{l{Ad}}}}}Lb}{{{f{Ah}}{f{Al}}}{{l{c}}}n}{{{f{Ah}}{f{{Al{Aj}}}}FfFf}{{l{An}}}}{{{f{{l{c}}}}e}{}n{A`Ab}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}{{{l{c}}e}{}n{A`Ab}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Ad}}}}}{{Bd{FfBb}}}}{{{f{{l{Af}}}}}{{Bd{FfBb}}}}{{{f{{l{c}}}}}{{Bd{FfBb}}}n}{{{f{{l{c}}}}}{{f{Ah}}}Db}{{{f{Ah}}c}{{l{Af}}}{{Hf{{Al{{Dj{{Al{Aj}}}}}}}}}}{{{f{Ah}}c}{{l{Ad}}}{{Hf{{Al{Ef}}}}}}{{{f{Ah}}c}{{l{Lh}}}{{Hf{{Al{Aj}}}}}}{{{f{Ah}}e}{{l{{Bl{c}}}}}Bn{{Hf{{Al{{C`{c}}}}}}}}{{{f{Ah}}c}{{l{Lj}}}{{Hf{{Al{Ll}}}}}}{{{f{Ah}}c}{{l{An}}}{{Hf{{Al{{C`{d}}}}}}}}{{{f{Ah}}c}{{l{Lj}}}{{Hf{{Al{{C`{Ll}}}}}}}}{{{f{Ah}}c}{{l{Jh}}}{{Hf{{Al{{C`{Gd}}}}}}}}{{{f{Ah}}c}{{l{An}}}{{Hf{{Al{d}}}}}}{{{f{Ah}}{Ln{Ih}}}{{l{Ej}}}}{{{f{Ah}}c}{{l{Af}}}{{Hf{{Al{{C`{{Fl{Aj}}}}}}}}}}{{{f{Ah}}c}{{l{Jb}}}{{Hf{{Al{M`}}}}}}{{{f{Ah}}c}{{l{Mb}}}{{Hf{{Al{Md}}}}}}{{{f{Ah}}c}{{l{Ej}}}{{Hf{{Al{Ih}}}}}}{{{f{Ah}}c}{{l{Jh}}}{{Hf{{Al{Gd}}}}}}{{{f{Ah}}c}{{l{Ad}}}{{Hf{{Al{{C`{Ef}}}}}}}}{{{f{Ah}}c}{{l{Mf}}}{{Hf{{Al{J`}}}}}}{{{f{Ah}}c}{{l{Af}}}{{Hf{{Al{{f{{Al{Aj}}}}}}}}}}{{{f{Ah}}c}{{l{Mh}}}{{Hf{{Al{{C`{Mj}}}}}}}}{{{f{Ah}}c}{{l{Af}}}{{Hf{{Al{{C`{{Dj{{Al{Aj}}}}}}}}}}}}{{{f{Ah}}c}{{l{Ad}}}{{Hf{{Al{{C`{{f{Ah}}}}}}}}}}{{{f{Ah}}c}{{l{Jb}}}{{Hf{{Al{{C`{M`}}}}}}}}{{{f{Ah}}c}{{l{Mb}}}{{Hf{{Al{{C`{Md}}}}}}}}{{{f{Ah}}{Ln{Gd}}}{{l{Jh}}}}{{{f{Ah}}c}{{l{E`}}}{{Hf{{Al{In}}}}}}{{{f{Ah}}c}{{l{Lh}}}{{Hf{{Al{{C`{Aj}}}}}}}}{{{f{Ah}}{Ln{M`}}}{{l{Jb}}}}{{{f{Ah}}c}{{l{Ad}}}{{Hf{{Al{{f{Ah}}}}}}}}{{{f{Ah}}c}{{l{Mf}}}{{Hf{{Al{{C`{J`}}}}}}}}{{{f{Ah}}c}{{l{Eb}}}{{Hf{{Al{{C`{Ld}}}}}}}}{{{f{Ah}}{Ln{J`}}}{{l{Mf}}}}{{{f{Ah}}c}{{l{Eb}}}{{Hf{{Al{Ld}}}}}}{{{f{Ah}}c}{{l{Af}}}{{Hf{{Al{{C`{{f{{Al{Aj}}}}}}}}}}}}{{{f{Ah}}c}{{l{Af}}}{{Hf{{Al{{Fl{Aj}}}}}}}}{{{f{Ah}}c}{{l{Ej}}}{{Hf{{Al{{C`{Ih}}}}}}}}{{{f{Ah}}{f{{Al{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}c}{{l{Ad}}}{{Hf{{Al{{C`{{Dj{Ah}}}}}}}}}}{{{f{Ah}}c}{{l{Mh}}}{{Hf{{Al{Mj}}}}}}{{{f{Ah}}c}{{l{Ad}}}{{Hf{{Al{{Dj{Ah}}}}}}}}{{{f{Ah}}c}{{l{E`}}}{{Hf{{Al{{C`{In}}}}}}}}{{{f{Ah}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{c}}}}FfFf}{{l{c}}}n}{{{f{{l{Bj}}}}FfFf}{{l{Bj}}}}{{{f{{l{An}}}}FfFf}{{l{An}}}}{{{f{{l{Af}}}}FfFf}{{l{Af}}}}{{{f{{l{j}}}}FfFf}{{l{j}}}}{{{f{{l{Ad}}}}FfFf}{{l{Ad}}}}{{{f{{l{{Bl{c}}}}}}FfFf}{{l{{Bl{c}}}}}Bn}{{{f{{l{El}}}}FfFf}{{l{El}}}}{{{f{Ah}}{Fl{c}}}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}{Fl{c}}Hj}{{l{{Bl{c}}}}}Bn}{{{f{Ah}}Fl}{{l{c}}}n}{{{Lf{Ml}}{Fl{{Cf{Cd}}}}}{{l{c}}}Db}{{{Lf{Ml}}{Fl{{Cf{Cd}}}}IhIh}{{l{c}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kh}{{{l{An}}}}{{{f{{l{An}}}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Af}}}}{f{{Al{Aj}}}}}{{l{An}}}}{{{f{{l{Af}}}}{f{{l{Af}}}}}{{l{An}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}n}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}nAb}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{Ad}}}}{f{Ah}}}{{l{An}}}}058{{{f{{l{Bj}}}}{f{{l{Bj}}}}}}85372{{{f{{l{c}}}}}FfDb}`{{{f{{l{j}}}}}{{Bd{{Gf{Gd}}Bb}}}}{{{f{{l{Bj}}}}}{{Bd{{Gf{Gd}}Bb}}}}`{{{f{{l{j}}}}}{{`{{Mn{}{{Cb{{C`{B`}}}}}}}}}}{{{f{{l{Ad}}}}}{{`{{Mn{}{{Cb{{C`{{f{Ah}}}}}}}}}}}}{{{f{Cl{l{j}}}}}{{`{N`}}}}{{{f{{l{Ad}}}}}{{`{N`}}}}{{{f{{l{c}}}}}Lbn}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}LdNb}{{Bd{{C`{Ld}}Bb}}}F`}{{{f{{l{Eb}}}}LdNb}{{Bd{{C`{Ld}}Bb}}}}{{{f{{l{E`}}}}LdNb}{{Bd{{C`{In}}Bb}}}}{{{f{{l{Eb}}}}LdNb}{{Bd{LbBb}}}}{{{f{{l{E`}}}}LdNb}{{Bd{LbBb}}}}{{{f{{l{c}}}}LdNb}{{Bd{LbBb}}}F`}{{{f{Ah}}FfLd}{{Bd{{l{An}}Bb}}}}{{{f{Ah}}FfLdLd}{{Bd{{l{c}}Bb}}}n}{{{f{Ah}}Ff}{{l{c}}}n}{{{f{Ah}}FfLdLd}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Ml}}}Db}{{{f{{l{E`}}}}}B`}{{{f{{l{Ej}}}}}B`}{{{f{{l{Mf}}}}}B`}{{{f{{l{Jh}}}}}B`}{{{f{{l{Mh}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{Lj}}}}}B`}{{{f{{l{Mb}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{Lh}}}}}B`}{{{f{{l{Jb}}}}}B`}:9680123745{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}e}{}n{A`Ab}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}e}{}n{A`Ab}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}{f{Ah}}}bDb}{{{f{{l{Ad}}}}}{{l{Ad}}}}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{Af}}}}}{{l{Af}}}}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{El}}}}}{{l{El}}}}{{{f{{l{{Bl{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{c}}}}{f{Df}}Nd}{{Bd{B`Bb}}}n}{{{f{{l{c}}}}Ffe}{{Bd{{l{c}}Bb}}}Kh{{Dn{{f{Cl{l{c}}}}}{{Dd{C`}}}}}}{{{f{{l{c}}}}Lddd{C`{J`}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}Ffdd{C`{J`}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{An}}}}{f{{Al{Ih}}}}c}{{Bd{B`Bb}}}{{H`{}{{Cb{{C`{d}}}}}}}}{{{f{{l{Ad}}}}{f{{Al{Ih}}}}c}{{Bd{B`Bb}}}{{H`{}{{Cb{{C`{{f{Ah}}}}}}}}}}{{{l{c}}{f{{Al{Ih}}}}e}{{Bd{B`Bb}}}Nf{{H`{}{{Cb{C`}}}}}}{{{f{{l{Af}}}}c{C`{{f{{Al{Aj}}}}}}}{{Bd{{l{Af}}Bb}}}{{H`{}{{Cb{Ih}}}}}}{{{f{{l{An}}}}c{C`{d}}}{{Bd{{l{An}}Bb}}}{{H`{}{{Cb{Ih}}}}}}{{{f{{l{Ad}}}}c{C`{{f{Ah}}}}}{{Bd{{l{Ad}}Bb}}}{{H`{}{{Cb{Ih}}}}}}{{{f{{l{c}}}}eC`}{{Bd{{l{c}}Bb}}}n{{H`{}{{Cb{Ih}}}}}}{{{f{{l{An}}}}ce}{{Bd{{l{An}}Bb}}}{{H`{}{{Cb{Ih}}}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}}}{{{f{{l{Ad}}}}ce}{{Bd{{l{Ad}}Bb}}}{{H`{}{{Cb{Ih}}}}}{{Df{{C`{{f{Ah}}}}}{{Dd{{C`{Ef}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}n{{H`{}{{Cb{Ih}}}}}{{Df{C`}{{Dd{C`}}}}}}{{{f{{l{Af}}}}ce}{{Bd{{l{Af}}Bb}}}{{H`{}{{Cb{Ih}}}}}{{Df{{C`{{f{{Al{Aj}}}}}}}{{Dd{{C`{{Fl{Aj}}}}}}}}}}{{{f{{l{Ad}}}}{f{{l{An}}}}{C`{{f{Ah}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{An}}}}{f{{l{An}}}}{C`{d}}}{{Bd{{l{An}}Bb}}}}{{{f{{l{c}}}}{f{{l{An}}}}C`}{{Bd{{l{c}}Bb}}}n}{{{f{{l{Af}}}}{f{{l{An}}}}{C`{{f{{Al{Aj}}}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{Cl{l{j}}}}}b}{{{f{Cl{l{c}}}}d}bDb}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{c}}}}Ih}bDb}{{{f{Cl{l{c}}}}Kj}bDb}{{{f{{l{{Bl{c}}}}}}Gd}{{l{{Bl{c}}}}}Bn}{{{f{{l{Ad}}}}Gd}{{l{Ad}}}}{{{f{{l{Bj}}}}Gd}{{l{Bj}}}}{{{f{{l{An}}}}Gd}{{l{An}}}}{{{f{{l{c}}}}Gd}{{l{c}}}n}{{{f{{l{El}}}}Gd}{{l{El}}}}{{{f{{l{j}}}}Gd}{{l{j}}}}{{{f{{l{Af}}}}Gd}{{l{Af}}}}{{{f{{l{Af}}}}Gd{C`{{f{{Al{Aj}}}}}}}{{l{Af}}}}{{{f{{l{Ad}}}}Gd{C`{{f{Ah}}}}}{{l{Ad}}}}{{{f{{l{An}}}}Gd{C`{d}}}{{l{An}}}}{{{f{{l{{Bl{c}}}}}}Gd{C`{{Bl{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{El}}}}Gd{C`{{f{{Al{Aj}}}}}}}{{l{El}}}}{{{f{{l{j}}}}Gd{C`{{f{B`}}}}}{{l{j}}}}{{{f{{l{Bj}}}}Gd{C`{{f{B`}}}}}{{l{Bj}}}}{{{f{{l{c}}}}GdC`}{{l{c}}}n}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}GdFf}{{l{c}}}Db}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{Af}}}}d}{{l{Af}}}}{{{f{{l{El}}}}d}{{l{El}}}}{{{f{{l{Ad}}}}d}{{l{Ad}}}}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Eh}{{l{c}}}n}{{{f{{l{An}}}}Eh}{{l{An}}}}{{{f{{l{El}}}}Eh}{{l{El}}}}{{{f{{l{Af}}}}Eh}{{l{Af}}}}{{{f{{l{Ad}}}}Eh}{{l{Ad}}}}{{{f{{l{c}}}}Aj}{{C`{Ld}}}n}{{{f{{l{E`}}}}Aj}Lb}{{{f{{l{Eb}}}}Aj}Lb}{{{f{{l{c}}}}Aj}LbF`}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}e}{}n{A`Ab}}{{{f{{l{c}}}}e}{}n{A`Ab}}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}C`n}{{{f{{l{An}}}}}{{C`{Ih}}}}{{{f{{l{Af}}}}}Lb}{{{f{{l{c}}}}}Lbn}{{{f{{l{An}}}}}Lb}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Db{{Hf{{Al{Ih}}}}Nh}}{{{f{{l{c}}}}{f{{l{Ej}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}{f{{Al{Nj}}}}Kj}{{l{c}}}Db}{{{f{{l{c}}}}{f{{Al{Nj}}}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Db{}{{Nl{D`}}}}Db}{{Hf{{Al{Ih}}}}Nh}}{{{f{{l{Ad}}}}{f{{l{Ej}}}}}{{l{Ad}}}}{{{f{{l{Ad}}}}{f{c}}}{{l{Ad}}}{{Hf{{Al{Ih}}}}Nh}}{{{f{{l{Af}}}}{f{{l{Ej}}}}}{{l{Af}}}}{{{f{{l{Af}}}}{f{c}}}{{l{Af}}}{{Hf{{Al{Ih}}}}Nh}}{{{f{{l{c}}}}{f{{l{Ej}}}}}{{l{c}}}{{Db{}{{Nl{D`}}}}Db}}`{{{f{{l{c}}}}dNn}{{Fl{{Fl{O`}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kh}{{{f{{l{Ad}}}}Ff}{{Bd{B`Bb}}}}{{{f{Cl{l{Bj}}}}Ed}b}{{{f{Cl{l{j}}}}Ed}b}{{{f{{l{c}}}}}{{Bd{{Oh{{Ob{f}}{Of{{Od{Ff}}}}}}Bb}}}n}{{{f{{l{j}}}}}{{Bd{{Oh{Oj{Of{{Od{Ff}}}}}}Bb}}}}{{{f{c}}}e{}{}}{{{f{{l{Af}}}}}{{l{Ad}}}}{{{f{{l{c}}}}}{{Fl{C`}}}n}{{{f{{l{c}}}}}{{Ol{Fl{Fl{C`}}}}}n}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}}{}n}{{{f{{l{c}}}}}{}n}01{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bj}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bj}}}}c}{{Bd{{l{Bj}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{Bj}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}Dh}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{c{{Bd{e}}}{}{}}0{{{f{Ah}}g}{{Bd{{l{i}}e}}}Cd{}{{H`{}{{Cb{{Bd{ce}}}}}}}{{Db{}{{Gn{c}}}}Db}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}}}{{{f{c}}}On{}}0{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{An}}}}}{{Bd{{l{An}}Bb}}}}{{{f{{l{Af}}}}}{{Bd{{l{Af}}Bb}}}}{{{f{{l{Ad}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}Ff}{}Db}{{{f{{l{c}}}}Aj}{{C`{Ld}}}n}{{{f{{l{Eb}}}}Aj}Lb}{{{f{{l{c}}}}Aj}LbF`}{{{f{{l{E`}}}}Aj}Lb}{{{f{{l{Ej}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{An}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jb}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Lj}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jh}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Ad}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Lh}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mb}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jn}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Af}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mb}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Af}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Ej}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{An}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jb}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Lh}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Lj}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jh}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jn}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Ad}}}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}{ce{}{}}0{{{f{{l{Bj}}}}}Ff}{{{f{Ah}}c}{{l{e}}}Cd{{Db{}{{Gn{c}}}}Db}}{{{f{{l{c}}}}{Fl{{Cf{Cd}}}}}{{l{c}}}Db}{{{l{c}}{f{Ah}}}{{l{c}}}Db}{{{f{{Al{A@`}}}}e}c{}{{A@b{{f{{l{Ej}}}}}{{Dd{c}}}}}}{{{f{{l{c}}}}Kj}{{l{c}}}Db}{{{l{c}}}{}n}{{{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}32103232013223102332012332013232{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{Bj}}}}{f{{l{c}}}}e}{{l{Bj}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{An}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}c}e{}{}{}}{{c{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}g{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}c}g{}{}{}}{{c{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}g{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{ClA@l}}{f{Cd}}}b}{{{f{ClA@l}}}b}{{{f{ClA@n}}}b}{{{f{ClAA`}}c}b{{Ch{}{{Cb{{C`{d}}}}}}Id}}{{{f{Cl{AAb{c}}}}e}bn{{Ch{}{{Cb{C`}}}}Id}}{{{f{Cl{AAb{c}}}}e}bn{{Ch{}{{Cb{}}}}Id}}{{{f{ClAAd}}}b}{{{f{ClAAf}}}b}65{{{f{ClAAh}}}b}{{{f{ClAAj}}}b}{{{f{ClAA`}}}b}{{{f{ClAAl}}}b}{{{f{Cl{AAb{c}}}}}bn}{{{f{Cl{AAn{c}}}}}b{AB`Nh}}{{{f{ClABb}}}b}{{{f{ClABd}}}b}{{{f{Cl{ABf{c}}}}}bn}{{{f{ClA@l}}{C`{{f{Cd}}}}}b}{{{f{ClA@l}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAd}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cl{AAb{c}}}}{C`{{f{Al}}}}}bn}{{{f{Cl{AAn{c}}}}{C`{e}}}b{AB`Nh}{{Hf{c}}}}{{{f{ClAAf}}{C`{c}}}b{}}{{{f{ClAAd}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@l}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@n}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAh}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAA`}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAl}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cl{AAb{c}}}}{f{B`}}}{{Bd{bBb}}}n}{{{f{Cl{AAb{c}}}}{f{Al}}}bn}{{{f{ClAAh}}c}b{{Ch{}{{Cb{{C`{{f{Ah}}}}}}}}Id}}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{C`{{f{{Al{Aj}}}}}}}}}}Id}}{{{f{ClAAf}}c}b{}}{{{f{Cl{AAn{c}}}}e}b{AB`Nh}{{Hf{c}}}}{{{f{ClABb}}d}b}{{{f{Cl{ABf{c}}}}}bn}{{{f{ClAAh}}c}b{{Ch{}{{Cb{{f{Ah}}}}}}}}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{f{{Al{Aj}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000000`{{{f{{AAn{c}}}}}{{AAn{c}}}{AB`Nh}}{{{f{ABb}}}ABb}{{{f{ABd}}}ABd}{{{f{{ABf{c}}}}}{{ABf{c}}}{ABhn}}{{{f{c}}{f{Cle}}}b{}{}}000{{}A@l}{{}A@n}{Ff{{f{c}}}{}}0000000000{Ff{{f{Clc}}}{}}0000000000{Ffb}0000000000{{{f{AAh}}}d}{{{f{AAj}}}d}{{{f{AA`}}}d}{{{f{{AAb{c}}}}}dn}{{{f{AAd}}}d}{{{f{AAh}}}{{f{Ml}}}}{{{f{AAj}}}{{f{Ml}}}}{{{f{AA`}}}{{f{Ml}}}}{{{f{{AAb{c}}}}}{{f{Ml}}}n}{{{f{AAd}}}{{f{Ml}}}}{AAf{{l{c}}}Db}{{{f{ClA@l}}}{{l{j}}}}{{{f{ClA@n}}}{{l{j}}}}{{{f{ClAAl}}}{{l{j}}}}{{{f{ClAAd}}}{{l{j}}}}{{{AAn{Ah}}}{{l{Ad}}}}{{{AAn{{Al{Aj}}}}}{{l{Af}}}}{ABb{{l{An}}}}{ABdABj}{{{ABf{c}}}{{l{c}}}n}`{cc{}}0000000000{{{f{Ah}}e}ABl{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Ah}}e}ABl{}{{Ch{}{{Cb{c}}}}}}{{{f{Ah}}{f{{Al{c}}}}}ABl{}}{{{f{Ah}}{f{{Al{{C`{c}}}}}}}ABl{}}{{{f{Ed}}FfFf{f{Ah}}}{{Bd{{Cf{AAd}}Bb}}}}{{}Ff}0000000000{{{f{ClAAh}}}{{Cf{Cd}}}}{{{f{ClAAj}}}{{Cf{Cd}}}}{{{f{ClAA`}}}{{Cf{Cd}}}}{{{f{Cl{AAb{c}}}}}{{Cf{Cd}}}n}{{{f{ClAAd}}}{{Cf{Cd}}}}{ce{}{}}0000000000`{{{f{Ah}}Ff{C`{Ed}}}A@l}{{{f{Ah}}Ff{C`{Ed}}}A@n}{{{f{Ah}}FfFf}AAh}{{{f{Ah}}FfFf}AAj}{{{f{Ah}}FfFf}AA`}{{{f{Ah}}Ff}AAl}{{{f{Ah}}FfFfEd}{{AAb{c}}}n}{{{f{Ah}}Ff}{{AAn{c}}}{AB`Nh}}{{{f{Ah}}Ff}ABb}{{{f{Ah}}Ff}ABd}{{{f{Ah}}Ff}{{ABf{c}}}n}{{{f{Ah}}FfFfEdEd}{{AAb{c}}}n}{{{f{ClAAf}}}b}{{{f{ClABb}}}b}{{{f{ClABd}}}b}{{{f{Cl{ABf{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}On{}}0000000000{ce{}{}}0000000000````````{{{f{ClAAd}}}b}{{{f{ClAAd}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAd}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AAd}}}d}{{{f{AAd}}}{{f{Ml}}}}{{{f{ClAAd}}}{{l{j}}}}{{{f{Ed}}FfFf{f{Ah}}}{{Bd{{Cf{AAd}}Bb}}}}{{{f{ClAAd}}}{{Cf{Cd}}}}``{{ABn{f{Ah}}}{{l{c}}}Db}{{AC`{f{{l{c}}}}}{{l{c}}}Db}10{{AC`{f{Ah}}Ed}{{l{c}}}Db}0{{ABn{f{Ah}}}{{Bd{{l{c}}e}}}Db{}}{{AC`{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{AC`{f{Ah}}Ed}{{Bd{{l{c}}e}}}Db{}}0`{ACbACb}``{{ACd{f{Ah}}Ed}e{}{{ACf{c}}}}{{e{f{Ah}}Ed}ACf{}{{I`{}{{Cb{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Clc}}}{{f{Cle}}}{}{}}000{Ff{{f{c}}}{}}000{Ff{{f{Clc}}}{}}000{Ffb}000{cc{}}000{{}Ff}000{ce{}{}}0000000{{{f{ACh}}}ACj}{{{f{ACl}}Ed}ACn}{{{f{ClACj}}}C`}{{{f{ClACn}}}C`}{{{f{ClAD`}}}C`}{{{f{Cl{ADb{c}}}}}C`Ch}32{{{f{Cl{ADb{c}}}}}C`G`}`{{{f{ACj}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{ACn}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{{ADb{c}}}}}{{Gh{Ff{C`{Ff}}}}}Ch}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}On{}}000<<<<``````````````{{{f{c}}h}b{}}00{{}Fn}{{}Ij}{{FnFn}Fn}{{IjIj}Ij}{{{f{ClFn}}Fn}b}{{{f{ClIj}}Ij}b}3210{{{f{Fn}}}Ih}0{{{f{Ij}}}Aj}05432{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{{Gb{c}}}}}{{Gb{c}}}Db}{{{f{Fn}}}Fn}{{{f{Ij}}}Ij}{{{f{c}}{f{Cle}}}b{}{}}00{FnFn}{IjIj}{{{f{Fn}}Fn}d}{{{f{Ij}}Ij}d}{{}{{Gb{c}}}Db}{{}Fn}{{}Ij}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00{{FnFn}Fn}{{IjIj}Ij}{Ffb}0065{{{f{Fn}}{f{Fn}}}d}{{{f{Ij}}{f{Ij}}}d}{{{f{ClFn}}c}b{{H`{}{{Cb{Fn}}}}}}{{{f{ClIj}}c}b{{H`{}{{Cb{Ij}}}}}}{{{f{{Gb{c}}}}{f{ClGj}}}{{Bd{bGl}}}Db}{{{f{Fn}}{f{ClGj}}}{{Bd{bGl}}}}0000{{{f{Ij}}{f{ClGj}}}{{Bd{bGl}}}}0000{cc{}}00{Ih{{C`{Fn}}}}{Aj{{C`{Ij}}}}{IhFn}0{AjIj}010{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}0{cFn{{H`{}{{Cb{Fn}}}}}}{cIj{{H`{}{{Cb{Ij}}}}}}{{{f{Ah}}}{{C`{Fn}}}}{{{f{Ah}}}{{C`{Ij}}}}{{{f{{Gb{c}}}}}{{C`{Ih}}}Db}{{{f{{Gb{c}}}}}dDb}{{{f{Ij}}}d}{{{f{{Gb{c}}}}}IjDb}{{{f{{Gb{c}}}}}{{C`{f}}}Db}0{{{f{Ij}}}Kj}{{}Ff}00{{{f{ClFn}}Fn}b}{{{f{ClIj}}Ij}b}{{FnFn}Fn}{{IjIj}Ij}{{{f{Fn}}Fn}d}{{{f{Ij}}Ij}d}{ce{}{}}00{Fn}{Ij}{{{f{Fn}}}d}>0>{{{f{{Gb{c}}}}}KjDb}{{{f{{Gb{c}}}}}dDb}0{{{f{Fn}}}{{ADd{Fn}}}}{{{f{Ij}}}{{ADd{Ij}}}}{{{f{Fn}}}{{ADf{Fn}}}}{{{f{Ij}}}{{ADf{Ij}}}}{FnFn}{IjIj}{{{f{ClFn}}Fn}b}{{{f{ClIj}}Ij}b}{{{f{ClFn}}Fnd}b}{{{f{ClIj}}Ijd}b}{{{f{Cl{Gb{c}}}}{C`{Ih}}}bDb}{{{f{Cl{Gb{c}}}}d}bDb}{{{f{Cl{Gb{c}}}}Ij}bDb}{{{f{Cl{Gb{c}}}}C`}bDb}022{{{f{Cl{Gb{c}}}}Kj}bDb}{{{f{ClIj}}Kj}b}{{FnFn}Fn}{{IjIj}Ij};:10{{{f{c}}}e{}{}}00<;{c{{Bd{e}}}{}{}}00000{{{f{c}}}On{}}0043{ce{}{}}00````{{{f{c}}h}b{}}{e{{ADh{c}}}Bn{{H`{}{{Cb{{f{c}}}}}}}}{e{{ADh{c}}}Bn{{H`{}{{Cb{{C`{{f{c}}}}}}}}}}{{ADje}g{}{{H`{}{{Cb{c}}}}}{}}0{{{f{Il}}}{{f{ADl}}}}{{{f{{ADh{c}}}}}{{f{ADl}}}Bn}{{{f{Cl{ADh{c}}}}}{{f{ClADl}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`{{{f{{ADh{c}}}}}{{ADh{c}}}{ABhBn}}{{{f{c}}{f{Cle}}}b{}{}}{{{f{{ADh{c}}}}}{{f{ADj}}}Bn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{{f{Il}}}}{f{{f{Il}}}}}d}{{{f{Il}}{f{Il}}}d}{{{f{{ADh{c}}}}{f{ClGj}}}{{Bd{bGl}}}{ADnBn}}{cc{}}{{FfADj}{{ADh{c}}}Bn}{{{f{{ADh{c}}}}Ff}{{C`{{f{c}}}}}Bn}{{}ADj}{{{f{Hj}}{f{{ADh{c}}}}{f{{ADh{c}}}}}{{ADh{c}}}Bn}{{ADj{f{Hj}}}{{ADh{c}}}Bn}{{{f{Hj}}{f{{ADh{c}}}}}{{ADh{c}}}Bn}0{{}Ff}{ce{}{}}{{{f{{ADh{c}}}}}{}Bn}{{{f{{ADh{c}}}}Ff}dBn}{{{f{c}}Ff}d{}}1{{{f{{ADh{c}}}}}{{AEb{AE`}}}Bn}{{{f{{ADh{c}}}}}{{AEb{{f{c}}{Fd{c}}AE`}}}Bn}{{{f{{ADh{c}}}}}FfBn}0`{{{f{Cl{ADh{c}}}}{C`{Hj}}}bBn}{{{f{Cl{ADh{c}}}}FfFf}bBn}{{{f{c}}FfFf}e{}{}}01{{{f{Il}}}{{Cf{Il}}}}{{{f{{ADh{c}}}}}{{Cf{Cd}}}Bn}{{{f{c}}}e{}{}}{g{{Bd{{ADh{c}}e}}}Bn{}{{H`{}{{Cb{{Bd{{C`{{f{c}}}}e}}}}}}}}{g{{Bd{{ADh{c}}e}}}Bn{}{{H`{}{{Cb{{Bd{{f{c}}e}}}}}}}}{{ADjg}{{Bd{ie}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}{{{f{Il}}}{{f{Ah}}}}{{}{{f{Ah}}}}{{{f{{ADh{c}}}}}{{C`{{f{Hj}}}}}Bn}{{{f{{ADh{c}}}}Ff}{{f{c}}}Bn}0{{{f{{ADh{c}}}}Ff}{}Bn}{{{f{{ADh{c}}}}}{{f{{Lf{{Fl{c}}}}}}}Bn}{{{f{{ADh{c}}}}}{{Fd{c}}}Bn}{{{f{{ADh{c}}}}}{}Bn}{ce{}{}}{{{f{{ADh{c}}}}{C`{Hj}}}{{Cf{Cd}}}Bn}{{{ADh{c}}{C`{Hj}}}{{ADh{c}}}Bn}0`{{{f{Cl{AEd{c}}}}}bBn}0{{{f{Cl{AEd{c}}}}{C`{c}}}bBn}{{{f{Cl{AEd{c}}}}{f{ADl}}}bBn}{{{f{Cl{AEd{c}}}}c}bBn}{{{f{Cl{AEd{c}}}}{f{ADl}}}{{Bd{bBb}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}{{AEd{c}}}Bn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{AEd{c}}}{{l{{Bl{c}}}}}Bn}{cc{}}{{}Ff}{ce{}{}}{{{f{Ah}}Ff}{{AEd{c}}}Bn}{{{f{Cl{AEd{c}}}}}B`Bn}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}4````{{{f{ClAEf}}}b}{{{f{ClAEf}}{C`{{f{ADl}}}}}b}{{{f{ClAEf}}{f{ADl}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`?>={{{f{AEh}}{f{ClGj}}}{{Bd{bGl}}}}<{{{f{Ah}}Ff}{{Cf{AEf}}}}{{}{{Lf{Df}}}}{{}ADj}>={{}d}`{{{Cf{Df}}{Lf{Df}}ADj}b}{{{f{ClAEf}}}B`}==<{ce{}{}}````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AEl{}{{AEj{c}}}}}}g}{{AEl{}{{AEj{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{AEn}}{f{Df}}}AEn}{{{f{AEn}}{f{Df}}}{{l{c}}}Db}{{{f{{AEl{}{{AEj{c}}}}}}i{f{Cl{Al{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AEl{}{{AEj{c}}}}}}g}{{AEl{}{{AEj{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{{f{AF`}}Eh}{{l{Ej}}}}{{{f{AF`}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AFb}}}{{Bd{{l{Ej}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{AFd}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{Eh}}}Eh}{{{f{En}}}En}{{{f{AFf}}}AFf}{{{f{c}}{f{Cle}}}b{}{}}00{{}Eh}{{}En}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00``{Ffb}00{{{f{Eh}}{f{Eh}}}d}{{{f{En}}{f{En}}}d}{{{f{AFf}}{f{AFf}}}d}{{{f{{AFh{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AFj}}}{{Bd{B`Bb}}}}{{{f{AFj}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}`{{{f{AFl}}c}{{Bd{AFlBb}}}{}}{{{f{AFn}}{f{{l{An}}}}}{{Bd{{l{c}}Bb}}}Db}`{{{f{Eh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{En}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AFf}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{En}}}Eh}{{{f{Eh}}}En}22`{{{f{Ah}}cFf}AG`{}}{{{f{Ah}}Ff}AGb}`{{{f{AGd}}Ff}{{Bd{IfBb}}}}{{{f{AGd}}Ff}If}??{{{f{Eh}}{f{Clc}}}bAGf}{{{f{En}}{f{Clc}}}bAGf}{{{f{AFf}}{f{Clc}}}bAGf}{{}Ff}00{ce{}{}}00{{{f{AGh}}}{{Bd{{l{An}}Bb}}}}{{{f{AGj}}}{{Bd{{l{An}}Bb}}}}{{{f{{AFh{}{{Cb{c}}}}}}e}c{}{}}0``{{{f{AGl}}}{{C`{c}}}{}}{{{f{AGl}}}{{C`{Ld}}}}{{{f{AGn}}}{{C`{c}}}{}}2{{{f{AGl}}}{{C`{{Gh{cc}}}}}{}}``{{{f{AFb}}}{{Bd{FfBb}}}}{{}Eh}{{}En}{{{f{AH`}}FfFf}{{l{c}}}Db}88``{{{f{AFj}}}{{Bd{{Gf{Gd}}Bb}}}}{{{f{AGn}}LdNb}{{Bd{{C`{c}}Bb}}}{}}{{{f{AHb}}}B`}0{{{f{AHd}}}AHd}{{{f{AHf}}{f{Df}}Nd}{{Bd{B`Bb}}}}{{{f{AHh}}c{C`{e}}}{{Bd{AHhBb}}}{{H`{}{{Cb{Ih}}}}}{}}{{{f{AHh}}ci}{{Bd{AHhBb}}}{{H`{}{{Cb{Ih}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}`{{{f{AHh}}{f{{l{An}}}}{C`{c}}}{{Bd{AHhBb}}}{}}{{{f{AHj}}Gd}{{l{c}}}Db}{{{f{AHl}}Gdc}{{l{e}}}{}Db}{{{f{AHn}}FfFf}AHn}0`{{{f{AF`}}d}{{l{c}}}Db}{{{f{AF`}}Eh}{{l{c}}}Db}{{{f{AI`}}Aj}{{C`{Ld}}}}{{{f{AGl}}}{{C`{c}}}{}}{{{f{AIb}}{f{c}}}{{Bd{AIbBb}}}Nh}{{{f{AId}}{f{c}}}AIdNh}{{{f{AIf}}}{{Fl{{f{{Al{Aj}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}On{}}00{{{f{AFb}}}{{Bd{AFbBb}}}}8{ce{}{}}00{{Ehd}Eh}{{End}En}101010{{Enc}En{{H`{}{{Cb{d}}}}}}{EhEh}{EnEn}`{{{f{AIh}}{f{{l{An}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AIj{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ah}}}{{l{k}}}DbDb{CdAIl}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ah}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AIn{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJ`{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Ah}}}{{Bd{{l{m}}i}}}DbDbCdAJ`{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJ`{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAIl}AJ`{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AJb{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAJbDb}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAIl}{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}0{{{f{{l{c}}}}}Ffn}0{{KjKj}Kj}{{{f{{l{Ej}}}}Ih}{{Bd{bBb}}}}{{{f{{AJd{Ih}}}}Ih}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAJfd}{{Fl{Ih}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{AJf}}}AJf}{{{f{c}}{f{Cle}}}b{}{}}{{}AJf}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{AJf}}{f{AJf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJf}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{AJf}}{f{Clc}}}bAGf}{{}Ff}{ce{}{}}{{{f{{Al{f}}}}cIhe}{{Fl{Ih}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFff}{{Dd{d}}}}}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}4`{{Ff{f{Cl{Fl{d}}}}}b}```{{{f{AHn}}FfFf}AHn}0{{Ff{f{{Al{B`}}}}{f{ClEn}}}{{Bd{{AJh{{l{Ej}}}}Bb}}}}{{{f{{Al{B`}}}}{f{{Al{d}}}}d}{{Bd{AJjBb}}}}{{{f{Ah}}{f{{Al{B`}}}}{f{{Al{d}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{Ah}}{f{{Al{B`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{Al{B`}}}}}{{Bd{AJjBb}}}}{{{f{{Al{B`}}}}}{{Bd{{l{El}}Bb}}}}0```````````77`{AJlGd}00{{{f{Ah}}}{{Bd{EfBb}}}}{{{f{Ah}}}{{Bd{AJnBb}}}}{{{f{AK`}}}Gd}333`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{AKb}}c}AKb{{Dn{{f{B`}}}{{Dd{B`}}}}}}{{{f{AKd}}}d}{{{f{If}}}{{`{{Ch{}{{Cb{If}}}}}}}}{{{f{If}}{f{Cl{Fl{If}}}}}b}{{AKdd}AKd}{{{f{{Jf{K`Jn}}}}{f{{Jf{K`Jn}}}}}}{{{f{If}}{f{If}}}If}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{Ad}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Af}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{An}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AKb}}{f{Bh}}}B`}{{{f{ClAKf}}{C`{{f{Ah}}}}}b}{{{f{ClAKd}}{f{AKd}}}{{Bd{bBb}}}}{{{f{ClAKf}}}b}{{{f{ClAKf}}{f{Ah}}}b}{{{f{AKd}}Eh}{{l{Ej}}}}{eAKh{}{{H`{}{{Cb{c}}}}}}0{{ADje}AKj{}{{H`{}{{Cb{c}}}}}}0{{{f{Lb}}}If}{{{f{If}}}If}{{{f{{Jf{JdJb}}}}}{{`{Id}}}}{{{f{{Jf{JlJh}}}}}{{`{Id}}}}{{{f{Ed}}}{{f{Ed}}}}{{{f{Ml}}}{{f{Ed}}}}{{{f{AKl}}}{{f{Ed}}}}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}{{C`{{f{{Al{c}}}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{{Jf{KfJh}}}}}{{`{Id}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000{Ed{{Cf{Ed}}}}{{{ALh{Ah}}}ALj}{{{f{AKd}}{f{AKd}}c}{{Bd{AKdBb}}}ALl}{{{f{ALn}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jf{K`Jn}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jf{KbJh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jf{KfJh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jf{JdJb}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jf{JlJh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AKd}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AKb}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{If}}{f{Ed}}}If}{{{f{{Jf{KbJh}}}}Jj}{{Jf{KbJh}}}}{{{f{{Jf{JlJh}}}}Jj}{{Jf{JlJh}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{E`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AKb}}}{{f{{Fl{{Cf{Cd}}}}}}}}{{{f{{Jf{ce}}}}}{{Jf{ce}}}DbDb}{{{f{AM`}}}AM`}{{{f{ALj}}}ALj}{{{f{AKd}}}AKd}{{{f{AKb}}}AKb}{{{f{Lb}}}Lb}{{{f{AMb}}}AMb}{{{f{If}}}If}{{{f{AMd}}}AMd}{{{f{Ed}}}Ed}{{{f{Ml}}}Ml}{{{f{Jj}}}Jj}{{{f{Lh}}}Lh}{{{f{Mh}}}Mh}{{{f{Ej}}}Ej}{{{f{Mf}}}Mf}{{{f{Lj}}}Lj}{{{f{Mb}}}Mb}{{{f{Jb}}}Jb}{{{f{Jh}}}Jh}{{{f{E`}}}E`}{{{f{Eb}}}Eb}{{{f{Jd}}}Jd}{{{f{Kf}}}Kf}{{{f{Ad}}}Ad}{{{f{Af}}}Af}{{{f{El}}}El}{{{f{An}}}An}{{{f{K`}}}K`}{{{f{Jl}}}Jl}{{{f{Kb}}}Kb}{{{f{AMf}}}AMf}{{{f{ADj}}}ADj}{{{f{AMh}}}AMh}{{{f{c}}{f{Cle}}}b{}{}}000000000000000000000000000000000{{{f{ClMl}}Ed}b}{AMje{}{{AKh{c}}AIl}}0{{AMjADj}e{}{{AKj{c}}AIl}}0{{{f{Ed}}}d}00{{{ALh{Ah}}}Ed}{{{f{Ml}}}{{f{Ed}}}}{{{f{{Jf{KbJh}}}}}{{l{Jh}}}}{{}AMl}{{}AM`}{{}ALj}{{}If}{{}AMd}{{}Ed}{{}ADj}{Ff{{f{c}}}{}}0{{{f{{Jf{ce}}}}}fDbDb}11111111111111111111111111111111111111111{Ff{{f{Clc}}}{}}0{{{f{Cl{Jf{ce}}}}}{{f{Cl}}}DbDb}11111111111111111111111111111111111111111{{{f{{Jf{K`Jn}}}}{f{{Jf{K`Jn}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{AKfc}AKd{{H`{}{{Cb{{C`{{f{Ah}}}}}}}}}}{Ffb}0000000000000{{{f{ClAKb}}}b}11111111111111111111111111111{{{f{ALn}}}{{f{Ed}}}}{{{f{{Jf{KfJh}}}}}{{f{Ed}}}}{{{f{{Jf{K`Jn}}}}}{{f{Ed}}}}{{{f{{Jf{KbJh}}}}}{{f{Ed}}}}{{{f{{Jf{JlJh}}}}}{{f{Ed}}}}{{{f{{Jf{JdJb}}}}}{{f{Ed}}}}{{{f{AKd}}}{{f{Ed}}}}{{{f{AKb}}}{{f{Ed}}}}{{{f{Lb}}}{{f{Ed}}}}{{{f{If}}}Ed}`{{{f{AM`}}{f{AM`}}}d}{{{f{If}}{f{If}}}d}{{{f{AMd}}{f{AMd}}}d}{{{f{Ed}}{f{ADj}}}d}{{{f{Ed}}{f{Ed}}}d}{{{f{Ml}}{f{Ml}}}d}{{{f{Jj}}{f{Jj}}}d}{{{f{ADj}}{f{ADj}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{If}}{f{If}}d}d}{{{f{AKd}}{f{AKd}}}}{{{f{AKd}}{f{Ah}}}}{{{f{AKd}}{f{{l{Ad}}}}}}{{{f{AKb}}{f{AKb}}}{{l{An}}}}2310{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jf{ce}}}}}MlDbDb}{{{f{AKb}}{f{Ah}}}{{Bd{B`Bb}}}}{{{f{AKb}}}{{f{{Al{B`}}}}}}{{{f{ClAKb}}}{{f{Cl{Fl{B`}}}}}}{{{f{ALj}}{f{Ah}}}{{C`{Ih}}}}{{ALl{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{AKfAKd}{AMl{{Lf{ALj}}}}{{{f{AM`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{ALj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AMb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{If}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{AMd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Ed}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{Ml}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Jj}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{ADj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AMh}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}00{{{l{Jh}}}{{Jf{KfJh}}}}{{{l{Jb}}}{{Jf{JdJb}}}}2222222222222{dIf}3{{{f{{Al{Aj}}}}}If}{{{C`{c}}}If{{AMn{If}}}}{cIfAN`}{{{f{Ah}}}If}7{{{f{ADj}}}Ed}{IfEd}{{{f{If}}}Ed}:{{{f{If}}}Ml};{{{f{ANb}}}Ml}{{{f{AMh}}}Jj}======================{ANdADj}{ANfADj}?{{{f{ADj}}d}Ed}{{{l{Ej}}{Lf{ALj}}dAM`}AKd}{{{f{Ah}}cJj}{{Jf{KbJh}}}{{H`{}{{Cb{ANh}}}}}}{{{f{Ah}}cJj}{{Jf{KbJh}}}{{H`{}{{Cb{{C`{ANh}}}}}}}}{{{l{Ej}}AM`}AKd}{{{f{Ah}}c}{{Jf{JdJb}}}{{H`{}{{Cb{ANj}}}}}}{{{f{Ah}}c}{{Jf{JdJb}}}{{H`{}{{Cb{{C`{ANj}}}}}}}}{{{f{Ah}}cJj}{{Jf{JlJh}}}{{H`{}{{Cb{AJl}}}}}}{{{f{Ah}}cJj}{{Jf{JlJh}}}{{H`{}{{Cb{{C`{AJl}}}}}}}}{{{f{Ah}}c}{{Jf{KfJh}}}{{H`{}{{Cb{AK`}}}}}}{{{f{Ah}}c}{{Jf{KfJh}}}{{H`{}{{Cb{{C`{AK`}}}}}}}}{{{ANn{ANl}}Ed}Ml}{{{f{{l{Ad}}}}{f{{ALh{Ah}}}}AM`}{{Bd{AKdBb}}}}{{{Fl{c}}ADj}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{Fl{c}}ADj}{{AIl{}{{AKn{e}}{AL`{c}}{ALb{g}}}}}{ALd{ALf{e}}}ABh{{G`{}{{Cb{e}}}}IdHlHn}}{{FfcADj}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{FfADj}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{Ah}}dFfAM`}AKd}{{{f{Ah}}Ff}AKb}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}Ff}{{C`{c}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{ALj}}Ih}{{f{Ah}}}}{{{f{{Jf{KbJh}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jf{KfJh}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jf{JlJh}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jf{JdJb}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jf{K`Jn}}}}Ff}{{Bd{IfBb}}}}{{{f{ALn}}Ff}{{Bd{IfBb}}}}{{{f{AKd}}Ff}{{Bd{IfBb}}}}{{{f{AKb}}Ff}{{Bd{IfBb}}}}{{{f{{Jf{KfJh}}}}Ff}If}{{{f{{Jf{K`Jn}}}}Ff}If}{{{f{{Jf{JdJb}}}}Ff}If}{{{f{{Jf{JlJh}}}}Ff}If}{{{f{{Jf{KbJh}}}}Ff}If}{{{f{ALn}}Ff}If}{{{f{AKd}}Ff}If}{{{f{AKb}}Ff}If}{{{f{ALj}}}{{f{{ALh{Ah}}}}}}{{}Ed}000000000000000000000000{{{f{ALj}}Ih}{{C`{{f{Ah}}}}}}{{{f{AKd}}}{{f{{Lf{ALj}}}}}}{{{f{Ed}}}{{C`{{Fl{Ff}}}}}}{{{f{If}}}{{C`{{f{Ah}}}}}}{{{f{AO`}}Ff}If}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}Ff}{{C`{c}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{AKd}}{f{AKd}}}}{{{f{AKd}}{f{{l{Ad}}}}}}{{{f{AKd}}{f{Ah}}}}{{{f{AKb}}{f{AKb}}}{{l{An}}}}3210{{{f{If}}{f{Clc}}}bAGf}{{{f{AMd}}{f{Clc}}}bAGf}{{{f{Ed}}{f{Clc}}}bAGf}{{{f{Ml}}{f{Clc}}}bAGf}{{{f{Jj}}{f{Clc}}}bAGf}{{{f{ADj}}{f{Clc}}}bAGf}{{{f{AMh}}{f{Clc}}}bAGf}{{{f{If}}{f{Clc}}d}bAGf}{{{f{{Jf{KfJh}}}}}{{l{Lj}}}}{{{f{{Jf{KbJh}}}}}{{l{Jh}}}}{{}Ff}000000000000000000000000000000000000000000{{{f{Ed}}}{{C`{{f{Ed}}}}}}{{{f{ADj}}}{{C`{{f{ADj}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{AKb}}}}{{{Jf{KfJh}}}B`}{{{Jf{K`Jn}}}B`}{{{Jf{KbJh}}}B`}{{{Jf{JdJb}}}B`}{{{Jf{JlJh}}}B`}{AKdB`}{AKbB`}{{Lb{f{Ah}}}B`}{If{{Bd{IfBb}}}}{{{f{Ed}}}d}00{{{f{If}}}d}11{{{f{AKd}}}d}{{{f{AKb}}}d}1323{{{f{ALj}}}d}34440443434344443444434{{{f{ADj}}}d}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}{{AEb{cgAE`}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{AKb}}}AD`}{{{f{AKd}}}AOb}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}{{C`{c}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{Ed}}}{{f{Ed}}}}{{{f{ALj}}}Ff}{{{f{AKd}}}Ff}{{{f{AKb}}}Ff}{{{f{AKd}}{f{Ah}}}}{{{f{AKd}}{f{AKd}}}}{{{f{AKd}}{f{{l{Ad}}}}}}{{{f{AKb}}{f{AKb}}}{{l{An}}}}2310{{{f{AKd}}{f{AKd}}}{{Bd{{Gh{AKdAKd}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{dBb}}}}{{{f{AKd}}}Lb}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClAMl}}{f{{Lf{ALj}}}}}{{Bd{bBb}}}}{{{f{{Jf{KbJh}}}}}{{l{Jh}}}}03{{{f{{Jf{KfJh}}}}}{{l{Lj}}}}1{{{f{{Jf{JdJb}}}}{C`{{f{AJn}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{{Jf{JlJh}}}}{C`{{f{AJn}}}}}{{Bd{{Jf{JlJh}}Bb}}}}10{{{f{{Jf{K`Jn}}}}{f{{Jf{K`Jn}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{AKd}}}{{Bd{FfBb}}}}{{{f{AKd}}}{{f{Ah}}}}{{{f{AKb}}}{{f{{ANn{ANl}}}}}}{{{f{Ml}}}{{f{{ANn{ANl}}}}}}`{{{f{{Jf{KfJh}}}}}{{l{Jb}}}}:{{}c{}}0{{{f{Ah}}FfAM`}AKf}{{{f{Ah}}c}{{Jf{JlJh}}}{{Hf{{Al{{C`{AJl}}}}}}}}{{{f{Ah}}c}{{Jf{JdJb}}}{{Hf{{Al{{C`{ANj}}}}}}}}{{{f{Ah}}c}{{Jf{KbJh}}}{{Hf{{Al{ANh}}}}}}{{{f{Ah}}c}{{Jf{KfJh}}}{{Hf{{Al{AK`}}}}}}{{{f{Ah}}c}{{Jf{JlJh}}}{{Hf{{Al{AJl}}}}}}{{{f{Ah}}c}{{Jf{KbJh}}}{{Hf{{Al{{C`{ANh}}}}}}}}{{{f{Ah}}c}{{Jf{KfJh}}}{{Hf{{Al{{C`{AK`}}}}}}}}{{{f{Ah}}c}{{Jf{JdJb}}}{{Hf{{Al{ANj}}}}}}{{{Lf{ALj}}}AMl}{{{f{Ah}}{f{{Al{B`}}}}}{{Bd{AKbBb}}}}{{EdIf}Lb}{{{f{Ah}}Ed}Ml}{{{f{ClAOb}}}C`}{{{f{AKd}}{f{Ah}}}}{{{f{AKd}}{f{AKd}}}}{{{f{AKd}}{f{{l{Ad}}}}}}{{{f{AKb}}{f{AKb}}}{{l{An}}}}1230{{{f{AKd}}}Ff}{{{f{AKb}}}Ff}{{{f{Ah}}{f{{Al{{f{Ah}}}}}}{f{Ah}}}{{Jf{JdJb}}}}{{{f{Ah}}{f{{Al{{f{Ah}}}}}}{f{Ah}}}{{Jf{KfJh}}}}{{{f{If}}{f{If}}}{{C`{AOd}}}}{{{f{Jj}}{f{Jj}}}{{C`{AOd}}}}{{{f{AKd}}}{{f{{l{Ej}}}}}}{{{f{{Jf{K`Jn}}}}}{{C`{Ff}}}}{{{f{ClAKb}}}b}{{{f{AKb}}}{{f{Ml}}}}{{{f{ClAKf}}{f{Ah}}}{{Gh{Ihd}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ClAKb}}{f{Ah}}}b}{{{f{{Jf{JdJb}}}}{f{{l{Ad}}}}AOf{C`{{f{AJn}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{{Jf{JlJh}}}}{f{{l{Ad}}}}AOf{C`{{f{AJn}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{AKb}}}{{Bd{{l{El}}Bb}}}}{{{f{ALj}}{f{ALj}}}d}{{{f{{Jf{K`Jn}}}}}Ff}{{{f{{Jf{KfJh}}}}}{{l{Lj}}}}{{{f{{Jf{KbJh}}}}}{{l{Jh}}}}{{{f{ClMl}}{ANn{ANl}}}b}{{{f{Cl{Jf{KbJh}}}}Jj}b}{{{f{Cl{Jf{JlJh}}}}Jj}b}{{{f{Cl{Jf{JlJh}}}}Ef}{{Bd{bBb}}}}{{{f{AOb}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{AKd}}d}AKd}{{{f{AKd}}Eh}AKd}{{{f{{Jf{KfJh}}}}{f{Ah}}}{{l{Ad}}}}{{{f{{Jf{JdJb}}}}{f{Ah}}}{{l{Ad}}}}{{{f{{Jf{JlJh}}}}{f{Ah}}}{{Bd{{l{Ad}}Bb}}}}{{{f{If}}{f{Ed}}}{{C`{If}}}}{{{f{{Jf{K`Jn}}}}{f{{Jf{K`Jn}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jf{JlJh}}}}}Jj}{{{f{{Jf{KbJh}}}}}Jj}{{{f{{Jf{JlJh}}}}}{{f{{C`{Ef}}}}}}{{{f{AKd}}dd}{{Cf{Cd}}}}{{{f{Ed}}d}ADj}{{{f{Ml}}d}ANb}{JjAMh}{{{f{Ed}}{f{Ah}}d}ANb}{Jj{{f{Ah}}}}{{{f{AKd}}{f{{ALh{Ah}}}}AOh}AKd}{{{f{AKd}}}{{Bd{AKdBb}}}}{{{f{AKd}}}AKd}{{{f{ADj}}}{{f{ADj}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ed}}}Ed}{{{f{ADj}}}AOj}{{{f{{Jf{JdJb}}}}{f{Ah}}}{{l{Ad}}}}{{{f{{Jf{JlJh}}}}{f{Ah}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{Jf{KfJh}}}}{f{Ah}}}{{l{Ad}}}}{{{f{c}}}Ef{}}00{{{f{If}}{f{If}}}d}{{{f{AKb}}}Ff}{{{f{{Jf{JlJh}}}}{C`{{f{AJn}}}}{f{{l{Ad}}}}{f{Ah}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{{Jf{JdJb}}}}{C`{{f{AJn}}}}{f{{l{Ad}}}}{f{Ah}}}{{Bd{{Jf{JdJb}}Bb}}}}{g{{Bd{AKhe}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{{ADjg}{{Bd{AKje}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{AMj{{Bd{eg}}}{}{{AKh{c}}AIl}{}}0{{AMjADj}{{Bd{eg}}}{}{{AKj{c}}AIl}{}}0{{{f{If}}}{{Bd{cBb}}}L`}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{If}}{f{Ed}}}{{Bd{IfBb}}}}{{{f{Ed}}d}{{Bd{ADjBb}}}}{{{f{c}}}On{}}000000000000000000000000000000000000000000{{{f{ADj}}}ADj}{{{f{AKd}}}{{Bd{AKdBb}}}}{AKbAOl}{{{f{ClLb}}If}b}{{{f{AKd}}}d}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}Ff}cABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{Lb}}}{{f{If}}}}{{{f{AKd}}}{{Bd{AOlBb}}}}2{{{f{Ed}}If}d}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}gABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{ce{}{}}000000000000000000000000000000000000000000{Ffc{}}0{{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}{C`{Hj}}}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{Ed}}}If}```````````{{{f{AKd}}{f{AKd}}c}{{Bd{AKdBb}}}ALl}{{ALl{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AKd}}{f{AKd}}}{{Bd{{Gh{AKdAKd}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}AOn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{{}b}{{{f{ClAOn}}}b}{Ffb}2{cc{}}6{{}Ff}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}{{}d}3``````````````````````{{{f{B@`}}}{{f{Ah}}}}>>>===`{{BbB@`}Bb}{BbBb}={{{f{B@`}}}f}>>===:::`{{{f{B@b}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{B@`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{Bb}}{f{ClGj}}}{{Bd{bGl}}}}0<<{cB@`{{AMn{{Dj{Ah}}}}}}{B@dBb}{B@fBb}{B@hBb}{B@jBb}{B@lBb}{B@nBb}{cc{}}{{}{{Fh{{f{Ah}}B@b}{{Dd{b}}}}}}{{}Ff}00{ce{}{}}00{cBbAJ`}````{{{Fh{{f{Ah}}B@b}{{Dd{b}}}}}b}{cBbBA`}{{{f{c}}}Ef{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}On{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{ClAOl}}{Fl{B`}}{f{BAb}}}{{Bd{bBb}}}}{{{f{AOl}}{f{Df}}}{{Fl{B`}}}}0{{{f{AOl}}{f{{l{An}}}}}{{Bd{AOlBb}}}}{{{f{AOl}}{f{{Al{{ANn{ANl}}}}}}}{{Bd{AOlBb}}}}0{{{f{AOl}}GdFf}AOl}{{{f{ClAOl}}}{{f{ClAOl}}}}{{{f{ClAOl}}{f{Ah}}e}{{Bd{{f{ClAOl}}Bb}}}BAd{{A@b{{f{B`}}}{{Dd{c}}}}}}{{{f{ClAOl}}Ffe}{{Bd{{f{ClAOl}}Bb}}}BAd{{A@b{{f{B`}}}{{Dd{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{AOl}}}AOl}{{{f{BAf}}}BAf}{{{f{BAh}}}BAh}2{{{f{c}}{f{Cle}}}b{}{}}00{{{f{AOl}}{f{Ah}}}{{Bd{{f{B`}}Bb}}}}{{{f{AOl}}e}{{Bd{{Fl{{f{B`}}}}Bb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{}BAh}{{}AOl}{Ff{{f{c}}}{}}0000{Ff{{f{Clc}}}{}}0000{Ffb}0000{{{f{AOl}}{f{Ah}}}{{Bd{AOlBb}}}}{{{f{ClAOl}}{f{Ah}}}{{Bd{B`Bb}}}}{{{f{AOl}}{f{{Al{c}}}}}AOl{{Hf{Ah}}}}{{{f{AOl}}{f{{BAj{{f{Ah}}Nn}}}}}AOl}{{{f{AOl}}{C`{{f{{Al{c}}}}}}}{{Bd{AOlBb}}}{{Hf{Ah}}}}{{{f{AOl}}}{{Fl{Ed}}}}9{{{f{BAh}}{f{BAh}}}d}{{{f{AOl}}{f{AOl}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AOl}}}Ff}`{{{f{AOl}}e}{{Bd{AOlBb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{{f{AOl}}{Fl{B`}}}{{Bd{AOlBb}}}}{{{f{ClAOl}}{f{AOl}}}{{Bd{bBb}}}}{{{f{AOl}}}{{Fl{Ml}}}}{{{f{AOl}}AFf}{{Bd{AOlBb}}}}{{{f{AOl}}{f{{l{An}}}}}{{Bd{AOlBb}}}}{{{f{BAf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BAh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AOl}}{f{ClGj}}}{{Bd{bGl}}}}0{cc{}}000{{{f{BAb}}}AOl}{{{f{BAl}}}AOl}{AKbAOl}3{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{cAOl{{H`{}{{Cb{B`}}}}}}{{{f{{Al{BAn}}}}}{{Bd{AOlBb}}}}{{{f{{Al{BAn}}}}{f{BAb}}}{{Bd{AOlBb}}}}{{c{f{BAb}}}{{Bd{AOlBb}}}{{Ch{}{{Cb{{f{BAn}}}}}}}}{{{f{AOl}}Ff}{{C`{{Fl{If}}}}}}{{{f{AOl}}{f{Ah}}}{{C`{Ff}}}}{{{f{AOl}}}{{Fl{{f{Ah}}}}}}{{{f{AOl}}}{{Fl{{ANn{ANl}}}}}}{{{f{AOl}}}{{f{{Al{B`}}}}}}{{{f{ClAOl}}}{{f{Cl{Fl{B`}}}}}}{{{f{AOl}}Ff}{{Bd{BAnBb}}}}{{{f{AOl}}Ff{f{ClBAn}}}{{Bd{bBb}}}}{{{f{AOl}}Ff{f{ClBAn}}}b}{{{f{AOl}}}{{C`{{Bd{EdBb}}}}}}`{{{f{AOl}}e}{{Bd{BB`Bb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{{f{AOl}}{Fl{B`}}{f{BBb}}}{{Bd{{Gh{B`{Fl{B`}}Bh}}Bb}}}}1{{{f{AOl}}{Fl{B`}}dd}{{Bd{BB`Bb}}}}{{{f{BAh}}{f{Clc}}}bAGf}{{{f{AOl}}{C`{Ff}}}AOl}{{{f{AOl}}}Ff}{{{f{AOl}}{f{{Al{B`}}}}}{{Bd{AOlBb}}}}{{{f{ClAOl}}{f{{Al{B`}}}}}{{Bd{{f{ClAOl}}Bb}}}}{{{f{ClAOl}}{f{{Al{B`}}}}}{{f{ClAOl}}}}{{{f{AOl}}{BBd{Ff}}}f}{{{f{AOl}}Ff}f}{{{f{AOl}}{f{Ah}}}f}{{{f{AOl}}{BBf{Ff}}}f}{{{f{AOl}}{BBh{Ff}}}f}{{{f{AOl}}BBj}f}{{{f{AOl}}{BBl{Ff}}}f}{{{f{AOl}}{Ln{Ff}}}f}{{}Ff}0000{{{f{ClAOl}}Ffc}{{Bd{{f{ClAOl}}Bb}}}BAd}{ce{}{}}000000{{AOl{f{Ah}}}AKb}{{{f{AOl}}}{{Bd{{l{An}}Bb}}}}{{{f{AOl}}}d}1{{{f{AOl}}}{{Fd{B`}}}}{{{f{AOl}}d}BBn}{{{f{AOl}}}BC`}{AOlBCb}{{{f{AOl}}}{{Bd{{C`{B`}}Bb}}}}{{{f{AOl}}BAf}{{Bd{{C`{B`}}Bb}}}}{{{f{AOl}}ce}{{Bd{AOlBb}}}{{BCd{{ANn{ANl}}}}}{{BCd{{ANn{ANl}}}}}}{{{f{AOl}}BCf}{{Bd{AOlBb}}}}3{{{f{AOl}}}Ff}{{{Fl{c}}}{{Bd{AOlBb}}}BAd}{{{Fl{B`}}}AOl}{{{Fl{B`}}}{{Bd{AOlBb}}}}{{{f{ClBBn}}}C`}{{{f{ClBC`}}}C`}{{{f{AOl}}}AOl}{{AOle}{{Bd{cBb}}}{}{{Df{AOl}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClAOl}}e}{{Bd{cBb}}}{}{{Df{{f{ClAOl}}}{{Dd{{Bd{cBb}}}}}}}}{{AOlgc}{{Bd{eBb}}}{}{}{{Df{AOlc}{{Dd{{Bd{eBb}}}}}}}}{{{f{ClAOl}}}{{C`{B`}}}}{{{f{AOl}}{f{AOl}}}d}{{{f{ClAOl}}{f{Ah}}{f{Ah}}}{{Bd{{f{ClAOl}}Bb}}}}{{{f{ClAOl}}{f{Ah}}c}{{Bd{{f{ClAOl}}Bb}}}BAd}{{{f{ClAOl}}Ffc}{{Bd{{f{ClAOl}}Bb}}}BAd}18{{{f{AOl}}{Fl{B`}}{f{BCh}}}{{Bd{{Gh{B`{Fl{B`}}Bh}}Bb}}}}`{{{f{AOl}}{f{B`}}dd{C`{J`}}}{{Bd{AOlBb}}}}0{{{f{AOl}}Ffdd{C`{J`}}}{{Bd{AOlBb}}}}{{{f{AOl}}}BAb}{{{f{AOl}}{f{AOl}}}{{Bd{bBb}}}}{{{f{AOl}}e}{{Bd{AOlBb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{{f{AOl}}Ff}{{C`{{f{B`}}}}}}{{{f{AOl}}c}{{Bd{AOlBb}}}{{BCj{Ff}}}}2{{{f{AOl}}c}{{Bd{{Fl{B`}}Bb}}}{{BCd{{ANn{ANl}}}}}}{{{f{AOl}}e{f{{Lf{BAb}}}}}{{Bd{AOlBb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{{f{AOl}}e{f{BAb}}}{{Bd{AOlBb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{{f{ClAOl}}{f{{Al{c}}}}}{{Bd{bBb}}}{{Hf{Ah}}}}{{{f{AOl}}}{{Gh{FfFf}}}}{{{f{AOl}}Gd}AOl}{{{f{AOl}}}d}{{{f{ClAOl}}}b}{{{f{BBn}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{BC`}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{AOl}}GdFf}AOl}0{{{f{AOl}}cEn}{{Bd{AOlBb}}}{{BCd{{ANn{ANl}}}}}}{{{f{ClAOl}}cEn}{{Bd{{f{ClAOl}}Bb}}}{{BCd{{ANn{ANl}}}}}}{{{f{ClAOl}}}{{`{{Ch{}{{Cb{AOl}}}}}}}}{{AOlFfd}{{Fl{AOl}}}}{{{f{AOl}}BAf}{{Bd{{C`{B`}}Bb}}}}{{{f{AOl}}{C`{Ff}}}AOl}{{{f{AOl}}{f{{l{Ej}}}}}{{Bd{AOlBb}}}}{{{f{AOl}}{f{{l{Ej}}}}}AOl}{{{f{AOl}}{f{{l{Ej}}}}d}AOl}{{{f{AOl}}}{{f{AOl}}}}{{{f{AOl}}BCl}{{Bd{{Oh{Oj{Of{{Od{Ff}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{AOl}}FfcEn}{{Bd{AOlBb}}}{{BCd{{ANn{ANl}}}}}}{{{f{ClAOl}}{C`{{f{Ah}}}}{C`{{Ol{Ef{Fl{Ef}}}}}}}{{Bd{AOlBb}}}}{{{f{ClAOl}}{f{Ah}}e}{{Bd{{f{ClAOl}}Bb}}}BAd{{A@b{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClAOl}}Ffe}{{Bd{{f{ClAOl}}Bb}}}BAd{{A@b{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}0000{{{Gh{{BCn{{Cf{Cd}}}}{f{{Al{ANb}}}}}}}{{Bd{AOlBb}}}}{BD`{{Bd{AOlBb}}}}{{c{f{BAb}}}{{Bd{AOlBb}}}{{Ch{}{{Cb{{Bd{{f{BAn}}Bb}}}}}}}}{{{f{AOl}}{f{Ah}}}{{Bd{FfBb}}}}44444{{{f{c}}}On{}}0000{{{f{AOl}}{C`{{f{{Al{Ef}}}}}}BAh{C`{{Gh{GdFf}}}}}{{Bd{AOlBb}}}}{{{f{AOl}}d{C`{{f{{Al{Ef}}}}}}BAh{C`{{Gh{GdFf}}}}}{{Bd{AOlBb}}}}1{{{f{AOl}}c}{{Bd{AOlBb}}}{{BCd{Ef}}}}{{{f{AOl}}c{f{Ah}}AOfAOf}{{Bd{AOlBb}}}{{BCd{Ef}}}}0{{{f{AOl}}{f{AOl}}}{{Bd{AOlBb}}}}{{{f{ClAOl}}{f{AOl}}}{{Bd{{f{ClAOl}}Bb}}}}{ce{}{}}0000{{{f{AOl}}}Ff}{{{f{ClAOl}}c}{{Bd{{f{ClAOl}}Bb}}}BAd}{{{f{ClAOl}}c{f{BAb}}}{{Bd{{f{ClAOl}}Bb}}}BAd}{{{f{ClAOl}}B`}{{f{ClAOl}}}}{{{f{AOl}}{f{Ah}}{C`{Ih}}}{{Bd{AOlBb}}}}{{{f{ClAOl}}{f{Ah}}{C`{Ih}}}{{f{ClAOl}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{BCf}}}BCf}{{{f{c}}{f{Cle}}}b{}{}}{{}BCf}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{BCf}}{f{BCf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCf}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{BCf}}{f{Clc}}}bAGf}`{{}Ff}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BB`}}}{{Bd{AOlBb}}}}`{{{f{BDb}}}{{f{{Al{{BDd{Ih}}}}}}}}{{{f{BB`}}c}{{Bd{AOlBb}}}{{Dn{AOl}{{Dd{{Bd{AOlBb}}}}}}HlHn}}{{{f{Bh}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000{{{f{BDb}}}BDb}{{{f{Bh}}}Bh}{{{f{BB`}}}BB`}{{{f{BDf}}}BDf}{{{f{c}}{f{Cle}}}b{}{}}000:{{}BDb}{{}Bh}{Ff{{f{c}}}{}}00{{{f{BDh}}}f}11111{Ff{{f{Clc}}}{}}0000000`{{BDjc}{}BDl}{Ffb}000{{{f{ClBDb}}}b}1111{{{f{BDb}}{f{BDb}}}d}{{{f{Bh}}{f{Bh}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BDn}}}Ih}{{{f{BDb}}}{{f{{Al{Ih}}}}}}{{{f{BB`}}}{{Bd{AOlBb}}}}{{{f{ClBDb}}}{{f{Cl{Fl{Ih}}}}}}{{{f{BDb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Bh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BB`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BDf}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{Ah}}BDf}Ef}{cc{}}0000{{{Fl{{Gh{{Fl{Ih}}{Fl{{BDd{Ih}}}}}}}}}BDb}{{{Fl{{Fl{{Gh{Ih{BDd{Ih}}}}}}}}}BDb}{{{Fl{{Gh{Ih{BDd{Ih}}}}}}}BDb}3{BDbBh}4{BE`BDf}5{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{cBDb{{H`{}{{Cb{{Gh{Ih{BDd{Ih}}}}}}}}}}{cBDb{{I`{}{{Cb{{Gh{Ih{BDd{Ih}}}}}}}}}}{{{f{Bh}}Ff}BDn}{{{f{BB`}}}{{f{Bh}}}}{{{f{ClBB`}}}{{f{ClBh}}}}{{{f{Bh}}}{{l{Ej}}}}{{{f{BEb}}dd}{{Bd{BhBb}}}}{{{f{BB`}}}{{Bd{AOlBb}}}}{{{f{ClBh}}}{{f{ClBDb}}}}{{}Ff}0000000{ce{}{}}0000000{BhBDb}1{{{f{BDb}}}}{BDb}310{{{f{BDn}}}d}{{{f{Bh}}}d}{{{f{BDb}}}d}{{{f{BDb}}}{{BEf{{BEd{{Fd{Ih}}}}{Fd{{BDd{Ih}}}}}}}}{{{f{Bh}}}BEh}{{{f{BB`}}}{{Fl{B`}}}}{{{f{BB`}}{C`{{Gh{GdFf}}}}}{{Fl{B`}}}}={{{f{BDn}}}Ff}{{{f{Bh}}}Ff}?????{{{Fl{Ih}}{Fl{{BDd{Ih}}}}d}BDb}{{{f{AOl}}{Fl{B`}}Bh{C`{{Fl{Ef}}}}}BB`}{{{f{ClBEh}}}C`}{{{f{ClBEh}}Ff}C`}{{{f{BB`}}c}{{Bd{AOlBb}}}{{Df{AOl}{{Dd{{Bd{AOlBb}}}}}}HlHn}}{{{f{c}}}{}{}}{{{f{Bh}}}BDj}{{{f{BB`}}LdNb}{{Bd{AOlBb}}}}{{BB`e}BB`{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{{f{Bh}}GdFf}BDh}{{{f{ClBDb}}}b}{{{f{ClBh}}}b}{{{f{BB`}}Aj}{{Bd{AOlBb}}}}{{{f{BB`}}}{{Bd{AOlBb}}}}{Bh{{Fl{Ih}}}}0{BB`Bh}{{{f{ClBB`}}}Bh}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}On{}}0000000{BhBh}{{{f{Bh}}}{{f{BDb}}}}{{{f{Bh}}}{{f{{Fl{{Od{Ih}}}}}}}};{ce{}{}}0000000`````{{{f{BDb}}c}B`{{Df{{Gh{Ih{f{{BDd{Ih}}}}}}}{{Dd{C`}}}}HlHn}}{{{f{BDb}}c}B`{{Df{{Gh{Ih{f{{BDd{Ih}}}}}}}{{Dd{}}}}HlHn}}{{{f{{Al{{Od{Ih}}}}}}c}B`{{Df{{Od{Ih}}}{{Dd{C`}}}}HlHn}}{{{f{{Al{{Od{Ih}}}}}}c}B`{{Df{{Od{Ih}}}{{Dd{}}}}HlHn}}{{{f{{Al{c}}}}e{C`{{Lf{ADl}}}}}{{AJd{c}}}{BEjBEl}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{Al{c}}}}{f{Hj}}e{C`{{Lf{ADl}}}}}{{AJd{c}}}{BEjBEl}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{l{c}}}}IhIh}{{l{c}}}Db}{{{f{{Fl{{Od{Ih}}}}}}{f{{Al{{Cf{Cd}}}}}}}d}{{{f{BEn}}{f{Bh}}}B`}{{BF`BF`}BF`}0`{{{f{BFb}}{f{AOl}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BFb}}}{{Bd{{f{Ah}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{ClBFd}}If}{{C`{b}}}}{{{f{ClBFf}}{f{If}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BFd}}}BFd}{{{f{BFf}}}BFf}{{{f{BAn}}}BAn}{{{f{c}}{f{Cle}}}b{}{}}00{{{f{{Al{c}}}}}Ed{{Hd{Ed}}}}{{}BAn}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00{Ffb}00{{{f{BAn}}{f{BAn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAn}}{f{ClGj}}}{{Bd{bGl}}}}{{{Gh{{f{Ed}}Ff}}}BFd}{cc{}}0{{{Gh{{f{Ed}}Ff}}}BFf}1{{eFf}BAb{{AMn{Ed}}}{{Ch{}{{Cb{{Fl{{Gh{Efc}}}}}}}}}}{{}Ff}00{ce{}{}}00{BFdB`}{BFfB`}{{{f{Ed}}Ff}BFd}{{{f{Ed}}Ff}BFf}{{{Fl{If}}}BAn}{{{f{ClBFd}}Ff}B`}{{{f{ClBFf}}Ff}B`}{{{f{{Al{BAn}}}}{C`{Ff}}}{{Bd{BAbBb}}}}0{{{f{{Al{BAn}}}}{C`{Ff}}}{{Bd{{Fl{Ed}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}On{}}00<<<{{{f{{Al{AOl}}}}}{{Bd{AOlBb}}}}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AOl{f{{Al{{f{Ah}}}}}}{f{{Al{{f{Ah}}}}}}{C`{{f{Ah}}}}{f{AOl}}}AOl}{{BCbc}{{Bd{AOlBb}}}{{Df{BFh{f{Cl{BFl{BFj}}}}{f{Cl{BFl{BFn}}}}}{{Dd{{Bd{bBb}}}}}}}}{{{f{BG`}}{f{{Al{Ih}}}}dd}AOl}{{{f{BG`}}{Gh{{Ol{{Fl{Ih}}{Fl{Nj}}}}{Ol{{Fl{A@`}}{Fl{Nj}}}}}}{f{AOl}}BGb}{{Bd{AOlBb}}}}{{{f{BG`}}{f{AOl}}{f{B`}}{f{B`}}BGb}{{Bd{AOlBb}}}}{{{f{Ah}}{f{Ah}}}Ef}{{{f{BG`}}{f{AOl}}{f{B`}}{f{B`}}BGbd{C`{{f{{Al{{f{Ah}}}}}}}}}{{Bd{AOlBb}}}}{{{f{BGd}}{f{{Al{Nj}}}}Kj}AOl}0{{{f{BGd}}{f{{Al{Nj}}}}}AOl}0{{{f{BGf}}{C`{{Fl{{f{Ah}}}}}}{C`{{f{Ah}}}}d}{{Bd{AOlBb}}}}{{BCbd}BCb}{{{BGh{c}}{C`{{Lf{BGj}}}}}{{BGh{c}}}BGl}{{{f{B`}}}{{Bd{B`Bb}}}}{BGnBGn}{{{BH`{}{{Dd{c}}}}{f{B`}}}c{}}{{BGnBGn}}{{{f{AOf}}Gd{C`{{f{AJn}}}}}{{Bd{GdBb}}}}0{{{f{BHb}}{f{B`}}}{{Bd{B`Bb}}}}1{{BHdc}BCb{{Hf{{Al{BGn}}}}}}5`{{BGn{f{Ah}}}BGn}{{}BGn}{{BGnd}BGn}{c{{Bd{BGnBb}}}{{Hf{{Al{BGn}}}}}}{{{f{{Lf{ce}}}}}{{f{e}}}{}BHf}{{BHhd}BHh}`{{{f{BHj}}}d}{{{f{BHl}}}d}11`{{BGnc}BGn{{AMn{BGn}}}}{{{Lf{BHj}}BHn}{{Bd{BCbBb}}}}76{{BGncd}BGn{{AMn{BGn}}}}{{{f{ClAAd}}}b}{{{f{ClAAf}}}b}{{{f{ClAAd}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAf}}{C`{c}}}b{}}{{{f{ClAAd}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAf}}c}b{}}{{{f{{AEl{}{{AEj{c}}}}}}g}{{AEl{}{{AEj{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{BHdc{Lf{BAb}}}BCb{{Df{AOl}{{Dd{{Bd{AOlBb}}}}}}HlHn}}{{BGnc{BIb{{Lf{BI`}}}}}BGn{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BGnBGnc{BIb{{Lf{BI`}}}}}BGn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{{f{BGn}}{f{Clc}}f}{{Bd{BIdBb}}}{{Dn{{f{BGn}}f}{{Dd{{Bd{BIdBb}}}}}}}}{{{f{AEn}}{f{Df}}}AEn}{{{f{AEn}}{f{Df}}}{{l{c}}}Db}{{BGnc{f{{Al{BGn}}}}{BIb{{Lf{BI`}}}}}BGn{{Df{{f{Cl{Al{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BGnBIf{f{{Al{BGn}}}}dd}BGn}{{ce{BIb{{Lf{BI`}}}}d}BGn{{Df{{f{Cl{Al{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}{{Hf{{Al{BGn}}}}}}{{{f{{AEl{}{{AEj{c}}}}}}i{f{Cl{Al{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AEl{}{{AEj{c}}}}}}g}{{AEl{}{{AEj{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{BGnBGnGdEd}BGn}{BD`{{Lf{Cd}}}}{{{f{BIh}}}{{C`{Ff}}}}{BIjBGn}{BIlBGn}{BGnBGn}3210{{{f{AF`}}Eh}{{l{Ej}}}}{{BGnEh}BGn}{{{f{BIn}}Eh}{{l{Ej}}}}{{cEn}BGn{{Hf{{Al{BGn}}}}}}{{{f{AF`}}{f{{Al{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AFb}}}{{Bd{{l{Ej}}Bb}}}}6{{{f{BIn}}}{{Bd{{l{Ej}}Bb}}}}{cBGn{{AMn{BGn}}}}{{{f{BJ`}}}{{f{{Al{Ml}}}}}}``{BGnBIj}{eAKh{}{{H`{}{{Cb{c}}}}}}0{{ADje}AKj{}{{H`{}{{Cb{c}}}}}}0`{{{f{Cl{BJb{c}}}}}{{Bd{BAlBb}}}BJd}{{{f{BHj}}}{{f{ADl}}}}{{{f{BIn}}}{{f{ADl}}}}{{{f{BJf}}}{{f{ADl}}}}{{{f{BHl}}}{{f{ADl}}}}{{{f{BD`}}}{{f{ADl}}}}{{{f{ClBIn}}}{{f{ClADl}}}}{{{f{ClBD`}}}{{f{ClADl}}}}{{{f{BJh}}}{{f{{l{Af}}}}}}{{{f{BJj}}{C`{{f{Ah}}}}d}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BJj}}{C`{{f{Ah}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BJj}}{C`{{f{Ah}}}}Jjdd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{BJj}}{C`{{f{Ah}}}}Jjd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{{Lf{c}}}}}BJl{BJnNh}}{{{f{BK`}}}{{f{{l{j}}}}}}{{{f{{Lf{ce}}}}}{}NhBHf}{{{f{{Lf{c}}}}}M`BKb}{{{f{BKd}}}{{f{BGn}}}}{{{f{{Lf{ce}}}}}{{f{c}}}NhBHf}{{{f{AKl}}}{{f{Ed}}}}{{{f{BKf}}}{{f{B`}}}}{{{f{ClBIn}}}{{Bd{FfBb}}}}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}{{C`{{f{{Al{c}}}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{BKh}}}{{f{{l{Ad}}}}}}{{{Fl{BGn}}}BGn}{{{f{BJj}}{C`{{f{Ah}}}}d}{{Bd{{Jf{KfJh}}Bb}}}}{{{Lf{{Al{{BKj{c}}}}e}}}{{Lf{{Al{c}}e}}}{}BHf}{{{Lf{{BKj{c}}e}}}{{Lf{ce}}}{}BHf}{{{f{Ah}}}BGn}{{BGn{C`{Ih}}}BGn}{{{f{BKl}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BKl}}}{{l{Ad}}}}{{{f{{Jf{JlJh}}}}{f{Jj}}{f{AJn}}}{{Jf{KbJh}}}}`{{{BGh{{Cf{BGl}}}}{C`{{Lf{BAb}}}}}{{Bd{BKnBb}}}}{{{BL`{c}}{f{BAb}}}{{Bd{{BLb{c}}Bb}}}BLd}{{{BLf{c}}{f{BAb}}}{{Bd{{BLh{c}}Bb}}}BLd}{{{BLj{c}}Ff}{{Bd{BLlBb}}}BGl}{{{BLn{c}}{f{BAb}}}{{Bd{{BM`{c}}Bb}}}BLd}{{{f{Cl{BGh{c}}}}}{{Bd{BMbBb}}}BGl}`{BGnBMd}{{BGnBMfBGn}BGn}{{{f{BIn}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lf{ce}}}}}{{f{c}}}NhBHf}111111111111111{{{f{Clc}}}{{f{Cle}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BCbIhcEn}BCb{{Hf{{Al{BGn}}}}}}{BD`{{Cf{Cd}}}}`{BCbBCb}```{{{f{BMh}}{f{Ah}}}{{Bd{EfBb}}}}{{BMj{Fl{BGn}}}{{Bd{BGnBb}}}}{{{f{AKd}}{f{AKd}}c}{{Bd{AKdBb}}}ALl}{{{f{BJf}}{f{Cl{Al{B`}}}}}{{Bd{{C`{B`}}Bb}}}}{{{f{BMl}}B`B`}{{Bd{B`Bb}}}}{{BMj{Fl{BGn}}}BGn}{{{f{BMn}}}b}{{BGnEd}BGn}{{{f{AFd}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{ALn}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{BIn}}{f{Ed}}}{{Bd{B`Bb}}}}{{BCb{BN`{{f{Ah}}EdNn}}d}BCb}4{{BCbEdd}BCb}4`{BGnBNb}{{{f{{Lf{c}}}}}{{C`{{f{AJ`}}}}}{AJ`Nh}}{BGnBGn}{{{f{BNd}}}{{Bd{B`Bb}}}}1`{{{f{BNf}}}{{Bd{{l{Jb}}Bb}}}}{{{f{BAl}}{f{BAl}}{C`{{f{{Al{Ef}}}}}}{f{Ah}}}{{Bd{bBb}}}}{{{f{BAb}}{f{BAb}}{C`{{f{{Al{Ef}}}}}}{f{Ah}}}{{Bd{bBb}}}}0{{{f{BNh}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BIn}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNh}}c}{{Bd{B`Bb}}}Ab}{{{f{BIn}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}``{{{f{BIn}}}{{f{{Fl{{Cf{Cd}}}}}}}}{{{f{ClBIn}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGnBGnBGn}BGn}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BGnBGn}BGn}10{{{f{BNj}}}BNj}{{{f{BBb}}}BBb}{{{f{BCh}}}BCh}{{{f{BMn}}}BMn}{{{f{BCb}}}BCb}{{{f{BNl}}}BNl}{{{f{BHd}}}BHd}{{{f{AOf}}}AOf}{{{f{BHn}}}BHn}{{{f{BNn}}}BNn}{{{f{BO`}}}BO`}{{{f{BOb}}}BOb}{{{f{BHl}}}BHl}{{{f{BOd}}}BOd}{{{f{BOf}}}BOf}{{{f{BOh}}}BOh}{{{f{BOj}}}BOj}{{{f{A@`}}}A@`}{{{f{Nj}}}Nj}{{{f{BOl}}}BOl}{{{f{BOn}}}BOn}{{{f{C@`}}}C@`}{{{f{C@b}}}C@b}{{{f{C@d}}}C@d}{{{f{C@f}}}C@f}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{BGb}}}BGb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{BKd}}}BKd}{{{f{BGn}}}BGn}{{{f{CCn}}}CCn}{{{f{BMf}}}BMf}{{{f{{BIb{c}}}}}{{BIb{c}}}ABh}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{BIf}}}BIf}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{BMj}}}BMj}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{{Lf{ce}}}}}{{Lf{ce}}}Nh{BHfABh}}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{Nd}}}Nd}{{{f{BCl}}}BCl}{{{f{BD`}}}BD`}{{{f{BAb}}}BAb}{{{f{ANb}}}ANb}{{{f{BAl}}}BAl}{{{f{Nb}}}Nb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{BIn}}}{{Lf{BIn}}}}{{{f{c}}{f{Cle}}}b{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CFj}}}{{C`{{f{CFl}}}}}}````{{{f{AOf}}{f{AOf}}}AOd}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}AOd{CFnNh}BHf}{{{f{{Al{BGn}}}}}BGn}{{BHhCAf}BHh}{{{f{CAf}}{f{CAj}}}d}`{{{f{{Al{B`}}}}}{{Bd{B`Bb}}}}{{{f{Ah}}}BGn}{BCb{{Bd{AOlBb}}}}{c{{Bd{{Fl{AOl}}Bb}}}{{I`{}{{Cb{BCb}}}}}}{AMje{}{{AKh{c}}AIl}}0{{AMjADj}e{}{{AKj{c}}AIl}}0{{ABn{f{Ah}}}{{l{c}}}Db}{{AC`{f{{l{c}}}}}{{l{c}}}Db}10{{AC`{f{Ah}}Ed}{{l{c}}}Db}0{BCb{{Bd{BMnBb}}}}{cBGn{{BCd{Ef}}}}{{{f{CFb}}Ff}CG`}``{{{f{BGf}}{Fl{{f{Ah}}}}{C`{{f{Ah}}}}d}{{Bd{AOlBb}}}}`{{{f{c}}{f{e}}}AOd{}{}}0``{{{f{CCd}}}{{Bd{{Lf{BAb}}Bb}}}}{{cCF`}{{Bd{BCbBb}}}{{Hf{{Al{BCb}}}}}}{{{f{BKl}}{f{{l{Ad}}}}}{{l{Ad}}}}{{ed}{{Bd{BGnBb}}}{{AMn{BGn}}ABh}{{Hf{{Al{c}}}}}}{{{f{CFj}}{Fl{BCb}}}{{Bd{BCbBb}}}}{{{f{BNn}}{Fl{BCb}}}{{Bd{BCbBb}}}}44{e{{Bd{BGnBb}}}{{AMn{BGn}}ABh}{{Hf{{Al{c}}}}}}{{c{f{Ah}}d}BGn{{Hf{{Al{BGn}}}}}}{{BIjc}BGn{{AMn{BGn}}}}{{{f{CGb}}{f{{Al{Aj}}}}}{{l{An}}}}{{{f{BKl}}{f{Ah}}d}{{Bd{{l{An}}Bb}}}}{{BIlc}BGn{{AMn{BGn}}}}{{{f{BAb}}{f{Ah}}}d}{{{f{CGb}}{f{{l{Af}}}}}{{l{An}}}}{{{f{BKl}}{f{{l{Ad}}}}dd}{{Bd{{l{An}}Bb}}}}{{{f{BKl}}{f{Ah}}}{{Bd{{l{An}}Bb}}}}{{{f{Cd}}{f{ADj}}}{{Cf{Cd}}}}{{{f{B`}}Ff}{{Bd{{l{Ej}}Bb}}}}{BCbBCb}{BGnBGn}{{{f{BKl}}{f{Ah}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BKl}}{f{{l{Ad}}}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{CGd}}Aj{C`{Aj}}{C`{{f{C@b}}}}Ajd}{{Bd{FfBb}}}}{{{ALh{Ah}}}Ed}{{{f{BG`}}{f{{Al{Nj}}}}d}AOl}{{{f{CGf}}c}{{Cf{CGh}}}BLd}{{{f{CGj}}c}{{Cf{CGh}}}BLd}`{{BCbBCb{C`{Ef}}}BCb}{{{f{CGl}}{f{AOl}}{C`{{f{Ah}}}}{C`{{Gh{GdFf}}}}}{{Bd{AOlBb}}}}{{{f{CGl}}{f{AOl}}{C`{{Gh{GdFf}}}}d}{{Bd{{Gh{AOlAOl}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BGnd}BGn}{{BGnced}BGn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABh}{{Hf{{Al{BGn}}}}}}212121{{ce}BGn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABh}{{Hf{{Al{BGn}}}}}}32{{CGnBGnFfd}BGn}`{{{f{BD`}}}{{f{ADj}}}}{{{f{ANb}}}{{f{ADj}}}}```{{BGnBGnAOfBO`{C`{Jj}}{C`{Ef}}}BGn}`{CDjBGn}`11{AJlGd}00{{{f{CH`}}}{{l{Lj}}}}{{{f{CHb}}}{{l{Lj}}}}{{{f{BNf}}}{{Bd{{l{Lj}}Bb}}}}`{{{f{CHd}}}{{l{Jh}}}}{{{f{AOf}}}Gd}`{{{f{AOf}}}d}```{{}b}{cbBHf}{{}CGf}{{}CGj}{{}BBb}{{}BCh}{{}BCb}{{}BHn}{{}BOb}{{}BOf}{{}BOh}{{}BOl}{{}BOn}{{}C@`}{{}C@f}{{}C@h}{{}C@j}{{}C@n}{{}CA`}{{}CAb}{{}BGb}{{}CAf}{{}CAh}{{}CAl}{{}CAn}{{}CB`}{{}CBb}{{}CBd}{{}CBn}{{}CCb}{{}CCd}{{}BGn}{{}{{BIb{{Lf{CHf}}}}}}{{}{{BIb{{Lf{BMl}}}}}}{{}{{BIb{{Lf{BI`}}}}}}{{}CDj}{{}CDl}{{}CE`}{{}CEb}{{}CEd}{{}CEf}{{}CEj}{{}CEn}{{}{{Lf{c}}}CHh}{{}CF`}{{}Nd}{{}BCl}{{}BAb}{{}ANb}{{}BAl}{{}Nb}`{{}{{Ol{{Fl{A@`}}{Fl{Nj}}}}}}{Ff{{f{c}}}{}}00{{{f{{AJh{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BIb{c}}}}}f{}}2222222222222222222{{{f{{Lf{ce}}}}}{{f{c}}}NhBHf}333333333333333{Ff{{f{Clc}}}{}}00{{{f{Cl{AJh{c}}}}}{{f{Cl}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CCd}}}{{Bd{EfBb}}}}{{{f{BCb}}}{{Bd{EfBb}}}}0001{{{f{{Lf{c}}}}}{{f{Ah}}}{AJ`Nh}}{{{f{ANb}}{f{CHj}}}{{Bd{CHlBb}}}}```{{{f{B`}}GdCHn}{{Bd{B`Bb}}}}{{BIlGdCHn}BGn}{{BGnGdCHn}BGn}{{{f{CCd}}}{{Bd{{`{BA`}}Bb}}}}`{{{BH`{}{{Dd{c}}}}{f{B`}}}c{}}{{BGnBGn}}{{{f{BHb}}{f{B`}}}{{Bd{B`Bb}}}}{{BGnc}BGn{{AMn{BGn}}}}{{{Lf{ADlc}}}{{Bd{{Lf{ec}}{Lf{ADlc}}}}}BHf{ADlHlHn}}{{{Lf{ADlc}}}{{Lf{ec}}}BHf{ADlHlHn}}{{{f{{Lf{ce}}}}}{{CI`{ce}}}Nh{ABhBHf}}{Ffb}00000000000000000000000{{{f{ClBMn}}}b}{{BCbe}BCb{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Cl{Lf{ce}}}}}bNhBHf}33333333333333{BGnBGn}{{BCb{C`{{Fl{BGn}}}}}BCb}1{{{f{BIn}}}B`}{{{f{{Jf{JlJh}}}}{f{Jj}}{f{AJn}}}{{Jf{KbJh}}}}`{BGnCIb}{{{f{ALn}}}{{f{Ed}}}}{{{f{BIn}}}{{f{Ed}}}}`{{{f{Ed}}}BGn}{cBGn{{Hf{{Al{Ed}}}}}}`{CDlBGn}``{{{f{c}}}e{}{{CIf{CId}}}}0`{{{f{CGb}}{f{{Al{Aj}}}}}{{l{An}}}}{{{f{CGb}}{f{{l{Af}}}}}{{l{An}}}}{{AOf{f{Ed}}{f{Ah}}}{{Bd{bBb}}}}{{AOf{C`{{f{Ah}}}}{f{Ah}}}{{Bd{bBb}}}}{{{f{CIh}}{f{Ah}}}{{Bd{bBb}}}}`{{{f{BNj}}{f{BNj}}}d}{{{f{BBb}}{f{BBb}}}d}{{{f{BCh}}{f{BCh}}}d}{{{f{AOf}}{f{AOf}}}d}{{{f{BO`}}{f{BO`}}}d}{{{f{BOd}}{f{BOd}}}d}{{{f{BOh}}{f{BOh}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BOl}}{f{BOl}}}d}{{{f{BOn}}{f{BOn}}}d}{{{f{C@`}}{f{C@`}}}d}{{{f{C@b}}{f{C@b}}}d}{{{f{C@d}}{f{C@d}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{C@j}}{f{C@j}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{BGb}}{f{BGb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{BKd}}{f{BKd}}}d}{{{f{BGn}}{f{BGn}}}d}{{BGnc}BGn{{AMn{BGn}}}}{{{f{CCn}}{f{CCn}}}d}{{{f{BMf}}{f{BMf}}}d}{{{f{{BIb{{Lf{c}}}}}}{f{{BIb{{Lf{c}}}}}}}dNh}{{{f{{BIb{B`}}}}{f{{BIb{B`}}}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{BIf}}{f{BIf}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{{Lf{CIj}}}}{f{CIj}}}d}{{{f{{Lf{Cd}}}}{f{Cd}}}d}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CIlNh}BHf}{{{f{CF`}}{f{CF`}}}d}{{{f{CHl}}{f{CHl}}}d}{{{f{Nd}}{f{Nd}}}d}{{{f{BCl}}{f{BCl}}}d}{{{f{BD`}}{f{{f{Cd}}}}}d}{{{f{BD`}}{f{BD`}}}d}{{{f{BAb}}{f{BAb}}}d}{{{f{ANb}}{f{ANb}}}d}{{{f{BAl}}{f{BAl}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{CFh}}{f{CFh}}}d}{{BGnc}BGn{{AMn{BGn}}}}{{{f{{AFh{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CInBGnd}BGn}``{{BGnc}BGn{{BCd{Ef}}}}{{BGnc}BGn{{Hf{{Al{Ed}}}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}B@j}}}{}CJ`{}}{{{f{BCb}}d}{{Bd{EfBb}}}}{{BCbe}BCb{{AMn{BGn}}ABh}{{Hf{{Al{c}}}}}}{{{f{AFj}}}{{Bd{B`Bb}}}}{BGnBGn}{{{f{AFj}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}`{{BGnBGnBGn}BGn}{{{f{CGf}}}CGd}{{{f{CGj}}}CGd}{{{f{BKl}}{f{{l{Ad}}}}Ff}{{Bd{{l{Ad}}Bb}}}}{Nj{{Gh{IhIh}}}}{{{f{BKl}}{f{Ah}}}{{Bd{{l{j}}Bb}}}}{{{f{BKl}}{f{{l{Ad}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKl}}{f{Ah}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AAd}}}d}``{{{f{BMn}}}{{C`{{Bd{AOlBb}}}}}}{{BCbFf}{{Bd{AOlBb}}}}{{{f{BMn}}}{{Bd{AOlBb}}}}{{{f{AAd}}}{{f{Ml}}}}{{{f{BIn}}}{{Dj{Ml}}}}{{CJbGd}BGn}{{CJb{f{Ah}}}BGn}{{CJb{f{{Al{c}}}}}BGn{{Hf{Ah}}}}{{{f{BD`}}}{{f{{Al{ANb}}}}}}```{{BCbc}BCb{{AMn{BGn}}}}{{BGnc}BGn{{AMn{BGn}}}}`10{{BGnAFf}BGn}{{{f{AFl}}c}{{Bd{AFlBb}}}{}}{{{f{AFn}}{f{{l{An}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{BIn}}{f{{l{An}}}}}{{Bd{B`Bb}}}}{{BCbBGn}BCb}5{{BAlc}BAl{{Df{Ff{f{ANb}}}{{Dd{d}}}}}}{{{f{BKl}}{f{Ah}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BKl}}{f{{l{Ad}}}}dd}{{Bd{{l{Ej}}Bb}}}}{{{f{BKl}}{f{Ah}}}{{Bd{{l{Ej}}Bb}}}}{CJd{{Bd{AOlBb}}}}{{{f{ClCGh}}{f{ClAOl}}}{{Bd{bBb}}}}{AAf{{l{c}}}Db}{{ALl{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{BHhBCb}{{{BGh{c}}}{{Bd{AOlBb}}}BGl}{{{f{Cl{BL`{c}}}}{f{ClAOl}}}{{Bd{bBb}}}BLd}{{{CJf{c}}}{{Bd{AOlBb}}}BGl}{{{BJb{c}}}{{Bd{AOlBb}}}BJd}{{{f{Cl{CJh{c}}}}{f{ClAOl}}}{{Bd{bBb}}}BLd}{{{f{Cl{BLf{c}}}}{f{ClAOl}}}{{Bd{bBb}}}BLd}{CFj{{Bd{BCbBb}}}}{{{f{Cl{CJj{c}}}}{f{ClAOl}}}{{Bd{bBb}}}BLd}{{{CJl{c}}}{{Bd{AOlBb}}}BGl}{BNn{{Bd{BCbBb}}}}{{{CJn{c}}}{{Bd{AOlBb}}}BGl}{{{BLj{c}}}{{Bd{AOlBb}}}BGl}{{{BLn{c}}{f{ClAOl}}}{{Bd{J`Bb}}}BLd}{{{f{ClAAd}}}{{l{j}}}}74{BHl{{Bd{BCbBb}}}}{{{CJf{c}}{C`{{Lf{BGj}}}}d}{{Bd{AOlBb}}}BGl}{{{f{BLl}}Ff}d}{{}BGn}{BCbBCb}{BIlBGn}{BGnBGn}`0``{{}{{BIb{{Lf{BI`}}}}}}{{{f{BNd}}}{{Bd{B`Bb}}}}2{{BGnBGn}BGn}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cl{Lf{CK`}}}}}{{Bd{bB@j}}}}{{{f{BJf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BMl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BMh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BNj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BBb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BCh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BNl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AOf}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{BO`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BOd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BOh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{A@`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Nj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BOl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BOn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@b}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@d}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@f}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@h}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@j}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@l}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BHj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@n}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CA`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CKb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BGb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAj}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CAl}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CAn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CB`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CC`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BGn}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CCn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BMf}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{{BIb{c}}}}{f{ClGj}}}{{Bd{bGl}}}{}}{{{f{CD`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CDb}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CDd}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CDf}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CDh}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{BIf}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CDj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CDl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CDn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CE`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BMj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{Lf{ce}}}}{f{ClGj}}}{{Bd{bGl}}}{ADnNh}BHf}{{{f{{Lf{ce}}}}{f{ClGj}}}{{Bd{bGl}}}NhBHf}{{{f{{Lf{ce}}}}{f{ClGj}}}{{Bd{bGl}}}{BA`Nh}BHf}{{{f{CF`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CHl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Nd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BCl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BD`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BAb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{ANb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BAl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Nb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Ah}}BDf}Ef}```{{BGnce}BGn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABh}{{Hf{{Al{BGn}}}}}}{{BHhd}BHh}``{{{f{Ah}}c}{{Bd{BGnBb}}}{{Hf{{Al{BGn}}}}}}{{BGn{C`{Ih}}}BGn}{cc{}}00000000000000000000000{CCdBCb}{BHdBCb}222222222222222222{IhA@`}33333333{{{f{Ah}}}C@b}4444444444{CAjBGb}55555555555555555555555{IhBGn}{LdBGn}7{AjBGn}{MdBGn}{J`BGn}{GdBGn}{dBGn}{LlBGn}{{{f{Ah}}}BGn}{M`BGn}{InBGn}{BKdBGn}{MjBGn}{cc{}}0{CKd{{BIb{{Lf{BJf}}}}}}{CKf{{BIb{{Lf{BJf}}}}}}{CKh{{BIb{{Lf{BJf}}}}}}3{CKj{{BIb{{Lf{BJf}}}}}}{CD`{{BIb{{Lf{BJf}}}}}}{CDh{{BIb{{Lf{BJf}}}}}}{BIf{{BIb{{Lf{BJf}}}}}}{CDd{{BIb{{Lf{BJf}}}}}}{CKl{{BIb{{Lf{BJf}}}}}}{CDb{{BIb{{Lf{BJf}}}}}}:::::{CD`BIf}{CDbBIf}{CDhBIf}={CKhBIf}>>>>>>{CEfCEd}???????{c{{Lf{c}}}{}}{{{f{CKn}}}{{Lf{CKn}}}}{Ef{{Lf{Ah}}}}{{{Dj{c}}}{{Lf{c}}}{CL`Nh}}{CGd{{Lf{CKn}}}}{CLb{{Lf{CLd}}}}{{{f{{Al{c}}}}}{{Lf{{Al{c}}}}}ABh}{CLf{{Lf{CLh}}}}{{{f{CLd}}}{{Lf{CLd}}}}{{{Cf{ce}}}{{Lf{ce}}}NhBHf}{{{f{Ah}}}{{Lf{Ah}}}}{{{Od{c}}}{{Lf{{Al{c}}}}}{}}{{{Fl{ce}}}{{Lf{{Al{c}}e}}}{}{BHfABh}}{{{Lf{Ah}}}{{Lf{{Al{Aj}}}}}}{CLjc{}}{{{f{CLh}}}{{Lf{CLh}}}}{cc{}}{CLlCHl}111111{CLnBD`}{CM`BD`}{{{f{BAn}}}BAb}{BAlBAb}5{{{f{BAl}}}BAb}{{{f{{Al{B`}}}}}BAb}{{{f{{Lf{BAl}}}}}BAb}{{{Lf{BAl}}}BAb}9{{{Fl{ANb}}}BAl}:::::{{c{C`{Hj}}}CMb{}}{{{CMd{Gd}}{CMd{Aj}}{C`{Hj}}}CMf}{{{CMd{Gd}}{CMd{Aj}}{C`{Hj}}}CMh}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}00{c{{AJh{{l{An}}}}}{{H`{}{{Cb{d}}}}}}{c{{AJh{{l{e}}}}}{{H`{}{{Cb{}}}}}n}{e{{Lf{{Al{c}}}}}{}{{H`{}{{Cb{c}}}}}}{eBAb{{AMn{Ml}}}{{H`{}{{Cb{c}}}}}}{{gFf}{{CMj{Gd}}}Hf{{H`{}{{Cb{{C`{c}}}}}}}{{H`{}{{Cb{{C`{e}}}}}}}}0{e{{CMj{Gd}}}{{H`{}{{Cb{{C`{d}}}}}}}{{H`{}{{Cb{{C`{c}}}}}}}}{{{f{Ah}}e}ABl{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gADj}{{CMj{Gd}}}BEl{{H`{}{{Cb{{C`{c}}}}}}}{{H`{}{{Cb{{C`{e}}}}}}}}673{{{f{Ah}}e}ABl{}{{Ch{}{{Cb{c}}}}}}{c{{AJh{{l{e}}}}}{{I`{}{{Cb{}}}}}n}{e{{Lf{{Al{c}}}}}Hl{{I`{}{{Cb{c}}}}}}`{c{{Bd{{CJn{CK`}}Bb}}}{{AMn{CGd}}}}{{}{{Lf{c}}}Nh}{c{{Lf{ec}}}BHfNh}{{{f{Ah}}{f{{Al{c}}}}}ABl{}}{{{f{Ah}}{f{{Al{{C`{c}}}}}}}ABl{}}{{{f{Ah}}}{{Bd{CMl}}}}{c{{AJh{{l{e}}}}}{{Id{}{{Cb{}}}}}n}{c{{AJh{{l{An}}}}}{{Id{}{{Cb{d}}}}}}{Ed{{BIb{{Lf{BI`}}}}}}{{{f{Ah}}c}CMn{}}{{{Fl{c}}ADj}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{Fl{c}}ADj}{{AIl{}{{AKn{e}}{AL`{c}}{ALb{g}}}}}{ALd{ALf{e}}}ABh{{G`{}{{Cb{e}}}}IdHlHn}}`{{{f{Ah}}cFf}AG`{}}{{FfcADj}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{BCbBCbcc}BCb{{AMn{BGn}}}}{{{f{CN`}}{f{AOl}}ee}{{Bd{AOlBb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{{f{Ah}}Ff}AGb}{{FfADj}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}``{{BGnc{BIb{{Lf{BI`}}}}CNb}BGn{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}`{{BGnc}BGn{{AMn{BGn}}}}{{BGnFfFf}BGn}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CNdNh}BHf}{{{f{BIn}}Ff}{{Bd{IfBb}}}}{{BIjBGnd}BGn}{{BIlBGnd}BGn}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}Ff}{{C`{c}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}6{{{f{BAb}}{f{Ah}}}{{C`{{f{Ed}}}}}}{{{f{AGd}}Ff}{{Bd{IfBb}}}}{{{f{ALn}}Ff}{{Bd{IfBb}}}}{{{f{AGd}}Ff}If}{{{f{ALn}}Ff}If}{{{f{BAb}}Ff}{{C`{{Gh{{f{{ANn{ANl}}}}{f{Ed}}}}}}}}{{{f{ClBAb}}Ff}{{C`{{Gh{{f{Cl{ANn{ANl}}}}{f{ClEd}}}}}}}}{BNbBGn}{{{f{BCb}}}CEj}{{{f{CEl}}}Ed}{{}Ed}{{{f{BOj}}GdBO`{C`{{f{AJn}}}}}{{Bd{BNlBb}}}}00{{{f{CHf}}{f{BAb}}CNf{f{Ml}}{f{Ml}}}{{C`{Ml}}}}{{{f{BI`}}{f{BAb}}CNf{f{{Al{Ml}}}}}Ml}{{{f{BAb}}{f{Ah}}}{{C`{Ml}}}}{{{f{ADj}}}{{f{{Al{ANb}}}}}}{{{f{BJ`}}}Ff}{{{f{BAb}}{f{Ah}}}{{C`{{Gh{Ff{f{{ANn{ANl}}}}{f{Ed}}}}}}}}{{{f{CNh}}}B`}{{{f{Cl{BLj{c}}}}}{{Bd{{f{{Lf{CFb}}}}Bb}}}BGl}{{{f{Cl{Lf{ce}}}}}{{C`{{f{Clc}}}}}NhBHf}{{{f{Cl{Lf{ce}}}}}{{f{Clc}}}NhBHf}{{{f{CNj}}}{{Fl{{f{Ah}}}}}}{{{f{BAb}}}{{Fl{{f{Ah}}}}}}{{{f{BAl}}}{{Fl{{f{Ah}}}}}}{{{f{BIn}}Ff}{{C`{{f{Il}}}}}}{{{f{BIn}}FfFf}{{C`{{f{Il}}}}}}{{{f{BJf}}}{{C`{{BIb{{Lf{BI`}}}}}}}}{{{f{BOj}}BNlBO`Jj{C`{{f{AJn}}}}BOh}{{Bd{CNlBb}}}}{{{f{BOl}}}{{Lf{BOn}}}}{{{f{Clc}}}{{Bd{CNnBb}}}{BJdBGlNh}}{{{f{CKb}}{f{BAb}}}{{Bd{{Lf{BAb}}Bb}}}}{{cFf}{{Fl{{Gh{FfFf}}}}}{{Ch{}{{Cb{Ff}}}}}}{{{f{AO`}}Ff}If}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}Ff}{{C`{c}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{BIn}}Ff}If}{{{f{CFj}}}d}{{{f{BNn}}}d}`{{BCbe}BHd{{AMn{BGn}}ABh}{{Hf{{Al{c}}}}}}{{{f{CO`}}{Fl{B`}}{f{BBb}}}{{Bd{{Gh{B`{Fl{B`}}Bh}}Bb}}}}{{BCbBGncBBb}BHd{{Hf{{Al{BGn}}}}}}2{{AOfAOf{f{{Al{Gd}}}}BO`Jj{C`{AJn}}}{{Bd{{Fl{{Od{Ih}}}}Bb}}}}{{BOj{f{{Al{Gd}}}}BO`Jj{f{{C`{Ef}}}}ddBOh}{{Gh{{Fl{{Od{Ih}}}}{Fl{Gd}}{Fl{Gd}}}}}}{{{f{BEb}}dd}{{Bd{BhBb}}}}{{{f{{AFh{}{{Cb{c}}}}}}e}c{}{}}{{BGnc}BGn{{AMn{BGn}}}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CNdNh}BHf}21`{{{f{BIn}}}d}{{{f{COb}}}d}{{{f{BBb}}{f{Clc}}}bAGf}{{{f{BCh}}{f{Clc}}}bAGf}{{{f{AOf}}{f{Clc}}}bAGf}{{{f{BO`}}{f{Clc}}}bAGf}{{{f{BOd}}{f{Clc}}}bAGf}{{{f{BOh}}{f{Clc}}}bAGf}{{{f{BOl}}{f{Clc}}}bAGf}{{{f{BOn}}{f{Clc}}}bAGf}{{{f{C@`}}{f{Clc}}}bAGf}{{{f{C@b}}{f{Clc}}}bAGf}{{{f{C@d}}{f{Clc}}}bAGf}{{{f{C@f}}{f{Clc}}}bAGf}{{{f{C@h}}{f{Clc}}}bAGf}{{{f{C@j}}{f{Clc}}}bAGf}{{{f{C@l}}{f{Clc}}}bAGf}{{{f{C@n}}{f{Clc}}}bAGf}{{{f{CA`}}{f{Clc}}}bAGf}{{{f{CAb}}{f{Clc}}}bAGf}{{{f{BGb}}{f{Clc}}}bAGf}{{{f{CAd}}{f{Clc}}}bAGf}{{{f{CAf}}{f{Clc}}}bAGf}{{{f{CAh}}{f{Clc}}}bAGf}{{{f{CAj}}{f{Clc}}}bAGf}{{{f{CAl}}{f{Clc}}}bAGf}{{{f{CAn}}{f{Clc}}}bAGf}{{{f{CB`}}{f{Clc}}}bAGf}{{{f{CBb}}{f{Clc}}}bAGf}{{{f{CBd}}{f{Clc}}}bAGf}{{{f{CBf}}{f{Clc}}}bAGf}{{{f{CBh}}{f{Clc}}}bAGf}{{{f{CBj}}{f{Clc}}}bAGf}{{{f{CBl}}{f{Clc}}}bAGf}{{{f{CBn}}{f{Clc}}}bAGf}{{{f{CC`}}{f{Clc}}}bAGf}{{{f{CCb}}{f{Clc}}}bAGf}{{{f{BKd}}{f{Clc}}}bAGf}{{{f{BGn}}{f{Clc}}}bAGf}{{{f{CCn}}{f{Clc}}}bAGf}{{{f{BMf}}{f{Clc}}}bAGf}{{{f{CD`}}{f{Clc}}}bAGf}{{{f{CDb}}{f{Clc}}}bAGf}{{{f{CDd}}{f{Clc}}}bAGf}{{{f{CDf}}{f{Clc}}}bAGf}{{{f{CDh}}{f{Clc}}}bAGf}{{{f{BIf}}{f{Clc}}}bAGf}{{{f{CDn}}{f{Clc}}}bAGf}{{{f{CE`}}{f{Clc}}}bAGf}{{{f{CEb}}{f{Clc}}}bAGf}{{{f{CEd}}{f{Clc}}}bAGf}{{{f{CEf}}{f{Clc}}}bAGf}{{{f{CEh}}{f{Clc}}}bAGf}{{{f{CEl}}{f{Clc}}}bAGf}{{{f{CEn}}{f{Clc}}}bAGf}{{{f{{Lf{ce}}}}{f{Clg}}}b{COdNh}BHfAGf}{{{f{CF`}}{f{Clc}}}bAGf}{{{f{BCl}}{f{Clc}}}bAGf}{{{f{BAb}}{f{Clc}}}bAGf}{{{f{ANb}}{f{Clc}}}bAGf}{{{f{Nb}}{f{Clc}}}bAGf}{{{f{CFh}}{f{Clc}}}bAGf}{{{f{COf}}{f{B`}}CAld}{{Bd{{Gh{{Gh{{Fl{Ih}}{Fl{Ih}}}}d}}Bb}}}}{{{f{COf}}{f{B`}}CAld}{{Bd{{Gh{{AJd{Ih}}{AJd{Ih}}}}Bb}}}}{{BHd{C`{Ff}}}BCb}{{BIlBGn}BGn}{{BGn{C`{Ff}}}BGn}{{{f{BKl}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BKl}}}{{l{Ad}}}}`{{{f{{Al{{f{{l{Ad}}}}}}}}{f{Ah}}d}{{Bd{{l{Ad}}Bb}}}}{{{f{COh}}}{{l{Lj}}}}{{{f{CHb}}}{{l{Lj}}}}{{{f{BNf}}}{{Bd{{l{Lj}}Bb}}}}`{{{f{CHd}}}{{l{Jh}}}}`{{BHhCAj}BHh}``{{{f{A@`}}}Ih}`{{{f{{Jf{JlJh}}}}{f{{l{Ad}}}}CFh{Fh{Gd}{{Dd{AJl}}}}{Fh{AJl}{{Dd{Gd}}}}{f{AJn}}{f{AJn}}}{{Bd{{l{Jh}}Bb}}}}{{{f{{Jf{JlJh}}}}{C`{{f{Ah}}}}{Fh{Gd}{{Dd{AJl}}}}{Fh{AJl}{{Dd{Gd}}}}{f{AJn}}{f{AJn}}}{{Bd{{l{Jh}}Bb}}}}{{{f{CNh}}}{{Bd{{l{j}}Bb}}}}{BGnBGn}{{{f{AJl}}}d}{{{BL`{c}}d}{{BL`{c}}}BLd}``0`{{}b}{cb{ABhBHf}}{cBGn{{Hf{{Al{Gd}}}}}}``{{{f{CNj}}{f{Ah}}}{{C`{Ff}}}}{{{f{BAb}}{f{Ah}}}{{C`{Ff}}}}{{{f{BAl}}{f{Ah}}}{{C`{Ff}}}}{{{f{{Al{Ih}}}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{CNn}}Aj{C`{Ff}}d{C`{{f{BAb}}}}FfFf{C`{{f{C@b}}}}{C`{Aj}}Aj{C`{{f{C@d}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gh{BAbFfFf}}Bb}}}}{{{CJl{c}}{C`{Ff}}}{{CJl{c}}}BGl}{{{CJn{c}}{C`{Ff}}}{{CJn{c}}}BGl}``{{}Ff}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{ClAAd}}}{{Cf{Cd}}}}{{BCbBCbcc}BCb{{AMn{BGn}}}}{{{f{CN`}}{f{AOl}}ee}{{Bd{AOlBb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{{f{ClNj}}}{{f{ClJ`}}}}`{{{f{ClBAb}}Ff{ANn{ANl}}Ed}{{Bd{{C`{Ed}}Bb}}}}{{BGnBGnGdEd}BGn}{{BGnBGnBGn}BGn}``{{{f{B`}}CBj}B`}{{BGnCBj}BGn}`{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{BGnBGn}BGn}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BD`{{Gh{{Fl{ANb}}{Fl{{Cf{Cd}}}}{C`{Hj}}}}}}{{{AJh{c}}}c{}}{{{Lf{ce}}}{{C`{c}}}{}BHf}33{{{f{BGn}}}}{{{f{BD`}}}}{BAb}{COjBIl}{BIlBIl}{{{Lf{ce}}}{}NhBHf}{{BOlc}{{BGh{c}}}BGl}{BAdB`}{{{Lf{BIn}}}B`}{CFbCOl}{BCd{{Fl{c}}}{}}{c{{Fl{Ef}}}{}}{c{{Fl{{ANn{ANl}}}}}{}}{{{f{CAj}}}d}{{{f{B`}}{f{B`}}{f{B`}}CBn}{{Bd{{l{An}}Bb}}}}{{BGnccCBn}BGn{{AMn{BGn}}}}{cd{{Hf{CKn}}}}{{{f{{Al{Aj}}}}}d}{{{f{AOf}}{C`{{f{Ah}}}}}d}{{{f{BIn}}}d}{{{f{BAb}}}d}{{{f{BAl}}}d}{{{f{BLl}}}d}{BGnBGn}{{{f{B`}}}{{Bd{{l{An}}Bb}}}}{{{f{AGh}}}{{Bd{{l{An}}Bb}}}}2{{{f{AOf}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{An}}Bb}}}}{{BGnc}BGn{{AMn{BGn}}}}54{{{f{AGj}}}{{Bd{{l{An}}Bb}}}}6{{{f{CH`}}}{{l{An}}}}{{{f{CHb}}}{{l{An}}}}{{{f{BNf}}}{{Bd{{l{An}}Bb}}}}999{{{f{BIn}}}{{l{An}}}}::0{{{f{Nj}}}d};{{{f{A@`}}}d}`{{{f{B`}}}d}{{{f{{Lf{CK`}}}}}d}{{}d}{{{f{CIh}}Eh}{{Bd{dBb}}}}{{{f{c}}}d{}}0{{{f{CAl}}{f{CAj}}}{{Bd{bBb}}}}4?{{{f{CH`}}}{{l{Jb}}}}{{{f{CHb}}}{{l{Jb}}}}{{{f{BNf}}}{{Bd{{l{Jb}}Bb}}}}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}{{AEb{cgAE`}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{BD`}}}{{AEb{{Fl{{Cf{CIj}}}}COnAE`}}}}{{{f{BAb}}}{{`{{Ch{}{{Cb{{Gh{{f{{ANn{ANl}}}}{f{Ed}}}}}}}}}}}}{{{f{BAb}}}{{`{Kd}}}}{{{f{ClBAb}}}{{`{Kd}}}}11{{{f{CFj}}}{{Bd{{C`{{Cf{Ch}}}}Bb}}}}{{BIjBGnd}BGn}{{BCbBCbccBGb}BCb{{Hf{{Al{BGn}}}}}}{{BIlBGnd}BGn}{{{f{CN`}}{f{AOl}}eeBGb}{{Bd{AOlBb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{{f{D@`}}{f{AOl}}{f{Ah}}{f{Ah}}CBd{C`{If}}{C`{Ef}}}{{Bd{AOlBb}}}}{{{f{D@b}}{f{AOl}}{f{Ah}}{f{Ah}}eeCBd{C`{If}}}{{Bd{AOlBb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{BCbBHh}{{{f{D@d}}{f{Ah}}d}{{Bd{{l{Ad}}Bb}}}}{{{f{D@d}}{f{{l{Ad}}}}d}{{Bd{{l{Ad}}Bb}}}}{{BHhd}BHh}`{CJbBGn}{D@fBGn}{{{f{CFb}}}{{f{{C`{{Fl{D@h}}}}}}}}``{{}BGn}{BCbBCb}{BIlBGn}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}{{C`{c}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{BGnBGn}{D@jBCb}4{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CNdNh}BHf}`{{BCbBCbcc}BCb{{AMn{BGn}}}}{{{f{CN`}}{f{AOl}}ee}{{Bd{AOlBb}}}{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{BHhc}BHh{{Hf{{Al{BGn}}}}}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}c}e{}{}{}}{{c{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}<{{{f{BIn}}}Ff};9{{{f{BD`}}}Ff}{{{f{BAb}}}Ff}{{{f{BAl}}}Ff}{{BCbIh}BCb}{{{f{BIn}}Ff}B`}{{{f{BLl}}}d}`{BGnBIl}{cBGnD@l}{D@lBGn}{D@nBGn}{CElBGn}{{BGnc}BGn{{AMn{BGn}}}}0``{{BHld}BHl}{{{CJn{c}}d}{{CJn{c}}}BGl}```{BGnBGn}{{{f{D@d}}}{{l{Ej}}}}0{{{f{D@d}}{f{{Al{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{D@d}}GdCHn}{{Bd{{l{j}}Bb}}}}{{{f{D@d}}Gdd}{{Bd{B`Bb}}}}{{{f{D@d}}{f{{l{Ad}}}}d}{{Bd{{l{Ad}}Bb}}}}4{{{f{D@d}}}{{Bd{B`Bb}}}}{{{f{D@d}}}B`}01{{{f{D@d}}}{{Bd{{l{Ej}}Bb}}}}{{{f{D@d}}}{{l{j}}}}{{{f{D@d}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{D@d}}GdFf}{{l{j}}}}{{{f{D@d}}Eh}{{Bd{{l{j}}Bb}}}}{{{f{D@d}}Aj}B`}7{{{f{D@d}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AFh{}{{Cb{c}}}}}}e}c{}{}}{{BGnc}BGn{{AMn{BGn}}}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CNdNh}BHf}21``````{{{f{AKd}}{f{AKd}}}{{Bd{{Gh{AKdAKd}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}{{{f{Cl{Lf{ce}}}}}{{f{Clc}}}ABh{BHfABh}}{{BCbcCEj{C`{{Lf{CKb}}}}{C`{{f{Ah}}}}}BCb{{Df{AOl}{{Dd{{Bd{AOlBb}}}}}}HlHn}}{{D@fc}BGn{{Df{{f{Ah}}}{{Dd{{Bd{EfBb}}}}}}HlHn}}{{BGnc{BIb{{Lf{BI`}}}}}BGn{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BGnBGnc{BIb{{Lf{BI`}}}}}BGn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BGn{f{Clc}}{f{Cl}}}{{Bd{BGnBb}}}{{Dn{BGn{f{Cl}}}{{Dd{{Bd{BGnBb}}}}}}}}{{{f{BJ`}}{C`{{f{Ef}}}}}{{Bd{MlBb}}}}{{{f{BJ`}}c}{{Bd{MlBb}}}{{A@b{{f{Ed}}}{{Dd{Ed}}}}}}{c{{BIb{{Lf{BI`}}}}}{{Df{{f{Ed}}}{{Dd{Ed}}}}HlHn}}{c{{BIb{{Lf{BI`}}}}}{{Df{{f{{Al{{f{Ed}}}}}}}{{Dd{Ed}}}}HlHn}}{{BGnc}BGn{{Dn{BGn}{{Dd{BGn}}}}}}{c{{BIb{{Lf{BI`}}}}}{{Df{{f{Ml}}}{{Dd{Ml}}}}HlHn}}{{D@f{Lf{Df}}}BGn}{c{{BIb{{Lf{BI`}}}}}{{Df{{f{{Al{Ml}}}}}{{Dd{Ml}}}}HlHn}}:{{ce{BIb{{Lf{BI`}}}}}BGn{{Df{{f{Cl{Al{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}{{Hf{{Al{BGn}}}}}}{{BGnc{f{{Al{BGn}}}}{BIb{{Lf{BI`}}}}}BGn{{Df{{f{Cl{Al{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BGnBIf{f{{Al{BGn}}}}dd}BGn}2{{{f{BJ`}}}{{Bd{MlBb}}}}{{BOlc}BOl{{Df{BOn}{{Dd{BOn}}}}}}1111{CElCEl}{{{C`{{f{{Al{Ff}}}}}}{f{BAl}}{C`{{f{{Al{B`}}}}}}{C`{{f{DA`}}}}}AOl}{{{C`{{f{{Al{Ef}}}}}}{f{BAb}}{C`{{f{{Al{B`}}}}}}d}{{C`{{Fl{Ff}}}}}}{{{f{Ah}}}BGn}{BIjBGn}{BCbBCb}{BIlBGn}{{{f{AGl}}}{{C`{c}}}{}}{BGnBGn}{{{f{DAb}}}Lb}{{{f{BIn}}}{{Bd{LbBb}}}}`754{{{f{AGl}}}{{C`{Ld}}}}3{{{f{BIn}}}{{C`{Ld}}}}9876{{{f{AGn}}}{{C`{c}}}{}}51{{{f{DAd}}}Lb}4{{BCbBCf}BCb}``{{{CJf{c}}{C`{CGd}}}{{CJf{c}}}BGl}{{{f{ClBAb}}BAb}b}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClBAb}}{f{BAb}}}b}````{{{f{CHd}}}{{l{Jh}}}}`{{{f{BNf}}}{{Bd{{l{Jb}}Bb}}}}1`{{{f{Ah}}}BGn}{BIjBGn}{BCbBCb}{BIlBGn}{{{f{AGl}}}{{C`{c}}}{}}{BGnBGn}{{{f{AGl}}}{{C`{{Gh{cc}}}}}{}}```{{{f{DAb}}}Lb}{{{f{BIn}}}{{Bd{LbBb}}}}`{{{f{COh}}}{{l{Lj}}}}{{{f{CHb}}}{{l{Lj}}}}{{{f{BNf}}}{{Bd{{l{Lj}}Bb}}}}`=```6{{{f{CH`}}}{{l{Lj}}}}21`{{{f{DAf}}{C`{{f{AJn}}}}}{{Bd{DAfBb}}}}{{{f{DAh}}{C`{{f{AJn}}}}}{{Bd{DAhBb}}}}{{{f{AOf}}}Gd}{{{f{AOf}}}d}{{{BH`{}{{Dd{c}}}}{f{B`}}}c{}}{{AOfGd}AOf}{{BGnBGn}}{{{f{BHb}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BIn}}}Ff}{{{f{CFj}}}{{C`{Ff}}}}{{{f{BNn}}}{{C`{Ff}}}}{{{f{BHl}}}{{C`{Ff}}}}`````{{{BL`{c}}Ff}{{BL`{c}}}BLd}`{BIjBGn}{BIlBGn}{{{f{AFb}}}{{Bd{FfBb}}}}{BGnBGn}{{{f{BIn}}}{{Bd{FfBb}}}}{{{f{BIn}}}{{f{Ah}}}}{BGnD@f}````33`{{{f{COh}}}{{l{Jb}}}}{{{f{CHb}}}{{l{Jb}}}}{{{f{BNf}}}{{Bd{{l{Jb}}Bb}}}}{{{f{CHd}}}{{l{Jh}}}}{{{f{AOf}}}Gd}`{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CIlNh}BHf}{{{f{CAl}}}d}{BGn}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{AOf}}}d}{{DAjFf}{{C`{Ff}}}}{{BGnc}BGn{{AMn{BGn}}}}0{{{f{BJ`}}}{{Bd{MlBb}}}}{{}c{}}{cCJdBJd}{cCGhBLd}2{{{f{Ah}}c}DAl{}}{c{{AJh{c}}}{}}{BCbBHh}{c{{BGh{c}}}BGl}{c{{BL`{c}}}BLd}{{{f{{Al{Ml}}}}}BJ`}{c{{CJf{c}}}BGl}{c{{BJb{c}}}BJd}{c{{CJh{c}}}BLd}{{}CGf}{c{{BLf{c}}}BLd}{{}CGj}{c{{CJj{c}}}BLd}{c{{CJl{c}}}BGl}{GdAOf}{cBNn{{Hf{CKn}}}}{cBHl{{Hf{CKn}}}}{{AOfAOfAOf}BOj}{c{{CJn{c}}}BGl}{{DAn{Lf{CFb}}{Lf{BAl}}Ff{C`{{Fl{Ff}}}}{C`{{Lf{BGj}}}}{C`{DA`}}Ffd{C`{{Fl{B`}}}}CAh}{{Bd{BLlBb}}}}{c{{BLj{c}}}BGl}{c{{BLn{c}}}{BLdBLd}}{CAjBGb}{c{{BIb{c}}}{}}{{BGnBGnBGn}CDj}{{}CDl}{{{f{Ah}}{Fl{Ml}}{BIb{{Lf{BI`}}}}c}BMjBJf}{c{{Lf{c}}}{}}{{ADj{Fl{{Cf{Cd}}}}{C`{Hj}}}BD`}{{}BAb}{{cADjd}ANb{{AMn{Ef}}}}{e{{Lf{c}}}{}{{A@b{{f{{CI`{c}}}}}{{Dd{c}}}}}}{ADjBD`}{{{f{AH`}}FfFf}{{l{c}}}Db}{{{f{BIn}}FfFf}B`}{{{f{Ah}}}C@b}{{ce}{{Lf{ce}}}{}BHf}{{{f{BAb}}Ff{ANn{ANl}}Ed}{{Bd{BAbBb}}}}{{Gd{f{Ah}}}{{Bd{B`Bb}}}}{EfC@b}{{ADjFf}BD`}{{{Lf{{Al{CGd}}}}}BNn}{{{Lf{{Al{CGd}}}}}BHl}{AjC@b}{{}{{Lf{{BKj{c}}}}}{}}{c{{Lf{{BKj{e}}c}}}BHf{}}{Ff{{Lf{{Al{{BKj{c}}}}}}}{}}{{Ffc}{{Lf{{Al{{BKj{e}}}}c}}}BHf{}}3210{{{f{ClDB`}}}C`}{{{f{ClCNl}}}C`}{{{f{ClBMb}}Ff}{{Bd{{C`{{Fl{AOl}}}}Bb}}}}{{{f{ClBKn}}Ff}{{Bd{{C`{{Fl{AOl}}}}Bb}}}}{{{f{ClBLl}}Ff}{{Bd{{C`{{Fl{AOl}}}}Bb}}}}{{{f{BGn}}{f{Cl{BDd{{f{BGn}}}}}}}b}{{BGn{f{Cl{BDd{BGn}}}}}b}{BGnBGn}0{{{f{{AFh{}{{Cb{c}}}}}}e}c{}{}}0{GdBGn}`{{}A@`}{{}Nj}`{{{f{BIn}}}Ff}{BCbBCb}6````{{{f{Cl{BLj{c}}}}}{{Bd{FfBb}}}BGl}````{{{f{AFj}}}{{Bd{{Gf{Gd}}Bb}}}}{{BHhc}BHh{{Hf{{Al{BGn}}}}}}{{BCb{f{Cl{BFl{BFj}}}}{f{Cl{BFl{BFn}}}}}{{Bd{BFhBb}}}}`{{BGnc}BGn{{AMn{BGn}}}}{{{f{CH`}}}{{l{Mb}}}}{{{f{CHb}}}{{l{Mb}}}}{{{f{BNf}}}{{Bd{{l{Mb}}Bb}}}}{{{f{BNf}}}{{Bd{{l{Jb}}Bb}}}}{{CChc}BGn{{AMn{BGn}}}}{{CClc}BGn{{AMn{BGn}}}}`{{BGne}BGn{{AMn{BGn}}ABh}{{Hf{{Al{c}}}}}}{{BGneCEf}BGn{{AMn{BGn}}ABh}{{Hf{{Al{c}}}}}}```{{{f{Ah}}}AOf}{{{f{Ah}}{f{{Al{{f{Ah}}}}}}{f{Ah}}}{{Jf{JdJb}}}}{{{f{Ah}}{f{{Al{{f{Ah}}}}}}{f{Ah}}}{{Jf{KfJh}}}}{{{f{Ah}}{f{{Al{{f{Ah}}}}}}{f{Ah}}Jj}{{Jf{JlJh}}}}``{{{f{AOf}}{f{AOf}}}{{C`{AOd}}}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}{{C`{AOd}}}{CNdNh}BHf}{{{f{CFj}}}{{f{CKn}}}}{{{f{BNn}}}{{f{CKn}}}}{{{f{BHl}}}{{f{CKn}}}}`{{{f{CFj}}}{{f{{Al{CGd}}}}}}{{{f{BNn}}}{{f{{Al{CGd}}}}}}{{{f{BHl}}}{{f{{Al{CGd}}}}}}``{{}BGn}{c{{DBb{{Lf{c}}}}}{}}{{ce}{{DBb{{Lf{ce}}}}}{}BHf}````{{BGnc}BGn{{AMn{BGn}}}}```{{D@f{f{Ah}}}BGn}0{{{f{AOl}}{f{AOl}}d}{{Bd{{Gh{{Ol{{Fl{Ih}}{Fl{Nj}}}}{Ol{{Fl{A@`}}{Fl{Nj}}}}}}Bb}}}}`{{{f{DAb}}}Lb}{BGnBGn}{BCb{{Bd{{Gh{AOlAOl}}Bb}}}}```{{{f{{Lf{c}}}}{f{ClDBd}}}b{AJ`Nh}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}dNhBHf}{{{f{Ah}}BGnNb}BGn}{{BCbBGnNb}BCb}{{{f{AGn}}LdNb}{{Bd{{C`{c}}Bb}}}{}}{{BGnBGnNb}BGn}{{{f{DAd}}LdNb}{{Bd{LbBb}}}}{{{f{BIn}}LdNb}{{Bd{LbBb}}}}{{{f{CH`}}}{{l{Lj}}}}{{{f{CHb}}}{{l{Lj}}}}{{{f{BNf}}}{{Bd{{l{Lj}}Bb}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}B@j}}}{}CJ`{}}````{{{f{DBf}}CCb{C`{J`}}}B`}{{BGnCCb{C`{J`}}}BGn}{{{f{Cl{Lf{CK`}}}}{f{Cl{Al{Aj}}}}}{{Bd{FfB@j}}}}{{{f{Cl{Lf{CK`}}}}DBh}{{Bd{bB@j}}}}{{{BLj{c}}CAh}{{BLj{c}}}BGl}{{{f{Cl{Lf{CK`}}}}{f{Cl{Fl{Aj}}}}}{{Bd{FfB@j}}}}{{{f{Cl{Lf{CK`}}}}{f{ClEf}}}{{Bd{FfB@j}}}}{{{f{Clc}}}{{Bd{eB@j}}}{}DBj}{{{f{Cl{Lf{CK`}}}}{f{Cl{Al{DBl}}}}}{{Bd{FfB@j}}}}{{{f{CFj}}}d}{{{f{BIn}}}B`}{{{f{BNn}}}d}{{{f{BHl}}}d}````{{ce}BGn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABh}{{Hf{{Al{BGn}}}}}}{{{f{AHb}}}B`}0{{{BH`{}{{Dd{c}}}}{f{B`}}}c{}}{{BGnBGn}}{{{f{BHb}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClBAb}}{f{Ah}}}{{C`{Ed}}}}{{{f{ClBIn}}{f{Ah}}}b}{{BCbei}BCb{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}{{Hf{Ah}}}{{H`{}{{Cb{g}}}}}}{{{f{ClBAb}}{f{Ah}}{ANn{ANl}}}{{C`{{ANn{ANl}}}}}}{{CJb{Fl{Ef}}}BGn}{{cBGn}BGn{{AMn{BGn}}}}{{{f{B`}}{f{{l{Ej}}}}}{{Bd{{l{j}}Bb}}}}{{BGnc}BGn{{AMn{BGn}}}}{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{C`{Ed}}}{{Bd{B`Bb}}}}{{{f{BKl}}{f{Ah}}{f{Ah}}}{{Bd{{l{Ad}}Bb}}}}{{BGncc{C`{c}}{C`{Ed}}}BGn{{AMn{BGn}}}}1{{{f{BJ`}}{C`{Ed}}}{{Bd{MlBb}}}}{{{f{BKl}}{f{Ah}}{f{Ah}}Ff}{{Bd{{l{Ad}}Bb}}}}3{{{f{{Jf{JlJh}}}}{C`{{f{Ah}}}}{f{{l{Ad}}}}CFh}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{ClBAb}}Ff}b}{{BGn{f{{Al{Gd}}}}CEh}BGn}{{{f{CNh}}{f{{Al{Gd}}}}}{{Bd{B`Bb}}}}0{{{f{CKn}}}CGd}`{{{f{AHd}}}AHd}{{{f{BIn}}}B`}{BIjBGn}{BCbBCb}{BIlBGn}{BGnBGn}`{{BHhc}BHh{{Hf{{Al{BGn}}}}}}{{{f{CO`}}{Fl{B`}}{f{BCh}}}{{Bd{{Gh{B`{Fl{B`}}Bh}}Bb}}}}{{BCbBGncBCh}BHd{{Hf{{Al{BGn}}}}}}{{BGnBCh}BGn}{{{f{AHf}}{f{Df}}Nd}{{Bd{B`Bb}}}}{{BGn{Lf{Df}}{BIb{{Lf{BI`}}}}Nd}BGn}{{{f{BIn}}{f{Df}}Nd}{{Bd{B`Bb}}}}{{BGnFfc}BGn{{Dn{{f{Cl{l{Eb}}}}}{{Dd{{C`{Ld}}}}}}HlHnDh}}{{{f{DBn}}Nd}{{Bd{B`Bb}}}}{{BGnNd}BGn}{{{f{DBn}}{f{B`}}BNj}{{Bd{B`Bb}}}}{{BGnBGnBNj}BGn}32102032103{{BGnNbLdNd}BGn}2{{BGnBGnNbLdBNj}BGn}543254325432{{{f{DC`}}{f{{l{Ad}}}}AOf{C`{{f{AJn}}}}}{{Bd{DC`Bb}}}}{{{f{BNd}}Ih}{{Bd{B`Bb}}}}{{BGnIh}BGn}{{{f{BOj}}Gd{C`{{f{AJn}}}}}{{Bd{GdBb}}}}0{{{f{BNd}}M`}{{Bd{B`Bb}}}}{{BGnM`}BGn}2````{{{f{CFj}}}{{C`{{f{DA`}}}}}}{{{f{BNn}}}{{C`{{f{DA`}}}}}}{{{f{BHl}}}{{C`{{f{DA`}}}}}}``````{{{f{D@d}}{l{j}}}{{l{j}}}}{{}{{BIb{{Lf{BI`}}}}}}{{BGnBGndd{C`{J`}}}BGn}0`{{{f{BHj}}DCb}{{Bd{AOlBb}}}}{{{f{BHl}}DCb}{{Bd{AOlBb}}}}{{cBOb}{{Bd{BCbBb}}}{{Hf{CKn}}}}{{{Lf{{Al{CGd}}}}BOb}{{Bd{BCbBb}}}}{{cBOf}{{Bd{BCbBb}}}{{Hf{CKn}}}}{{{Lf{{Al{CGd}}}}BOf}{{Bd{BCbBb}}}}{{DCd{f{{Al{Ih}}}}e}{{Bd{B`Bb}}}Dh{{H`{}{{Cb{{C`{c}}}}}}}}{{{f{AHh}}c{C`{e}}}{{Bd{AHhBb}}}{{H`{}{{Cb{Ih}}}}}{}}{{{f{AHh}}ci}{{Bd{AHhBb}}}{{H`{}{{Cb{Ih}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}{{{f{Cl{CJf{c}}}}}{{Bd{{Lf{BAl}}Bb}}}BGl}{{{f{Cl{BJb{c}}}}}{{Bd{BAbBb}}}BJd}{{{f{ClBCb}}}{{Bd{{Lf{BAb}}Bb}}}}{{{f{BHl}}{C`{Ff}}}{{Bd{{Lf{BAb}}Bb}}}}{{{f{BLl}}}{{f{{Lf{BAl}}}}}}{{{f{Cl{BLj{c}}}}}{{Bd{{Lf{BAl}}Bb}}}BGl}{{{f{BHj}}{C`{Ff}}}{{Bd{{Lf{BAb}}Bb}}}}{{{f{CFb}}}{{f{DCf}}}}``````{{{f{ClBCb}}{f{Cl{BFl{BFj}}}}{f{Cl{BFl{BFn}}}}}{{Bd{{Lf{BAb}}Bb}}}}`{{{f{COh}}}{{l{Lj}}}}{{{f{CHb}}}{{l{Lj}}}}{{{f{BNf}}}{{Bd{{l{Lj}}Bb}}}}`{{{f{CHd}}}{{l{Jh}}}}`{{{f{Cl{Lf{CK`}}}}DCh}{{Bd{J`B@j}}}}{{BCbc}BCb{{Hf{{Al{BGn}}}}}}0````{{{f{AHh}}{f{{l{An}}}}{C`{c}}}{{Bd{AHhBb}}}{}}{{{f{BCb}}{BFl{BFj}}{BFl{BFn}}}b}{{{f{ClBAb}}{f{Ah}}Ed}{{C`{Ed}}}}{{{f{ClBAb}}FfEd}{{C`{Ed}}}}{{{BLj{c}}d}{{BLj{c}}}BGl}{{{BLn{c}}d}{{BLn{c}}}BLd}{{{CJf{c}}d}{{CJf{c}}}BGl}{{{BJb{c}}d}{{BJb{c}}}BJd}{{{CJl{c}}d}{{CJl{c}}}BGl}4{{CJdd}CJd}{{BGnKj}BGn}{{{f{ClBD`}}{C`{Hj}}}b}{{{f{AHj}}Gd}{{l{c}}}Db}{{{f{BIn}}Gd}B`}{{BIjBGn}BGn}{{BCbc}BCb{{AMn{BGn}}}}{{BIlBGn}BGn}{{BGnBGn}BGn}{{{f{AHl}}Gdc}{{l{e}}}{}Db}{{BCbce}BCb{{AMn{BGn}}}{{AMn{BGn}}}}{{BGnce}BGn{{AMn{BGn}}}{{AMn{BGn}}}}{{{f{ClBAb}}{f{Ah}}}{{C`{Ed}}}}{{{f{ClBAb}}Ff}{{C`{{Gh{{ANn{ANl}}Ed}}}}}}{BGnBGn}{{{f{ClAAf}}}b}{{{f{ClBIn}}}b}{{BGn{C`{J`}}}BGn}``{{BCbCGdC@f}{{Bd{bBb}}}}{{BCbCGdC@n}{{Bd{bBb}}}}{{BCbCGdCAb}{{Bd{bBb}}}}{{BCbCGdCAn}{{Bd{bBb}}}}`````{{{f{BIn}}GdFf}B`}{{BCbGdIh}BCb}{{BIlBGnBGn}BGn}={{{f{ClBD`}}FfFf}b}0```{{{f{AHn}}FfFf}AHn}{{{f{c}}FfFf}e{}{}}1022{{BD`FfFf}BD`}0`{{{f{AF`}}d}{{l{c}}}Db}{{BIjEh}BGn}{{BCbcEn}BCb{{BCd{{ANn{ANl}}}}}}{{BIlEh}BGn}{{BGnEh}BGn}{{BGneEn}BGn{{AMn{BGn}}ABh}{{Hf{{Al{c}}}}}}{{BCbcEn}BCb{{Hf{{Al{BGn}}}}}}{{{f{AF`}}Eh}{{l{c}}}Db}{{{f{BIn}}Eh}{{Bd{B`Bb}}}}{{{f{{Lf{c}}}}}{{C`{{f{AJ`}}}}}{AJ`Nh}}{{{f{BKl}}{f{{l{Ad}}}}}{{l{j}}}}{{{f{BKl}}{f{{l{Ad}}}}Ff}{{Bd{AKbBb}}}}0{{{f{{l{Ad}}}}{f{{l{Ad}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{Ah}}}}}}}{{Df{{f{Ah}}{f{Ah}}}{{Dd{c}}}}}}2{{{f{{l{Ad}}}}{f{{l{Ad}}}}Ffed}{{Bd{AKbBb}}}{{Ch{}{{Cb{{f{Ah}}}}}}}{{Df{{f{Ah}}{f{Ah}}}{{Dd{c}}}}}}2{BGnBGn}`{{{f{CGb}}{f{{Al{Aj}}}}}{{l{An}}}}{{{f{CGb}}{f{{l{Af}}}}}{{l{An}}}}`{{BIjAj}BGn}{{BCbAj}BCb}{{BIlAj}BGn}{{{f{AI`}}Aj}{{C`{Ld}}}}{{BGnAj}BGn}{{{f{BIn}}Aj}{{C`{Ld}}}}{{{f{DCj}}Aj}Lb}{{{f{BIn}}Aj}{{Bd{LbBb}}}}{{IhIh}Nj}{BGnDCl}{{{f{{l{Ad}}}}{f{Ah}}d}{{l{Ad}}}}{{{f{BKl}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BKl}}}{{l{Ej}}}}0{{{f{BKl}}}{{l{Ad}}}}{{{f{BKl}}{f{B`}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}3````{{{f{BNf}}{f{Ah}}}{{Bd{B`Bb}}}}`{{BGnEd}BGn}`{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{Ad}}}}606060{{{f{BKl}}{f{{l{Ad}}}}}{{l{Ad}}}}10{{{f{{Lf{ce}}}}}FfNhBHf}{BGnCJb}{{{BH`{}{{Dd{c}}}}{f{B`}}}c{}}{{BGnBGn}}{{{f{BHb}}{f{B`}}}{{Bd{B`Bb}}}}{{BHhc}BHh{{Hf{Ah}}}}{{D@f{f{Ah}}}BGn}{{{f{BGb}}}{{f{Ah}}}}`1{{{f{Ah}}}BGn}{BIjBGn}{BCbBCb}{BIlBGn}{{{f{AGl}}}{{C`{c}}}{}}{BGnBGn}{{{f{DAb}}}Lb}{{{f{BIn}}}{{Bd{LbBb}}}}{{}{{BIb{{Lf{BI`}}}}}}{{{f{Clc}}i}{{Bd{gB@j}}}{}{}{}{{A@b{{f{Cle}}}{{Dd{g}}}}}}{{BCbIh}BCb}{{BHd{C`{Ff}}}BCb}{{BIlBGn}BGn}{{BGn{C`{Ff}}}BGn}{{{f{AIb}}{f{c}}}{{Bd{AIbBb}}}Nh}{{{f{BIn}}{f{{l{Ej}}}}}{{Bd{B`Bb}}}}{{{f{DCn}}{f{{Al{Nj}}}}Kj}DCn}{{{f{DCn}}{f{{Al{Nj}}}}}DCn}{{{f{BIn}}{f{{Al{Ih}}}}}{{Bd{B`Bb}}}}{{{f{BIn}}{f{{Al{Ih}}}}}B`}{{{f{AId}}{f{c}}}AIdNh}{{{f{BIn}}{f{{l{Ej}}}}}B`}{{{f{ClBD`}}}{{C`{Hj}}}}{{BGnBGnBGn}BGn}{{CCfc}CCh{{AMn{BGn}}}}{{CCjc}CCl{{AMn{BGn}}}}`{{BGnBGnAOfBO`}BGn}```{{{f{BNf}}Jj}{{Bd{{l{Jh}}Bb}}}}{BCb{{Bd{DD`Bb}}}}{CCd{{Bd{DD`Bb}}}}1{{{f{CEl}}}{{C`{If}}}}{{BIlFf}BGn}{{{f{BAb}}d}BAl}{{{f{BD`}}}{{Cf{Cd}}}}{{{f{AIf}}}{{Fl{{f{{Al{Aj}}}}}}}}{{{f{BCb}}d}{{Bd{EfBb}}}}{{{f{DDb}}{C`{{f{Ah}}}}d}{{Bd{AOlBb}}}}{{{f{BGf}}{C`{{f{Ah}}}}d}{{Bd{AOlBb}}}}{{{f{BGn}}{f{BAb}}CNf}{{Bd{MlBb}}}}{{{f{BKl}}{f{{l{Ej}}}}d}{{Bd{{l{Jh}}Bb}}}}{BIjBGn}{{{f{BKl}}}{{l{Ad}}}}{D@fBGn}{{{f{A@`}}}{{C`{Ih}}}}{{{f{c}}}e{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BGnBGn}{{{f{BJ`}}}{{Bd{MlBb}}}}{{{f{BNf}}{f{Ah}}}{{Bd{B`Bb}}}}{{{f{c}}}Ef{}}00000000000{{{f{ClBAb}}{f{BAb}}}{{Bd{dBb}}}}`887``{{BCbIhcEn}BCb{{Hf{{Al{BGn}}}}}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}g{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}c}g{}{}{}}{{c{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}g{}{}{}}{{{f{DDd}}{C`{{f{AJn}}}}{f{{l{Ad}}}}{f{Ah}}}{{Bd{DDdBb}}}}{{{f{AOf}}Gd{C`{{f{AJn}}}}ceg}{{Bd{GdBb}}}{{Df{Gd}{{Dd{Gd}}}}}{{Df{Gd}{{Dd{AJl}}}}}{{Df{AJl}{{Dd{Gd}}}}}}{{{f{AOf}}Gd{C`{{f{AJn}}}}}{{Bd{GdBb}}}}{{{f{BOj}}Gd{C`{{f{AJn}}}}}{{Bd{GdBb}}}}00010`10{g{{Bd{AKhe}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{{ADjg}{{Bd{AKje}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{AMj{{Bd{eg}}}{}{{AKh{c}}AIl}{}}0{{AMjADj}{{Bd{eg}}}{}{{AKj{c}}AIl}{}}0{{ABn{f{Ah}}}{{Bd{{l{c}}e}}}Db{}}{{AC`{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{AC`{f{Ah}}Ed}{{Bd{{l{c}}e}}}Db{}}0{c{{Bd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{If{{Bd{CElBb}}}}11{{{Lf{{Al{c}}e}}}{{Bd{{Lf{{Od{c}}e}}}}}{}BHf}222222222222222{COl{{Bd{CFbB@l}}}}{{{f{BAb}}{f{Ah}}}{{Bd{{f{Ed}}Bb}}}}{{{f{BAb}}Ff}{{Bd{{Gh{{f{{ANn{ANl}}}}{f{Ed}}}}Bb}}}}{{{f{BAb}}{f{Ah}}}{{Bd{MlBb}}}}{{{f{BAb}}{f{Ah}}}{{Bd{{Gh{Ff{f{{ANn{ANl}}}}{f{Ed}}}}Bb}}}}{{{f{ClBAb}}{f{Ah}}}{{Bd{{f{ClEd}}Bb}}}}{{{f{CNj}}{f{Ah}}}{{Bd{FfBb}}}}999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{BOl{C`{CGd}}}{{Bd{{BGh{CK`}}Bb}}}}{{{f{BJ`}}c}{{Bd{MlBb}}}{{A@b{{f{Ed}}}{{Dd{{Bd{EdBb}}}}}}}}{{{f{BJ`}}c}{{Bd{MlBb}}}{{A@b{{f{{Al{{f{Ed}}}}}}}{{Dd{{Bd{EdBb}}}}}}}}{{BGnc}{{Bd{BGnBb}}}{{Dn{BGn}{{Dd{{Bd{BGnBb}}}}}}}}{{{f{BJ`}}c}{{Bd{MlBb}}}{{A@b{{f{Ml}}}{{Dd{{Bd{MlBb}}}}}}}}{{DAjFf}{{Bd{FfBb}}}}{Aj{{Bd{CBfBb}}}}{Ih{{Bd{CBhBb}}}}{M`{{Bd{CBlBb}}}}{c{{Bd{{Lf{c}}DDf}}}{}}{{ADj{Fl{{Cf{Cd}}}}{C`{Hj}}}{{Bd{BD`Bb}}}}{{ce}{{Bd{{Lf{ce}}DDf}}}{}BHf}{{}{{Bd{{Lf{{BKj{c}}}}DDf}}}{}}{c{{Bd{{Lf{{BKj{e}}c}}DDf}}}BHf{}}10`{c{{Bd{{DBb{{Lf{c}}}}DDf}}}{}}{{ce}{{Bd{{DBb{{Lf{ce}}}}DDf}}}{}BHf}{{{f{BJf}}{f{Cl{Fl{Aj}}}}}{{Bd{bBb}}}}{{{Lf{ce}}}{{Bd{c{Lf{ce}}}}}{}BHf}``{{{f{c}}}On{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Ah}}}}`{{{f{AFb}}}{{Bd{AFbBb}}}}{BIjBGn}{{BCb{C`{{Fl{Ef}}}}BAh}BCb}{BIlBGn}{BGnBGn}{{{f{BIn}}}{{Bd{B`Bb}}}}4321{{BCbe}BCb{{Hf{Ah}}}{{H`{}{{Cb{c}}}}}}{{{Lf{{DDh{c}}}}}{{Bd{cb}}}Hl}{{{Lf{ce}}}cABhBHf}{{{f{ClBOl}}{f{DDj}}}b}5{{{f{DDl}}c{f{Ah}}AOfAOf}{{Bd{AOlBb}}}{{BCd{Ef}}}}0{{{BLj{c}}d}{{BLj{c}}}BGl}```{{BHhCAl}BHh}`{{{f{BD`}}}{{C`{{f{Hj}}}}}}0{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}Ff}cABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{CIh}}ddEf}{{Bd{AOlBb}}}}{{BGnddEf}BGn}`2`{{{f{BD`}}}{{f{{Al{{Cf{Cd}}}}}}}}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}gABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{BD`}}}COn}{{BIjAj}BGn}{{BCbAj}BCb}{{BIlAj}BGn}{{{f{AI`}}Aj}{{C`{Ld}}}}{{BGnAj}BGn}{{{f{BIn}}Aj}{{C`{Ld}}}}{{{f{DCj}}Aj}Lb}{{{f{BIn}}Aj}{{Bd{LbBb}}}}`{{{f{DDn}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{DDn}}Nn{f{Cl{Al{J`}}}}}{{Bd{bBb}}}}`{{{f{{Lf{{DDh{c}}}}}}g}{{Bd{eb}}}Hl{}{{A@b{{f{c}}}{{Dd{e}}}}}}{ce{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lf{ce}}}}}FfNhBHf}{{{f{CH`}}}{{l{Lj}}}}{{{f{CHb}}}{{l{Lj}}}}{{{f{BNf}}}{{Bd{{l{Lj}}Bb}}}}210{{{f{BOh}}}{{C`{Ih}}}}{{{f{AOf}}}Gd}`{{{f{AOf}}}d}`{cCCf{{AMn{BGn}}}}{{CChc}CCj{{AMn{BGn}}}}{{CClc}CCj{{AMn{BGn}}}}```{{BHhBCb}BHh}{{CDjBGn}CDj}{{{BL`{c}}{DE`{Ff}}}{{BL`{c}}}BLd}{{{CJl{c}}{DE`{Ff}}}{{CJl{c}}}BGl}{{BHl{C`{{DE`{Ff}}}}}BHl}{{BNnd}BNn}{Ffc{}}0{FfBAb}{{{CJn{c}}{C`{{DE`{Ff}}}}}{{CJn{c}}}BGl}{{BOlFf}BOl}{{BCbd}BCb}{{BGbCAf}BGb}{{BCbBGn}BCb}{{{f{ClBAb}}{ANn{ANl}}Ed}{{C`{Ed}}}}{{{CJf{c}}{C`{{Fl{Ef}}}}}{{CJf{c}}}BGl}{{{BJb{c}}{C`{{Fl{Ef}}}}}{{BJb{c}}}BJd}{{BCbc}BCb{{Hf{{Al{BGn}}}}}}{{{BLj{c}}{C`{{Fl{Ef}}}}}{{BLj{c}}}BGl}{{BOl{C`{{Lf{{Fl{Ef}}}}}}}BOl}`2{{BNn{C`{{f{Ah}}}}}BNn}{{BOn{C`{c}}}BOn{{AMn{C@b}}}}{{{CJh{c}}{C`{CA`}}}{{CJh{c}}}{}}{{CGf{C`{CA`}}}CGf}{{{BLf{c}}{C`{CA`}}}{{BLf{c}}}BLd}{{CGj{C`{CA`}}}CGj}{{{BLn{c}}CBb}{{BLn{c}}}BLd}{{BCbc}BCb{{Hf{{Al{BCb}}}}}}{{{BLn{c}}{C`{Ff}}}{{BLn{c}}}BLd}{{{BL`{c}}{C`{Ef}}}{{BL`{c}}}BLd}0{{CDjBGn}CDj}{{CDlBGn}CDl}{{BNnd}BNn}{{BOnd}BOn}{{{f{BJ`}}Ed}{{Bd{MlBb}}}}{{BNn{C`{{Lf{BAb}}}}}BNn}{{BOl{C`{{Lf{{Fl{Ed}}}}}}}BOl}{{BNnC@`}BNn}{{BOnC@`}BOn}{{BNnAj}BNn}{{BOnAj}BOn}{{CGfCGd}CGf}{{CGjCGd}CGj}{{CJb{Fl{BGn}}}BGn}{{{BL`{c}}{C`{Ff}}}{{BL`{c}}}BLd}{{CDlBGnBGnBGn}CDl}=={{BOld}BOl}{{{BLj{c}}{C`{{Fl{B`}}}}}{{BLj{c}}}BGl}{{CDjBGnBGnBGn}CDj}3{{CDjBGn}CDj}{{CDlBGn}CDl}{{{CJl{c}}d}{{CJl{c}}}BGl}{{BNnd}BNn}{{BHld}BHl}{{{CJn{c}}d}{{CJn{c}}}BGl}8{{BNn{C`{Ff}}}BNn}{{BHl{C`{Ff}}}BHl}{{BOl{C`{Ff}}}BOl}{{{CJj{c}}DEb}{{CJj{c}}}BLd}{{{CJl{c}}DEb}{{CJl{c}}}BGl}{{{BL`{c}}Ef}{{BL`{c}}}BLd}8>{{ANb{DEd{EfEf}}}ANb}{{BAl{DEd{EfEf}}}BAl}=<<=<:{{BOnd}BOn}>{{CFjc}CFj{{AMn{{C`{Ff}}}}}}{{{CJf{c}}{C`{Ff}}}{{CJf{c}}}BGl}{{{BJb{c}}{C`{Ff}}}{{BJb{c}}}BJd};{{BNnc}BNn{{AMn{{C`{Ff}}}}}};{{BHlc}BHl{{AMn{{C`{Ff}}}}}}{{{CJn{c}}{C`{Ff}}}{{CJn{c}}}BGl}{{{BLj{c}}{C`{Ff}}}{{BLj{c}}}BGl}=1={{CDlBGn}CDl};{{BNn{C`{C@d}}}BNn}{{BOn{C`{C@d}}}BOn}{{BCbCEj}BCb}{{BOlBOn}BOl}{{CFjCGd}CFj}{{BNnCGd}BNn}{{BHlCGd}BHl}{{{CJn{c}}{C`{e}}}{{CJn{c}}}BGl{{AMn{CGd}}}}{{BOl{C`{c}}}BOl{{AMn{CGd}}}}{{CFj{Lf{{Al{CGd}}}}}CFj}{{BNn{Lf{{Al{CGd}}}}}BNn}{{BHl{Lf{{Al{CGd}}}}}BHl}{{{CJh{c}}d}{{CJh{c}}}{}}{{{BLf{c}}d}{{BLf{c}}}BLd}{{{BLj{c}}{C`{{Lf{BGj}}}}}{{BLj{c}}}BGl}{{BCbd}BCb}{{{CJf{c}}{C`{{Fl{Ff}}}}}{{CJf{c}}}BGl}{{{BJb{c}}{C`{{Fl{Ff}}}}}{{BJb{c}}}BJd}{{{CJl{c}}{C`{{Fl{Ef}}}}}{{CJl{c}}}BGl}{{{BLj{c}}{C`{{Fl{Ff}}}}}{{BLj{c}}}BGl}{{BOl{C`{{Lf{{Fl{Ff}}}}}}}BOl}5{{{BL`{c}}Aj}{{BL`{c}}}BLd}{{BNn{C`{Aj}}}BNn}{{BOn{C`{Aj}}}BOn}{{{BL`{c}}C@j}{{BL`{c}}}BLd}{{BNnd}BNn}{{BOld}BOl}{{CFjd}CFj}2{{BHld}BHl}{{{CJn{c}}d}{{CJn{c}}}BGl}3>{{{BLn{c}}{C`{Ff}}}{{BLn{c}}}BLd}{{CFjc}CFj{{AMn{{C`{DA`}}}}}}{{{CJf{c}}{C`{DA`}}}{{CJf{c}}}BGl}{{{BJb{c}}{C`{DA`}}}{{BJb{c}}}BJd}{{BCb{f{Ah}}{C`{Ih}}}BCb}{{BNn{C`{DA`}}}BNn}{{BNnc}BNn{{AMn{{C`{DA`}}}}}}{{BHlc}BHl{{AMn{{C`{DA`}}}}}}{{BHl{C`{DA`}}}BHl}{{{BLj{c}}{C`{DA`}}}{{BLj{c}}}BGl}{{BOl{C`{DA`}}}BOl}{{{f{BJ`}}}{{Bd{MlBb}}}}{{BOlFf}BOl}{{{CJl{c}}{Lf{BAb}}}{{CJl{c}}}BGl}{{BNn{C`{{Lf{BAb}}}}}BNn}{{BHl{C`{{Lf{BAb}}}}}BHl}{{{CJn{c}}{Lf{BAb}}}{{CJn{c}}}BGl}{{{BLj{c}}{C`{{Lf{BAl}}}}}{{BLj{c}}}BGl}{{BOl{C`{{Lf{BAb}}}}}BOl}{{BNnc}{{Bd{BNnBb}}}{{Df{BAb}{{Dd{{Bd{BAbBb}}}}}}}}{{{CJl{c}}{f{BAb}}}{{CJl{c}}}BGl}{{{CJn{c}}{f{BAb}}}{{CJn{c}}}BGl}3{{CDjBGn}CDj}{{CDlBGn}CDl}{{{BL`{c}}Aj}{{BL`{c}}}BLd}{{BNnAj}BNn}{{BOnAj}BOn}{{BCbd}BCb}{{BNnFf}BNn}{{BOlFf}BOl}102{{{BLn{c}}d}{{BLn{c}}}BLd}3{{BGb{C`{Ef}}}BGb}{{{BL`{c}}{C`{Ef}}}{{BL`{c}}}BLd}{{CDjJj}CDj}{{CDj{C`{Ef}}}CDj}{{BNnd}BNn}{{BOnd}BOn}109{{BD`{C`{Hj}}}BD`}{{{f{BD`}}{C`{Hj}}}{{Cf{Cd}}}}{{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}{C`{Hj}}}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{CDlBGn}CDl}{{CDjBGn}CDj}{BCbBCb}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}c}e{}{}{}}10{{c{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}210213210210{{{f{Cl{Lf{CK`}}}}{f{{Al{Aj}}}}}{{Bd{FfB@j}}}}{{{f{Clc}}e}{{Bd{FfB@j}}}{}DBj}{{{f{Cl{Lf{CK`}}}}{f{{Al{DEf}}}}}{{Bd{FfB@j}}}}{{BGnc}BGn{{AMn{BGn}}}}{{{f{CH`}}}{{l{Jb}}}}{{{f{CHb}}}{{l{Jb}}}}{{{f{BNf}}}{{Bd{{l{Jb}}Bb}}}}``{{{f{AIh}}{f{{l{An}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BDb}}c}B`{{Df{{Gh{Ih{f{{BDd{Ih}}}}}}}{{Dd{C`}}}}HlHn}}{{{f{BDb}}c}B`{{Df{{Gh{Ih{f{{BDd{Ih}}}}}}}{{Dd{}}}}HlHn}}{{{f{{Al{{Od{Ih}}}}}}c}B`{{Df{{Od{Ih}}}{{Dd{C`}}}}HlHn}}{{{f{{Al{{Od{Ih}}}}}}c}B`{{Df{{Od{Ih}}}{{Dd{}}}}HlHn}}{{{f{{Al{c}}}}e{C`{{Lf{ADl}}}}}{{AJd{c}}}{BEjBEl}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{Al{c}}}}{f{Hj}}e{C`{{Lf{ADl}}}}}{{AJd{c}}}{BEjBEl}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{l{c}}}}IhIh}{{l{c}}}Db}{{{f{{Fl{{Od{Ih}}}}}}{f{{Al{{Cf{Cd}}}}}}}d}{{{f{BEn}}{f{Bh}}}B`}{{BF`BF`}BF`}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AIj{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ah}}}{{l{k}}}DbDb{CdAIl}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Ah}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AIn{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJ`{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Ah}}}{{Bd{{l{m}}i}}}DbDbCdAJ`{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJ`{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAIl}AJ`{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AJb{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAJbDb}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAIl}{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}0``{{{f{DEh}}}{{l{Ej}}}}0{{{f{DEh}}{f{{l{Jh}}}}d}{{Bd{B`Bb}}}}{{{f{DEh}}{f{{l{Ad}}}}d}{{Bd{B`Bb}}}}{{{f{DEh}}}B`}{{{f{DEh}}}{{Bd{B`Bb}}}}1{{{f{DEh}}}{{Bd{{l{Ej}}Bb}}}}{{{f{DEh}}}{{l{Bj}}}}{{{f{DEh}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DEh}}Eh}{{Bd{{l{Bj}}Bb}}}}{{{f{DEh}}Aj}{{Bd{B`Bb}}}}5{{{f{DEh}}}{{Bd{{l{j}}Bb}}}}01{{{f{DEj}}}{{f{{l{Bj}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{BMdBGn}BGn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}3{cc{}}{{}Ff}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}2````````{{{f{BJj}}{C`{{f{Ah}}}}d}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BJj}}{C`{{f{Ah}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BJj}}{C`{{f{Ah}}}}Jjdd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{BJj}}{C`{{f{Ah}}}}Jjd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{BJj}}{C`{{f{Ah}}}}d}{{Bd{{Jf{KfJh}}Bb}}}}`{{{f{CH`}}}{{l{Lj}}}}{{{f{CHb}}}{{l{Lj}}}}{{{f{CHd}}}{{l{Jh}}}}`{{{f{COh}}}{{l{Lj}}}}21{{{f{CH`}}}{{l{An}}}}{{{f{CHb}}}{{l{An}}}}{{{f{CH`}}}{{l{Jb}}}}{{{f{CHb}}}{{l{Jb}}}}55`46576{{{f{COh}}}{{l{Jb}}}}16{{{f{CH`}}}{{l{Mb}}}}{{{f{CHb}}}{{l{Mb}}}}{{{f{Ah}}{f{{Al{{f{Ah}}}}}}{f{Ah}}}{{Jf{JdJb}}}}{{{f{Ah}}{f{{Al{{f{Ah}}}}}}{f{Ah}}}{{Jf{KfJh}}}}{{{f{Ah}}{f{{Al{{f{Ah}}}}}}{f{Ah}}Jj}{{Jf{JlJh}}}}=<{{{f{DBn}}Nd}{{Bd{B`Bb}}}}{{{f{DBn}}{f{B`}}BNj}{{Bd{B`Bb}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BJj}}{C`{{f{Ah}}}}d}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BJj}}{C`{{f{Ah}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BJj}}{C`{{f{Ah}}}}Jjdd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{BJj}}{C`{{f{Ah}}}}Jjd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{DEl}}}{{f{{l{Ad}}}}}}{{{f{BJj}}{C`{{f{Ah}}}}d}{{Bd{{Jf{KfJh}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DEn}}}DEn}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DEn}}{f{DEn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DEn}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DEn}}{f{Clc}}}bAGf}`{{}Ff}{ce{}{}}{{{f{DEn}}{f{Ah}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{{DF`{c}}}}}{{DF`{c}}}{ABhn}}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}?{{{f{Ah}}}{{C`{DEn}}}}>=`{{{f{Cl{DF`{c}}}}{f{Ah}}}C`n}{{{f{ClDFb}}{f{{Al{Aj}}}}{C`{Jj}}}{{C`{c}}}{}}{{{f{Cl{DF`{Jb}}}}{f{{Al{Aj}}}}{C`{Jj}}}{{C`{M`}}}}{{{f{Cl{DF`{Jh}}}}{f{{Al{Aj}}}}{C`{Jj}}}{{C`{Gd}}}}`?>{{c{C`{Jj}}}{{Bd{{DFf{}{{DFd{e}}}}Bb}}}{}{}}{{DEn{C`{Jj}}}{{Bd{{DF`{Jh}}Bb}}}}{{DEn{C`{Jj}}}{{Bd{{DF`{Jb}}Bb}}}}{c{{Bd{e}}}{}{}}{{{f{c}}}On{}}{ce{}{}}```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0{{{f{CFl}}}CFl}{{{f{c}}{f{Cle}}}b{}{}}{{}CFl}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{Ffb}0{{{f{CFl}}{f{CFl}}}d}{{{f{DFh}}{f{DFh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CFl}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}0{{{f{Ah}}}{{Bd{DFh}}}}{{{f{Ah}}g}{{Bd{CFlBb}}}{{Hf{Ah}}}{{AMn{Ef}}}{{H`{}{{Cb{{Gh{ce}}}}}}}}{{{f{CFl}}{f{Clc}}}bAGf}{{}Ff}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}On{}}033`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAKh{}{{H`{}{{Cb{c}}}}}}0{{ADje}AKj{}{{H`{}{{Cb{c}}}}}}0{{{f{AKl}}}{{f{Ed}}}}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}{{C`{{f{{Al{c}}}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{AKd}}{f{AKd}}c}{{Bd{AKdBb}}}ALl}{{{f{ALn}}{f{Ed}}}{{Bd{B`Bb}}}}`{AMje{}{{AKh{c}}AIl}}0{{AMjADj}e{}{{AKj{c}}AIl}}0{{{ALh{Ah}}}Ed}{{{f{ALn}}}{{f{Ed}}}}`{{ALl{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{{{Fl{c}}ADj}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{Fl{c}}ADj}{{AIl{}{{AKn{e}}{AL`{c}}{ALb{g}}}}}{ALd{ALf{e}}}ABh{{G`{}{{Cb{e}}}}IdHlHn}}{{FfcADj}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{FfADj}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}Ff}{{C`{c}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{ALn}}Ff}{{Bd{IfBb}}}}{{{f{ALn}}Ff}If}{{}Ed}{{{f{AO`}}Ff}If}4{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}{{AEb{cgAE`}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}{{C`{c}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{AKd}}{f{AKd}}}{{Bd{{Gh{AKdAKd}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}`{{}c{}}0{g{{Bd{AKhe}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{{ADjg}{{Bd{AKje}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{AMj{{Bd{eg}}}{}{{AKh{c}}AIl}{}}0{{AMjADj}{{Bd{eg}}}{}{{AKj{c}}AIl}{}}0{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}Ff}cABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}0{{{f{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}}}gABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{Ffc{}}0{{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}{C`{Hj}}}{{AIl{}{{AKn{c}}{AL`{e}}{ALb{g}}}}}ABh{ALd{ALf{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}```````````{{{f{AKd}}{f{AKd}}c}{{Bd{AKdBb}}}ALl}{{ALl{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jf{JlJh}}}}{f{{l{Ad}}}}CFh{Fh{Gd}{{Dd{AJl}}}}{Fh{AJl}{{Dd{Gd}}}}{f{AJn}}{f{AJn}}}{{Bd{{l{Jh}}Bb}}}}{{{f{{Jf{JlJh}}}}{C`{{f{Ah}}}}{Fh{Gd}{{Dd{AJl}}}}{Fh{AJl}{{Dd{Gd}}}}{f{AJn}}{f{AJn}}}{{Bd{{l{Jh}}Bb}}}}{{{f{{Jf{JlJh}}}}{C`{{f{Ah}}}}{f{{l{Ad}}}}CFh}{{Bd{{Jf{JlJh}}Bb}}}}```{{c{C`{Hj}}}CMb{}}{{{CMd{Gd}}{CMd{Aj}}{C`{Hj}}}CMf}{{{CMd{Gd}}{CMd{Aj}}{C`{Hj}}}CMh}`{CIbBGn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{CIbJj}BGn}3{{CIbBGnJj}BGn}{{CIbEf}BGn}555{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}8{cc{}}9{{}Ff}{ce{}{}};;;;;;;;;;{{CIb{C`{Ef}}BGnCFh}BGn}{{CIbBGnc}BGn{{Hf{Ah}}}}={{CIb{f{Ah}}}BGn}>;0>>>>>>>{{CIbBGnEf}BGn}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}6{CIbBGn}0?0`{{{f{BFb}}{f{AOl}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BFb}}}{{Bd{{f{Ah}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}DFj}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{DFj{C`{{f{ADj}}}}}{{Bd{AClBb}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DFj}}}d}{{FfFf}DFj}{{{f{ClDFj}}{Cf{Cd}}}b}{{{f{ClDFj}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}6`{{{f{{l{c}}}}}Ffn}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFl}}}DFl}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DFl}}{f{DFl}}}d}{{{f{DFl}}{f{ClGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DFl}}{f{Clc}}}bAGf}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFn}}}DFn}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DFn}}{f{DFn}}}d}{{{f{DFn}}{f{ClGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DFn}}{f{Clc}}}bAGf}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}4{{KjKj}Kj}{{{f{{l{Ej}}}}Ih}{{Bd{bBb}}}}{{{f{{AJd{Ih}}}}Ih}{{Bd{bBb}}}}```{{{f{B`}}CBj}B`}{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bh}}}B`}0{{{f{B`}}{f{Ah}}}B`}0`{{{f{c}}h}b{}}{{{f{DG`}}}{{f{ADl}}}}{{{f{ClDG`}}}{{Cf{Cd}}}}{{{f{ClDG`}}}{{f{ClADl}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DG`}}}DG`}{{{f{c}}{f{Cle}}}b{}{}}{{{f{DG`}}}{{f{ADj}}}}{{}DG`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{ClDG`}}Ff}b}{{{f{DG`}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DG`}}}Ff}{FfDG`}{{{f{ClDG`}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}{{{f{DG`}}}{{C`{{f{DGb}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DDj}}}DDj}{{{f{c}}{f{Cle}}}b{}{}}{{}DDj}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DDj}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DDj}}}Ff}{{{f{DDj}}}{{Lf{BAb}}}}{{{f{CNn}}Aj{C`{Ff}}d{C`{{f{BAb}}}}FfFf{C`{{f{C@b}}}}{C`{Aj}}Aj{C`{{f{C@d}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gh{BAbFfFf}}Bb}}}}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{{f{CNn}}{f{BOl}}}{{Bd{DDjBb}}}}1{{{f{c}}}On{}}4{{DDj{Lf{BAb}}}DDj}````{{{f{{l{c}}}}eAJfd}{{Fl{Ih}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{{Al{f}}}}cIhe}{{Fl{Ih}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFff}{{Dd{d}}}}}}``{{{f{DGd}}}{{f{B`}}}}{{{f{BNf}}}{{Bd{{l{Jb}}Bb}}}}{{{f{BNf}}}{{Bd{{l{Lj}}Bb}}}}0{{{f{BNf}}}{{Bd{{l{An}}Bb}}}}22112{{{f{BNf}}}{{Bd{{l{Mb}}Bb}}}}322{{{f{BNf}}{f{Ah}}}{{Bd{B`Bb}}}}{{{f{BNf}}Jj}{{Bd{{l{Jh}}Bb}}}}1445`{{{f{AHn}}FfFf}AHn}0`{{Ff{f{Cl{Fl{d}}}}}b}```11{{Ff{f{{Al{B`}}}}{f{ClEn}}}{{Bd{{AJh{{l{Ej}}}}Bb}}}}{{{f{{Al{B`}}}}{f{{Al{d}}}}d}{{Bd{AJjBb}}}}{{{f{Ah}}{f{{Al{B`}}}}{f{{Al{d}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{Ah}}{f{{Al{B`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{Al{B`}}}}}{{Bd{AJjBb}}}}{{{f{{Al{B`}}}}}{{Bd{{l{El}}Bb}}}}0```````````88```{{{f{BKh}}}{{f{{l{Ad}}}}}}{{{f{BKl}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BKl}}}{{l{Ad}}}}{{{f{BKl}}{f{{l{Ad}}}}}{{l{Ad}}}}{{{f{BKl}}{f{Ah}}d}{{Bd{{l{An}}Bb}}}}{{{f{BKl}}{f{{l{Ad}}}}dd}{{Bd{{l{An}}Bb}}}}{{{f{BKl}}{f{Ah}}}{{Bd{{l{An}}Bb}}}}{{{f{BKl}}{f{Ah}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BKl}}{f{{l{Ad}}}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BKl}}{f{{l{Ad}}}}Ff}{{Bd{{l{Ad}}Bb}}}}{{{f{BKl}}{f{Ah}}}{{Bd{{l{j}}Bb}}}}{{{f{BKl}}{f{{l{Ad}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BKl}}{f{Ah}}{f{Ed}}}{{Bd{B`Bb}}}}5{{{f{BKl}}{f{{l{Ad}}}}dd}{{Bd{{l{Ej}}Bb}}}}{{{f{BKl}}{f{Ah}}}{{Bd{{l{Ej}}Bb}}}}=<{{{f{{Al{{f{{l{Ad}}}}}}}}{f{Ah}}d}{{Bd{{l{Ad}}Bb}}}}{{{f{BKl}}{f{Ah}}{f{Ah}}}{{Bd{{l{Ad}}Bb}}}}0{{{f{BKl}}{f{Ah}}{f{Ah}}Ff}{{Bd{{l{Ad}}Bb}}}}1{{{f{BKl}}{f{{l{Ad}}}}}{{l{j}}}}{{{f{BKl}}{f{{l{Ad}}}}Ff}{{Bd{AKbBb}}}}0{{{f{{l{Ad}}}}{f{{l{Ad}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{Ah}}}}}}}{{Df{{f{Ah}}{f{Ah}}}{{Dd{c}}}}}}2{{{f{{l{Ad}}}}{f{{l{Ad}}}}Ffed}{{Bd{AKbBb}}}{{Ch{}{{Cb{{f{Ah}}}}}}}{{Df{{f{Ah}}{f{Ah}}}{{Dd{c}}}}}}2{{{f{{l{Ad}}}}{f{Ah}}d}{{l{Ad}}}}{{{f{BKl}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BKl}}}{{l{Ej}}}}0{{{f{BKl}}}{{l{Ad}}}}{{{f{BKl}}{f{B`}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}3{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{Ad}}}}404040{{{f{BKl}}{f{{l{Ad}}}}}{{l{Ad}}}}10{{{f{BKl}}{f{{l{Ej}}}}d}{{Bd{{l{Jh}}Bb}}}}444````````{{eFfFf}{{DGf{Gd}}}{{Hf{Ah}}}{{Ch{}{{Cb{c}}}}}}{{eFfFf}{{DGh{Gd}}}{{Hf{{Al{Aj}}}}}{{Ch{}{{Cb{c}}}}}}```````````{{{f{c}}h}b{}}0{{{f{Ah}}{Fl{{Cf{Cd}}}}{f{ADj}}}{{Bd{B`Bb}}}}{{{f{Ah}}{Fl{{Cf{Cd}}}}{f{ADj}}{C`{{f{{DEd{EfEf}}}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{A`L`}}{{B`c}{}{A`L`}}{{B`B`}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}}{{C`{Ff}}}}0{{{f{BIn}}Eh}{{l{Ej}}}}{{{f{BIn}}}{{Bd{{l{Ej}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bj}}}}Bb}}}}{{{f{B`}}Ff}{{f{{Cf{Cd}}}}}}{{{f{BIn}}}{{f{ADl}}}}{{{f{ClBIn}}}{{f{ClADl}}}}{{{f{B`}}}{{l{j}}}}{{{f{ClBIn}}}{{f{Cl{l{c}}}}}Db}{{{f{BIn}}}{{f{{l{c}}}}}Db}{{{f{B`}}}{{f{BIn}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{ClBIn}}}{{Bd{FfBb}}}}{{{f{ClB`}}}{{Bd{FfBb}}}}{{{f{B`}}}{{Bd{{f{{l{Af}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{BIn}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{An}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BIn}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{B`}}}{{Bd{{f{AKd}}Bb}}}}6{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Ab}{{{f{BIn}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}{{{f{BIn}}}{{f{{Fl{{Cf{Cd}}}}}}}}{{{f{ClBIn}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}}{{{f{ClB`}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}}{{{f{B`}}}B`}{{{f{Kj}}}Kj}1{{{f{BIn}}}{{Lf{BIn}}}}{{{f{c}}{f{Cle}}}b{}{}}0{{{f{ClB`}}}b}{{{f{B`}}}{{Bd{{f{{Jf{JdJb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jf{JlJh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jf{K`Jn}}}}Bb}}}}{{}B`}{Ff{{f{c}}}{}}00{{{f{B`}}}f}{Ff{{f{Clc}}}{}}00{{B`c}{}{A`L`}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{A`L`}}{Ffb}00{{{f{BIn}}}B`}{{{f{BIn}}}{{f{Ed}}}}{{{f{B`}}}{{Bd{{f{{Jf{KbJh}}}}Bb}}}}{{{f{Kj}}{f{Kj}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AFh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{Ah}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}c}{{Bd{{l{An}}Bb}}}AN`}3{{{f{B`}}{f{Ah}}}}{{{f{B`}}c}{}AN`}366{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Ff}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}IfFf}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{E`}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{BIn}}}{{Dj{Ml}}}}{{{f{B`}}AFf}{{Bd{B`Bb}}}}{{{f{BIn}}{f{{l{An}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{l{An}}}}d}{{Bd{B`Bb}}}}{{{f{Kj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{B`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{B`}}}Ef}{cc{}}00{{{Jf{JlJh}}}B`}{{{Jf{KfJh}}}B`}{{{l{c}}}B`Db}{{{Jf{KbJh}}}B`}{{{Jf{JdJb}}}B`}{{{f{Ah}}{f{{Al{If}}}}d}{{Bd{B`Bb}}}}{{{f{Ah}}{f{{Al{If}}}}{f{Ed}}d}{{Bd{B`Bb}}}}{{{f{Ah}}{Cf{Cd}}}{{Bd{B`Bb}}}}{{{f{Ah}}{Fl{{Cf{Cd}}}}{f{Ed}}}B`}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{cB`{{H`{}{{Cb{{C`{J`}}}}}}}}{cB`{{H`{}{{Cb{Ll}}}}}}{cB`{{H`{}{{Cb{{C`{Ll}}}}}}}}{cB`{{H`{}{{Cb{Ef}}}}}}{cB`{{H`{}{{Cb{M`}}}}}}{cB`{{H`{}{{Cb{{C`{Ld}}}}}}}}{cB`{{H`{}{{Cb{{f{Md}}}}}}}}{cB`{{H`{}{{Cb{J`}}}}}}{cB`{{H`{}{{Cb{{C`{Mj}}}}}}}}{cB`{{H`{}{{Cb{{f{Gd}}}}}}}}{cB`{{H`{}{{Cb{{C`{Gd}}}}}}}}{cB`{{H`{}{{Cb{Gd}}}}}}{cB`{{H`{}{{Cb{Ld}}}}}}{cB`{{H`{}{{Cb{Ih}}}}}}{cB`{{H`{}{{Cb{{f{Aj}}}}}}}}{cB`{{H`{}{{Cb{{f{Ah}}}}}}}}{cB`{{H`{}{{Cb{{f{J`}}}}}}}}{cB`{{H`{}{{Cb{{C`{M`}}}}}}}}{cB`{{H`{}{{Cb{{f{Ll}}}}}}}}{cB`{{H`{}{{Cb{{f{Ld}}}}}}}}{cB`{{H`{}{{Cb{Md}}}}}}{cB`{{H`{}{{Cb{{f{Ih}}}}}}}}{cB`{{H`{}{{Cb{{C`{In}}}}}}}}{cB`{{H`{}{{Cb{In}}}}}}{cB`{{H`{}{{Cb{Mj}}}}}}{cB`{{H`{}{{Cb{Aj}}}}}}{cB`{{H`{}{{Cb{{f{d}}}}}}}}{cB`{{H`{}{{Cb{{C`{Ih}}}}}}}}{cB`{{H`{}{{Cb{{f{Mj}}}}}}}}{cB`{{H`{}{{Cb{{C`{d}}}}}}}}{cB`{{H`{}{{Cb{{f{In}}}}}}}}{cB`{{H`{}{{Cb{{C`{Aj}}}}}}}}{cB`{{H`{}{{Cb{d}}}}}}{cB`{{H`{}{{Cb{{C`{Md}}}}}}}}{cB`{{H`{}{{Cb{{f{M`}}}}}}}}{{{f{Ah}}{Fl{Ld}}}B`}{{{f{Ah}}{Fl{M`}}}B`}{{{f{Ah}}{Fl{Ll}}}B`}{{{f{Ah}}{Fl{Aj}}}B`}{{{f{Ah}}{Fl{Gd}}}B`}{{{f{Ah}}{Fl{J`}}}B`}{{{f{Ah}}{Fl{Mj}}}B`}{{{f{Ah}}{Fl{In}}}B`}{{{f{Ah}}{Fl{Md}}}B`}{{{f{Ah}}{Fl{Ih}}}B`}{{{f{Ah}}Ff{f{Ed}}}B`}{{{f{B`}}FfFf}B`}{{{f{BIn}}Ff}{{Bd{IfBb}}}}{{{f{B`}}}Ff}{{{f{B`}}}Ij}{{{f{BIn}}Ff}{{C`{{f{Il}}}}}}{{{f{BIn}}FfFf}{{C`{{f{Il}}}}}}{{{f{BIn}}Ff}If}{{{f{{AFh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{Ah}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}c}{{Bd{{l{An}}Bb}}}AN`}3{{{f{B`}}{f{Ah}}}}21{{{f{BIn}}}d}{{{f{Kj}}{f{Clc}}}bAGf}{{{f{B`}}{C`{Ff}}}B`}{{{f{B`}}}{{Bd{{f{{l{Mb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Lj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ej}}}}Bb}}}}`{{}Ff}00{ce{}{}}00{B`AOl}1{BAdB`}{B`B`}<{{{f{B`}}}{{Bd{{l{An}}Bb}}}}000{{{f{BIn}}}{{l{An}}}}0{{}d}0{{{f{B`}}}Kj}{{{f{B`}}}DGj}{{{f{BIn}}}Ff}{{{f{BIn}}Ff}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BGn}{{{f{{AFh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{Ah}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}c}{{Bd{{l{An}}Bb}}}AN`}3012{{{f{B`}}}{{Bd{{C`{c}}Bb}}}L`}{{{f{BIn}}}{{Bd{LbBb}}}}{{{f{BIn}}}{{C`{Ld}}}}{{{f{B`}}}Lb}1232{{B`c}{}{A`L`}}{{{f{B`}}{f{B`}}}}{{B`B`}}{{{f{B`}}c}{}{A`L`}}?{{{f{BIn}}}{{Bd{FfBb}}}}{{{f{BIn}}}{{f{Ah}}}}{{{f{Ah}}c}B`{{Hf{{Al{{f{Ah}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{Mj}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{AJl}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{M`}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{Fl{Aj}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{f{{Al{Aj}}}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{AK`}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{In}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{Aj}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{Ld}}}}}}{{{f{Ah}}{Ln{M`}}}B`}{{{f{Ah}}c}B`{{Hf{{Al{If}}}}}}{{{f{Ah}}{f{B`}}}B`}{{{f{Ah}}{Ln{Gd}}}B`}{{{f{Ah}}c}B`{{Hf{{Al{{C`{B`}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{AJl}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{{Dj{Ah}}}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{ANh}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{Md}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{Ef}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{Ih}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{M`}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{Ih}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{{Dj{{Al{Aj}}}}}}}}}}}}{{{f{Ah}}c}B`BAd}{{{f{Ah}}c}B`{{Hf{{Al{B`}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{J`}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{Dj{{Al{Aj}}}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{Aj}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{Ll}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{Dj{Ah}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{{f{Ah}}}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{AK`}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{ANh}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{Gd}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{Gd}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{Md}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{{f{{Al{Aj}}}}}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{d}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{{Fl{Aj}}}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{Mj}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{ANj}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{J`}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{d}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{Ef}}}}}}{{{f{Ah}}{Ln{Ih}}}B`}{{{f{Ah}}c}B`{{Hf{{Al{Ll}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{ANj}}}}}}}}{{{f{Ah}}{Ln{J`}}}B`}{{{f{Ah}}c}B`{{Hf{{Al{{C`{In}}}}}}}}{{{f{Ah}}c}B`{{Hf{{Al{{C`{Ld}}}}}}}}{{{f{Ah}}{f{Ed}}}B`}{{{f{BIn}}FfFf}B`}{{{f{Ah}}Ff}B`}{{{f{ClDGj}}}C`}{{{f{{AFh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{Ah}}}{{Bd{{l{An}}Bb}}}}{{{f{B`}}c}{{Bd{{l{An}}Bb}}}AN`}{{{f{B`}}{f{B`}}}{{Bd{{l{An}}Bb}}}}3{{{f{B`}}c}{}AN`}1{{{f{B`}}{f{Ah}}}}{{{f{B`}}}{{Bd{{f{ABj}}Bb}}}}{{{f{BIn}}}Ff}`{{{f{B`}}}{{Cf{Kd}}}}{{{f{B`}}}{{Bd{LbBb}}}}{{{f{BIn}}LdNb}{{Bd{LbBb}}}}{{{f{BIn}}}B`}{{B`c}{}{A`L`}}{{{f{B`}}c}{}{A`L`}}{{{f{B`}}{f{B`}}}}{{{f{ClBIn}}{f{Ah}}}b}{{{f{ClB`}}{f{Ah}}}{{f{ClB`}}}}5{KjKj}{{{f{BIn}}{f{Df}}Nd}{{Bd{B`Bb}}}}{{{f{B`}}Lddd{C`{J`}}}{{Bd{B`Bb}}}}{{{f{B`}}Ffdd{C`{J`}}}{{Bd{B`Bb}}}}{{{f{B`}}Ff}B`}{{{f{ClB`}}Kj}b}{{{f{BIn}}Gd}B`}{{{f{ClBIn}}}b}{{{f{ClB`}}}b}{{{f{B`}}{C`{J`}}}B`}{{{f{DGj}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{BIn}}GdFf}B`}{{{f{B`}}Eh}{{Bd{B`Bb}}}}{{{f{BIn}}Eh}{{Bd{B`Bb}}}}{{{f{BIn}}Aj}{{C`{Ld}}}}{{{f{BIn}}Aj}{{Bd{LbBb}}}}{{{f{B`}}}{{Bd{{f{{l{Ad}}}}Bb}}}}{{{f{B`}}Ff}{{Bd{{Dj{Ah}}Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AKb}}Bb}}}}{{B`c}{}{A`L`}}{{{f{B`}}c}{}{A`L`}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{{f{B`}}}{{Bd{cBb}}}L`}{{{f{BIn}}}{{Bd{LbBb}}}}{{{f{B`}}}{{Bd{LbBb}}}}{{{f{B`}}{C`{Ff}}}B`}{{{f{BIn}}{f{{l{Ej}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{Al{Nj}}}}Kj}B`}{{{f{B`}}{f{{Al{Nj}}}}}B`}{{{f{BIn}}{f{{Al{Ih}}}}}{{Bd{B`Bb}}}}{{{f{BIn}}{f{{Al{Ih}}}}}B`}{{{f{B`}}{f{{Al{Ih}}}}d}B`}{{{f{B`}}{f{{l{Ej}}}}d}{{Bd{B`Bb}}}}{{{f{BIn}}{f{{l{Ej}}}}}B`}{{{f{B`}}{f{{Al{Ih}}}}}B`}{{{f{B`}}{f{{l{Ej}}}}d}B`}{{{f{B`}}}{{Bd{{f{{Jf{KfJh}}}}Bb}}}}{{{f{B`}}Ffd}{{Cf{Cd}}}}{{{f{B`}}{C`{{f{Ah}}}}d}{{Bd{AOlBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dj{B`}}}}{{{f{c}}}Ef{}}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{c{{Bd{e}}}{}{}}0{{{Gh{{f{Ah}}{Fl{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}1{{{Gh{{f{Ah}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{Gh{{f{ANb}}{Fl{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}{{{Gh{{f{ANb}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}444{{{f{ClB`}}{Gb{c}}}dDb}{{{f{c}}}On{}}00{{{f{B`}}}{{Bd{{f{{l{Mh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ej}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mf}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Lh}}}}Bb}}}}{{{f{BIn}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BIn}}}{{Bd{{f{{l{c}}}}Bb}}}Db}`{{{f{BIn}}Aj}{{C`{Ld}}}}{{{f{BIn}}Aj}{{Bd{LbBb}}}}{ce{}{}}00{{B`{f{Ah}}}B`}{{{f{B`}}c}B`{A`L`}}{{{f{B`}}{f{{l{An}}}}{f{B`}}}{{Bd{B`Bb}}}}````{{{f{B`}}{f{B`}}c}B`{{Dn{{f{B`}}{f{B`}}}{{Dd{B`}}}}}}{{{BH`{}{{Dd{c}}}}{f{B`}}}c{}}{{{f{BHb}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BNh}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BNh}}c}{{Bd{B`Bb}}}Ab}{{{f{{l{Fb}}}}c}{{Bd{B`Bb}}}Ab}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{CHn}}}CHn}{{{f{c}}{f{Cle}}}b{}{}}{{}CHn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{CHn}}{f{CHn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CHn}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{CHn}}{f{Clc}}}bAGf}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}3``{{{f{c}}h}b{}}{{{f{ClDl}}}{{f{ClB`}}}}{{{f{Dl}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Dl}}}Dl}{{{f{c}}{f{Cle}}}b{}{}}{{{f{Dl}}}B`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{cc{}}{{}Ff}{ce{}{}}{{{f{ClB`}}}Dl}{{{f{ClDl}}{f{Cl{Cf{Cd}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}5{{{f{ClDl}}{f{Cl{Cf{Cd}}}}e}c{}{{Df{{f{Dl}}}{{Dd{c}}}}}}","D":"AEIfACb","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",10661],[5,"ListType",1803,10662],[5,"ChunkedArray",17,10663],[10,"PolarsNumericType",1803,10662],[10,"Num",10664],[10,"ToPrimitive",10665],[5,"StringType",1803,10662],[5,"BinaryType",1803,10662],[1,"str"],[1,"u8"],[1,"slice"],[5,"BooleanType",1803,10662],[5,"Series",10183,10666],[6,"PolarsError",3218,10667],[6,"Result",10668],[10,"NumOpsDispatchInner",10584,10669],[6,"GroupsProxy",3591,10670],[5,"FixedSizeListType",1803,10662],[5,"ObjectType",1803,10662],[10,"PolarsObject",1376,10671],[6,"Option",10672],[17,"Item"],[10,"Array",10673],[5,"Box",10674],[10,"Iterator",10675],[5,"AmortizedListIter",10676],[0,"mut"],[17,"IsNested"],[5,"FalseT",1803,10662],[10,"PolarsDataType",1803,10662],[17,"Output"],[10,"Fn",10677],[10,"Copy",10678],[6,"Cow",10679],[5,"UnstableSeries",10637,10680],[10,"FnMut",10677],[5,"Float32Type",1803,10662],[5,"Float64Type",1803,10662],[6,"DataType",1803,10681],[5,"String",10682],[5,"SortOptions",1498,10683],[5,"UInt32Type",1803,10662],[5,"BinaryOffsetType",1803,10662],[5,"SortMultipleOptions",1498,10683],[10,"PolarsIntegerType",1803,10662],[10,"NumOpsDispatchCheckedInner",10605,10684],[5,"Iter",10685],[1,"usize"],[1,"fn"],[5,"Map",10686],[5,"Vec",10687],[5,"MetadataProperties",1207,10688],[10,"DoubleEndedIterator",10689],[5,"Metadata",1207,10688],[1,"i64"],[5,"OffsetsBuffer",10690],[1,"tuple"],[5,"Formatter",10691],[5,"Error",10691],[17,"Array"],[10,"IntoIterator",10692],[10,"FallibleIterator",10693],[10,"Borrow",10694],[10,"AsRef",10695],[10,"PolarsAsRef",10696],[5,"Bitmap",10697],[10,"Send",10678],[10,"Sync",10678],[10,"IntoParallelIterator",10698],[10,"NoOption",10699],[10,"TrustedLen",10700],[6,"AnyValue",1803,10701],[1,"u32"],[5,"MetadataFlags",1207,10688],[10,"PolarsObjectSafe",1376,10671],[1,"f32"],[1,"u64"],[5,"Int32Type",1803,10662],[5,"DateType",1803,10662],[5,"Logical",1803,10702],[5,"Int64Type",1803,10662],[6,"TimeUnit",1803,10703],[5,"DatetimeType",1803,10662],[5,"Int128Type",1803,10662],[5,"DecimalType",1803,10662],[5,"DurationType",1803,10662],[10,"ExactSizeIterator",10704],[5,"TimeType",1803,10662],[10,"PolarsFloatType",1803,10662],[6,"IsSorted",10183,10705],[10,"PolarsIterator",1135,10706],[6,"ChunkedArrayLayout",17,10663],[10,"NumCast",10665],[5,"Scalar",1803,10701],[1,"f64"],[5,"Arc",3954,10707],[5,"UInt8Type",1803,10662],[5,"Int8Type",1803,10662],[1,"i8"],[5,"Range",10708],[1,"i32"],[5,"Int16Type",1803,10662],[1,"i16"],[5,"UInt64Type",1803,10662],[5,"UInt16Type",1803,10662],[1,"u16"],[5,"Field",1803,10709],[10,"ParallelIterator",10698],[10,"IndexedParallelIterator",10698],[6,"QuantileInterpolOptions",3954,10710],[5,"RollingOptionsFixedWindow",3954,10711],[10,"PolarsOpsNumericType",10712],[10,"Sized",10678],[5,"ChunkId",3954,10713],[17,"HasViews"],[5,"RandomState",10714],[5,"BytesHash",10715],[5,"ViewRepr",10716],[1,"array"],[5,"Dim",10717],[5,"ArrayBase",10716],[5,"OwnedRepr",10718],[6,"Either",10719],[5,"TypeId",10720],[5,"NullableIdxSize",3954,10713],[10,"FnOnce",10677],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",813,10721],[5,"AnonymousListBuilder",841,10722],[5,"AnonymousOwnedListBuilder",841,10722],[5,"ListBooleanChunkedBuilder",841,10723],[5,"ListPrimitiveChunkedBuilder",841,10724],[10,"ListBuilderTrait",841,10725],[10,"ChunkedBuilder",841,10726],[5,"ListStringChunkedBuilder",841,10727],[5,"ListBinaryChunkedBuilder",841,10727],[5,"ListNullChunkedBuilder",841,10728],[5,"BinViewChunkedBuilder",841,10729],[10,"ViewType",10730],[5,"BooleanChunkedBuilder",841,10731],[5,"NullChunkedBuilder",841,10732],[5,"PrimitiveChunkedBuilder",841,10733],[10,"Clone",10734],[5,"NullChunked",10735],[10,"NewChunkedArray",841,10726],[10,"ChunkedCollectInferIterExt",1115,10736],[10,"ChunkedCollectIterExt",1115,10736],[10,"Canonical",1129,10737],[10,"ChunkedCollectParIterExt",1131,10738],[10,"FromParIterWithDtype",1131,10738],[5,"BooleanArray",10739],[5,"BoolIterNoNull",1135,10706],[5,"FixedSizeListArray",10740],[5,"FixedSizeListIterNoNull",1135,10706],[5,"StructIter",1135,10706],[5,"SomeIterator",1135,10706],[5,"Iter",10741],[5,"IterNames",10741],[5,"ObjectArray",1376,10671],[6,"ArrowDataType",1803,10742],[10,"Any",10720],[10,"Debug",10691],[5,"BitmapIter",10743],[6,"ZipValidity",10744],[5,"ObjectChunkedBuilder",1447,10745],[10,"AnonymousObjectBuilder",1470,10746],[5,"ObjectRegistry",1470,10746],[17,"FuncRet"],[10,"ChunkApply",1498,10747],[10,"ChunkApplyKernel",1498,10747],[10,"ChunkSort",1498,10747],[10,"ChunkUnique",1498,10747],[10,"ChunkCast",1498,10747],[6,"FillNullStrategy",1498,10747],[10,"ChunkCompare",10183,10747],[10,"ChunkExplode",1498,10747],[10,"ChunkFillNullValue",1498,10747],[10,"ChunkFilter",1498,10747],[10,"ChunkFull",1498,10747],[10,"ChunkFullNull",1498,10747],[10,"ChunkAnyValue",1498,10747],[10,"Hasher",10748],[10,"IsFirstDistinct",1498,10747],[10,"IsLastDistinct",1498,10747],[10,"ChunkAgg",1498,10747],[10,"ChunkQuantile",1498,10747],[10,"ChunkExpandAtIndex",1498,10747],[10,"Reinterpret",1498,10747],[10,"ChunkReverse",1498,10747],[10,"ChunkRollApply",1498,10747],[10,"ChunkSet",1498,10747],[10,"ChunkShift",1498,10747],[10,"ChunkShiftFill",1498,10747],[10,"SlicedArray",1498,10749],[10,"ChunkVar",1498,10747],[10,"ChunkTake",1498,10747],[10,"ChunkTakeUnchecked",1498,10747],[10,"ChunkBytes",1498,10747],[10,"ChunkZip",1498,10747],[10,"BinaryFnMut",1696,10750],[10,"StaticArray",1803,10751],[10,"TernaryFnMut",1696,10750],[10,"Error",10752],[10,"UnaryFnMut",1696,10750],[5,"PrimitiveArray",10753],[6,"SearchSortedSide",1736,10754],[5,"NoNull",3954,10755],[5,"RowsEncoded",10756],[5,"NaiveDateTime",10757],[6,"Tz",10758],[5,"NaiveTime",10759],[5,"StructChunked",1803,10760],[5,"CategoricalChunked",1803,10761],[5,"CategoricalChunkedBuilder",1803,10762],[10,"ArrayFromIter",1803,10763],[10,"ArrayFromIterDtype",1803,10763],[10,"AsRefDataType",1803,10681],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10764],[10,"From",10695],[5,"BinaryViewArrayGeneric",10730],[6,"RevMapping",1803,10765],[10,"CategoricalMergeOperation",1803,10766],[10,"LogicalType",1803,10702],[6,"CategoricalOrdering",1803,10765],[5,"OwnedObject",1803,10701],[6,"UnknownKind",1803,10681],[5,"CategoricalType",1803,10662],[6,"ArrowTimeUnit",1803],[10,"ArrayCollectIterExt",1803,10763],[5,"GlobalRevMapMerger",1803,10766],[10,"Into",10695],[10,"NumericNative",1803,10662],[5,"ArrowField",3954],[6,"PrimitiveType",10767],[6,"IntegerType",10768],[5,"TimeDelta",10769],[5,"NaiveDate",10770],[5,"LazyCompact",10771],[5,"SmartString",10772],[10,"GetAnyValue",1803,10701],[5,"CatIter",1803,10761],[6,"Ordering",10773],[5,"Duration",3954,10774],[1,"u128"],[6,"PhysicalType",10768],[5,"DataFrame",3309,10775],[5,"StringCacheHolder",3197,10776],[5,"ErrString",3218,10667],[6,"PolarsWarning",3218,10777],[5,"TryReserveError",10778],[5,"Utf8Error",10779],[5,"Error",10780],[5,"Error",10781],[6,"Error",10782],[6,"Error",10783],[10,"Display",10691],[5,"Schema",3954,10784],[10,"IntoSeries",10183,10785],[6,"NullStrategy",3309,10775],[6,"UniqueKeepStrategy",3309,10775],[5,"HashSet",10786],[5,"ArrowSchema",3954,10787],[5,"Row",3845,10788],[5,"GroupBy",3591,10789],[5,"DynamicGroupOptions",3954,10790],[5,"RangeFrom",10708],[5,"RangeToInclusive",10708],[5,"RangeInclusive",10708],[5,"RangeFull",10708],[5,"RangeTo",10708],[5,"RecordBatchIter",3309,10775],[5,"PhysRecordBatchIter",3309,10775],[5,"LazyFrame",3954,10791],[10,"IntoVec",3954,10755],[5,"MeltArgs",3562,10792],[5,"RollingGroupOptions",3954,10790],[10,"RangeBounds",10708],[6,"IndexOrder",3954,10793],[5,"RecordBatchT",10794],[5,"StructArray",3954,10795],[5,"GroupsIdx",3591,10670],[5,"UnitVec",10796],[6,"GroupByMethod",3591,10789],[5,"SlicedGroups",3591,10670],[5,"GroupsProxyParIter",3591,10670],[10,"UnindexedConsumer",10797],[6,"GroupsIndicator",3591,10670],[6,"IRAggExpr",10798],[10,"IntoGroupsProxy",3591,10799],[5,"Copied",10800],[5,"Zip",10801],[5,"GroupsProxyIter",3591,10670],[10,"IsFloat",10802],[10,"NativeType",10803],[10,"AggList",3829,10804],[10,"TakeExtremum",3829,10805],[10,"PhysicalAggExpr",3842,10806],[6,"AnyValueBuffer",3845,10807],[6,"AnyValueBufferTrusted",3845,10807],[5,"Node",10808],[6,"IR",10809],[5,"Arena",10808],[6,"AExpr",10798],[10,"JoinDispatch",3954,10810],[5,"JoinArgs",3954,10811],[10,"DfTake",3954,10812],[10,"DataFrameOps",3954,10813],[5,"CsvReader",3954,10814],[10,"PhysicalIoExpr",10815],[10,"MmapBytesReader",10816],[6,"Expr",3954,10817],[10,"LhsNumOps",10584,10669],[10,"NumOpsDispatch",10584,10669],[5,"LazyGroupBy",3954,10791],[10,"Allocator",10818],[5,"JoinBuilder",3954,10791],[10,"AnonymousScan",3954,10819],[5,"LazyJsonLineReader",3954,10820],[5,"ScanArgsAnonymous",3954,10821],[10,"FunctionOutputField",3954,10822],[5,"SpecialEq",3954,10822],[6,"VisitRecursion",10823],[6,"FunctionExpr",3954,10824],[10,"ArgAgg",3954,10825],[5,"ArrayNameSpace",3954,10826],[5,"ListNameSpace",3954,10827],[10,"SeriesTrait",10183,10705],[5,"FieldsMapper",3954,10828],[5,"IpcStreamReader",3954,10829],[10,"Read",10830],[10,"SeriesUdf",3954,10822],[10,"AsBinary",3954,10831],[10,"StringMethods",9157,10832],[5,"BorrowedFd",10833],[10,"AsFd",10833],[10,"AsList",3954,10834],[10,"AsRawFd",10835],[6,"AggExpr",3954,10817],[10,"SeriesSealed",3954,10836],[10,"AsString",3954,10837],[20,"MaybeUninit",10838],[10,"StringNameSpaceImpl",3954,10839],[5,"OwnedBatchedCsvReader",3954,10840],[5,"CsvWriter",3954,10841],[5,"BatchedWriter",10841],[10,"Write",10830],[5,"IpcWriter",3954,10842],[5,"BatchedWriter",10842],[5,"ParquetReader",3954,10843],[5,"BatchedParquetReader",3954,10844],[5,"ParquetWriter",3954,10845],[5,"BatchedWriter",10846],[5,"BatchedCsvReader",3954,10840],[5,"BinaryNameSpace",9140,10847],[6,"Operator",3954,10817],[10,"RenameAliasFn",3954,10822],[5,"UserDefinedFunction",3954,10848],[10,"SeriesBinaryUdf",3954,10822],[5,"InProcessQuery",3954,10849],[5,"HashMap",10850],[5,"CategoricalNameSpace",3954,10851],[10,"RoundSeries",3954,10852],[10,"TemporalMethods",10066,10853],[10,"NumOpsDispatchChecked",10605,10684],[5,"RollingOptionsDynamicWindow",3954,10854],[5,"Bounds",3954,10855],[5,"LazyCsvReader",3954,10856],[6,"ClosedWindow",3954,10857],[5,"ScanArgsIpc",3954,10858],[6,"Label",3954,10857],[5,"ScanArgsParquet",3954,10859],[6,"StartBy",3954,10857],[5,"Window",3954,10860],[5,"CsvReadOptions",3954,10861],[5,"CsvParseOptions",3954,10861],[6,"CsvEncoding",3954,10861],[6,"CommentPrefix",3954,10861],[6,"NullValues",3954,10861],[5,"CsvWriterOptions",3954,10862],[5,"SerializeOptions",3954,10862],[6,"QuoteStyle",3954,10862],[5,"IpcScanOptions",3954,10863],[5,"IpcWriterOptions",3954,10842],[6,"IpcCompression",3954,10842],[5,"JsonWriterOptions",3954,10864],[5,"ParquetOptions",3954,10865],[6,"JoinCoalesce",3954,10811],[6,"ParallelStrategy",3954,10865],[6,"JoinType",3954,10811],[6,"JoinValidation",3954,10811],[5,"ParquetWriteOptions",3954,10866],[5,"AsOfOptions",3954,10867],[6,"ParquetCompression",3954,10866],[6,"AsofStrategy",3954,10867],[5,"GzipLevel",3954,10866],[5,"BrotliLevel",3954,10866],[6,"InterpolationMethod",3954,10868],[5,"ZstdLevel",3954,10866],[6,"ClosedInterval",3954,10869],[6,"RankMethod",3954,10870],[5,"RankOptions",3954,10870],[6,"DslPlan",3954,10871],[5,"When",3954,10872],[5,"Then",3954,10872],[5,"ChainedWhen",3954,10872],[5,"ChainedThen",3954,10872],[6,"Excluded",3954,10817],[6,"BooleanFunction",3954,10873],[6,"CategoricalFunction",3954,10874],[6,"TemporalFunction",3954,10875],[6,"PowFunction",3954,10876],[6,"StringFunction",3954,10877],[5,"DatetimeArgs",3954,10878],[5,"DurationArgs",3954,10878],[5,"RollingCovOptions",3954,10879],[5,"StrptimeOptions",3954,10879],[5,"JoinOptions",3954,10879],[6,"WindowType",3954,10879],[6,"WindowMapping",3954,10879],[6,"NestedType",3954,10879],[5,"OptState",3954,10880],[6,"LiteralValue",3954,10881],[5,"AnonymousScanOptions",3954,10882],[5,"UnionArgs",3954,10882],[5,"FileMetaData",3954,10883],[5,"RollingVarParams",3954,10884],[5,"RollingQuantileParams",3954,10884],[6,"NonExistent",3954,10885],[10,"LazyFileListReader",3954,10886],[5,"CloudOptions",9292,10887],[10,"Ord",10773],[6,"ColumnOrder",10888],[10,"BinaryNameSpaceImpl",3954,10889],[5,"PathBuf",10890],[5,"IpcStreamWriterOption",3954,10829],[10,"SerWriter",3954,10891],[5,"IpcWriterOption",3954,10842],[10,"CrossJoin",3954,10892],[10,"ExprEvalExtension",3954,10893],[10,"DateMethods",9157,10894],[10,"DatetimeMethods",9157,10895],[10,"DurationMethods",9157,10896],[10,"BinaryUdfOutputField",3954,10822],[10,"Default",10897],[5,"RowGroupMetaData",10898],[5,"ParquetStatistics",3954],[6,"NullBehavior",10611,10899],[5,"Weak",10707],[5,"DateLikeNameSpace",9649,10900],[1,"char"],[10,"FromIterator",10692],[10,"SeriesMethods",3954,10901],[10,"Scalar",10902],[10,"PartialEq",10773],[10,"ListNameSpaceExtension",3954,10903],[10,"Command",10904],[5,"StructNameSpace",3954,10905],[10,"SerReader",3954,10891],[5,"IpcReader",3954,10863],[5,"IpcStreamWriter",3954,10829],[5,"JsonWriter",3954,10864],[5,"JsonReader",3954,10864],[5,"JsonLineReader",3954,10906],[5,"File",10907],[10,"UdfSchema",3954,10908],[6,"RangeFunction",10909],[6,"ArrayFunction",10910],[6,"BinaryFunction",10911],[6,"ListFunction",10912],[6,"StructFunction",10913],[5,"Path",10890],[10,"ToOwned",10679],[5,"OsString",10914],[5,"OsStr",10914],[5,"CString",10915],[5,"CStr",10916],[1,"never"],[5,"MutableStatistics",10917],[5,"MutableStructArray",10918],[5,"GrowableStruct",10919],[10,"FromData",9643,10920],[5,"Buffer",10921],[10,"FromDataUtf8",9643,10920],[10,"FromDataBinary",9643,10920],[5,"ListArray",10922],[6,"Ambiguous",3954,10885],[10,"NamedFromOwned",3954,10923],[10,"DataFrameJoinOps",3954,10924],[5,"FunctionOptions",10882],[10,"PartialOrd",10773],[6,"Context",10871],[10,"SeriesReshape",3954,10925],[10,"IndexOfSchema",3954,10784],[5,"BoundsIter",3954,10860],[6,"ReaderBytes",10816],[10,"PolarsTemporalGroupby",3954,10790],[10,"PolarsArray",3954,10926],[10,"Hash",10748],[10,"SeriesJoin",3954,10927],[10,"TimeMethods",9157,10928],[10,"IntoListNameSpace",3954,10903],[5,"FileMetaData",10929],[5,"StructValueIter",10930],[10,"AsofJoin",3954,10867],[10,"AsofJoinBy",3954,10931],[10,"ListNameSpaceImpl",3954,10932],[5,"ExprNameNameSpace",3954,10933],[5,"KeyValue",10929],[10,"IntoLazy",3954,10791],[10,"Literal",3954,10881],[5,"Null",3954,10881],[5,"RowIndex",10934],[10,"ChunkAggSeries",3954,10935],[10,"QuantileAggSeries",3954,10936],[10,"PolarsMonthEnd",3954,10937],[10,"PolarsMonthStart",3954,10938],[10,"IndexToUsize",3954,10939],[10,"NamedFrom",3954,10923],[6,"RowGroupFetcher",10844],[5,"SplitNChars",3954,10940],[5,"Pin",10941],[5,"Request",10752],[10,"SeriesRank",3954,10870],[5,"BorrowedCursor",10942],[10,"VarInt",10943],[5,"IoSliceMut",10830],[10,"SeriesOpsTime",9157,10944],[10,"PolarsRound",3954,10945],[5,"AnonymousScanArgs",3954,10819],[10,"ChunkedSet",3954,10712],[5,"SchemaDescriptor",10946],[6,"SeekFrom",10830],[10,"VarAggSeries",3954,10947],[5,"StringNameSpace",10948],[10,"TakeChunked",3954,10812],[5,"IRPlan",10809],[10,"ToDummies",3954,10949],[10,"PolarsTruncate",3954,10950],[5,"AllocError",10818],[5,"RwLock",10951],[5,"SchemaInferenceResult",10036,10952],[10,"PolarsUpsample",3954,10953],[10,"VecHash",3954,10954],[5,"NonZero",10955],[6,"JsonFormat",3954,10864],[5,"BTreeMap",10956],[5,"IoSlice",10830],[10,"ArrayNameSpace",9121,10957],[10,"AsArray",9121,10958],[10,"AsString",9224,10832],[6,"Pattern",9224,10959],[5,"DatetimeInfer",9262,10960],[10,"StrpTimeParser",9262,10960],[17,"Error"],[10,"TryFromWithUnit",9262,10960],[6,"CloudType",9292,10887],[5,"AnonymousBuilder",9704,10961],[6,"RollingFunction",9935,10962],[6,"RollingFunctionBy",9964,10963],[5,"MutableNullArray",10006,10964],[5,"MutableBitmap",10965],[10,"AsSeries",10066,10853],[5,"Utf8Array",10966],[5,"BinaryArray",10967],[5,"SeriesIter",10183,10968],[10,"InitHashMaps",1803],[10,"InitHashMaps2",1803],[5,"TrueT",1803],[15,"IO",9053],[15,"Context",9053],[15,"Count",9047],[15,"Slice",9048],[8,"AllowedOptimizations",3954],[10,"ListFromIter",3954],[15,"Quantile",8928],[15,"Min",8928],[15,"Max",8928],[15,"IsBetween",9889],[15,"Any",9889],[15,"All",9889],[15,"GroupBy",8938],[15,"Union",8938],[15,"Sort",8938],[15,"Cache",8938],[15,"ExtContext",8938],[15,"DataFrameScan",8938],[15,"IR",8938],[15,"Select",8938],[15,"HStack",8938],[15,"Scan",8938],[15,"MapFunction",8938],[15,"Filter",8938],[15,"Distinct",8938],[15,"Slice",8938],[15,"Sink",8938],[15,"Join",8938],[15,"HConcat",8938],[15,"SortBy",8992],[15,"Filter",8992],[15,"Cast",8992],[15,"Sort",8992],[15,"Gather",8992],[15,"RenameAlias",8992],[15,"Ternary",8992],[15,"Function",8992],[15,"Window",8992],[15,"AnonymousFunction",8992],[15,"Slice",8992],[15,"BinaryExpr",8992],[15,"Round",9892],[15,"RoundSF",9892],[15,"Clip",9892],[15,"BackwardFill",9892],[15,"ForwardFill",9892],[15,"Random",9892],[15,"GatherEvery",9892],[15,"ValueCounts",9892],[15,"Rank",9892],[15,"Replace",9892],[15,"CumCount",9892],[15,"CumSum",9892],[15,"CumProd",9892],[15,"CumMin",9892],[15,"CumMax",9892],[15,"Range",9050],[15,"ConcatHorizontal",9913],[15,"ConcatVertical",9913],[15,"ExtractGroups",9913],[15,"SplitExact",9913],[15,"Contains",9913],[15,"Find",9913],[15,"Replace",9913],[15,"DatetimeFunction",9927],[10,"Utf8FromIter",10179],[10,"BinaryFromIter",10179]],"r":[[1,10969],[2,10969],[3,10969],[4,10969],[6,10776],[7,10969],[8,10969],[9,10969],[13,10969],[14,10969],[16,10776],[17,10663],[18,10663],[19,10663],[112,10663],[135,10663],[136,10663],[160,10663],[161,10663],[214,10663],[267,10663],[408,10663],[455,10663],[554,10663],[557,10663],[689,10663],[813,10721],[841,10722],[842,10722],[843,10729],[844,10729],[845,10731],[846,10726],[847,10727],[848,10723],[849,10725],[850,10728],[851,10724],[852,10727],[853,10726],[854,10732],[855,10733],[856,10729],[989,10726],[1005,10725],[1033,10726],[1098,10722],[1099,10722],[1100,10727],[1101,10723],[1102,10725],[1103,10728],[1104,10724],[1105,10727],[1113,10725],[1115,10736],[1116,10736],[1129,10737],[1131,10738],[1132,10738],[1135,10706],[1136,10706],[1137,10706],[1138,10706],[1139,10706],[1185,10706],[1205,10970],[1206,10970],[1213,10688],[1214,10688],[1215,10688],[1376,10671],[1377,10671],[1378,10671],[1379,10671],[1390,10671],[1418,10671],[1447,10745],[1470,10746],[1471,10746],[1472,10746],[1473,10746],[1485,10746],[1486,10746],[1487,10746],[1490,10746],[1492,10746],[1499,10747],[1500,10747],[1501,10747],[1502,10747],[1503,10747],[1504,10747],[1505,10747],[1506,10747],[1507,10747],[1508,10747],[1509,10747],[1510,10747],[1511,10747],[1512,10747],[1513,10747],[1514,10747],[1515,10747],[1516,10747],[1517,10747],[1518,10747],[1519,10747],[1520,10747],[1521,10747],[1522,10747],[1523,10747],[1524,10747],[1525,10747],[1528,10747],[1529,10747],[1537,10747],[1538,10749],[1539,10683],[1540,10683],[1553,10747],[1594,10747],[1597,10747],[1606,10747],[1609,10747],[1652,10747],[1658,10747],[1694,10747],[1696,10750],[1700,10750],[1701,10750],[1702,10750],[1703,10750],[1704,10750],[1705,10750],[1706,10750],[1707,10750],[1708,10750],[1709,10750],[1710,10750],[1711,10750],[1712,10750],[1713,10750],[1714,10750],[1715,10750],[1716,10750],[1717,10750],[1718,10750],[1719,10750],[1720,10750],[1721,10750],[1722,10750],[1723,10750],[1724,10750],[1725,10750],[1726,10750],[1727,10750],[1728,10750],[1729,10750],[1730,10750],[1731,10971],[1732,10971],[1733,10972],[1734,10972],[1735,10972],[1739,10754],[1741,10754],[1759,10754],[1765,10749],[1766,10973],[1767,10973],[1768,10973],[1769,10973],[1772,10974],[1773,10975],[1774,10975],[1775,10975],[1776,10975],[1777,10975],[1778,10975],[1779,10975],[1780,10749],[1781,10683],[1782,10683],[1793,10976],[1794,10977],[1795,10977],[1796,10977],[1797,10976],[1798,10976],[1799,10978],[1800,10977],[1801,10977],[1802,10977],[1804,10701],[1808,10662],[1809,10763],[1810,10763],[1811,10763],[1812,10742],[1814,10681],[1818,10662],[1820,10662],[1821,10662],[1823,10662],[1828,10662],[1829,10662],[1830,10761],[1833,10761],[1834,10762],[1835,10766],[1836,10765],[1837,10662],[1838,10681],[1839,10681],[1840,10681],[1845,10979],[1846,10662],[1849,10980],[1850,10662],[1855,10981],[1856,10662],[1861,10982],[1862,10662],[1866,10662],[1867,10709],[1868,10709],[1871,10662],[1877,10662],[1878,10662],[1882,10662],[1883,10662],[1884,10701],[1886,10766],[1890,10983],[1891,10939],[1892,10983],[1893,10983],[1894,10984],[1895,10983],[1897,10662],[1898,10662],[1902,10662],[1903,10662],[1907,10662],[1908,10662],[1912,10662],[1913,10662],[1917,10662],[1918,10662],[1928,10662],[1929,10662],[1931,10702],[1932,10702],[1944,10662],[1947,10662],[1949,10662],[1950,10701],[1954,10984],[1955,10984],[1956,10983],[1957,10984],[1958,10984],[1959,10662],[1960,10662],[1961,10662],[1962,10662],[1964,10765],[1965,10701],[1967,10751],[1971,10662],[1973,10662],[1977,10760],[1983,10985],[1984,10662],[1985,10703],[1986,10681],[1989,10662],[1993,10662],[1994,10662],[1998,10662],[1999,10662],[2003,10662],[2004,10662],[2008,10662],[2009,10662],[2013,10681],[2182,10766],[2194,10702],[2283,10681],[2806,10766],[2807,10766],[2810,10681],[3174,10761],[3175,10761],[3176,10762],[3177,10766],[3178,10765],[3180,10766],[3184,10765],[3185,10766],[3187,10766],[3188,10766],[3189,10761],[3190,10761],[3191,10765],[3196,10765],[3197,10776],[3203,10776],[3206,10776],[3214,10776],[3223,10667],[3229,10667],[3230,10667],[3231,10777],[3245,10667],[3258,10667],[3274,10777],[3281,10667],[3282,10667],[3283,10667],[3284,10667],[3285,10667],[3286,10777],[3287,10667],[3306,10986],[3307,10986],[3308,10986],[3310,10775],[3315,10775],[3316,10775],[3318,10775],[3319,10775],[3386,10775],[3420,10775],[3483,10775],[3562,10792],[3591,10670],[3594,10789],[3595,10789],[3597,10670],[3598,10670],[3599,10670],[3600,10670],[3601,10670],[3602,10670],[3605,10670],[3607,10799],[3619,10670],[3628,10789],[3695,10789],[3705,10789],[3829,10804],[3830,10805],[3831,10805],[3832,10805],[3833,10805],[3834,10805],[3835,10805],[3836,10805],[3837,10805],[3838,10805],[3842,10806],[3847,10807],[3848,10807],[3868,10788],[3899,10788],[3920,10788],[3934,10788],[3935,10788],[3936,10788],[3952,10987],[3953,10987],[3956,10817],[3963,10880],[3965,10885],[3968,10819],[3969,10819],[3970,10882],[3976,10701],[3977,10707],[3978,10825],[3981,10721],[3986,10662],[3987,10763],[3989,10763],[3990,10763],[3991,10826],[3992,10673],[3993,10742],[3995,10787],[3997,10831],[3998,10834],[4000,10867],[4001,10681],[4002,10837],[4004,10867],[4005,10931],[4006,10867],[4009,10988],[4015,10840],[4016,10844],[4021,10662],[4022,10729],[4025,10889],[4027,10662],[4028,10662],[4030,10662],[4031,10822],[4038,10662],[4039,10731],[4040,10873],[4041,10662],[4042,10670],[4045,10855],[4046,10860],[4048,10866],[4053,10761],[4057,10761],[4058,10762],[4059,10874],[4060,10766],[4061,10851],[4062,10765],[4063,10662],[4067,10872],[4068,10872],[4069,10747],[4070,10935],[4071,10747],[4072,10747],[4073,10747],[4074,10747],[4075,10747],[4076,10747],[4077,10747],[4078,10747],[4079,10747],[4080,10747],[4081,10747],[4082,10747],[4083,10713],[4084,10811],[4085,10747],[4086,10747],[4087,10747],[4088,10747],[4089,10747],[4090,10747],[4091,10747],[4092,10747],[4093,10747],[4094,10747],[4095,10747],[4096,10747],[4097,10663],[4098,10726],[4099,10736],[4100,10736],[4101,10712],[4103,10869],[4104,10857],[4112,10861],[4124,10892],[4125,10861],[4126,10861],[4127,10861],[4128,10814],[4129,10841],[4130,10862],[4137,10681],[4138,10681],[4139,10775],[4140,10924],[4141,10813],[4145,10681],[4152,10979],[4153,10894],[4155,10662],[4159,10878],[4160,10980],[4162,10895],[4163,10662],[4169,10981],[4170,10662],[4172,10812],[4179,10871],[4183,10774],[4189,10878],[4190,10982],[4191,10896],[4192,10662],[4193,10884],[4194,10790],[4202,10817],[4205,10817],[4206,10893],[4207,10933],[4214,10988],[4215,10988],[4216,10662],[4217,10709],[4219,10709],[4220,10828],[4221,10933],[4222,10883],[4223,10989],[4225,10747],[4226,10747],[4236,10662],[4244,10662],[4245,10662],[4250,10662],[4251,10662],[4259,10920],[4260,10920],[4261,10920],[4265,10824],[4266,10822],[4270,10701],[4272,10822],[4274,10766],[4275,10789],[4277,10789],[4279,10670],[4280,10670],[4281,10670],[4282,10670],[4283,10670],[4284,10670],[4289,10866],[4299,10983],[4300,10988],[4305,10939],[4306,10983],[4307,10670],[4308,10713],[4309,10983],[4312,10849],[4314,10784],[4315,10793],[4316,10939],[4317,10984],[4318,10983],[4320,10811],[4323,10662],[4324,10662],[4329,10662],[4330,10662],[4335,10662],[4336,10662],[4341,10662],[4342,10662],[4347,10662],[4348,10662],[4351,10868],[4353,10799],[4354,10791],[4355,10903],[4356,10785],[4357,10755],[4359,10842],[4360,10863],[4361,10863],[4362,10829],[4363,10829],[4364,10829],[4365,10842],[4366,10842],[4367,10842],[4370,10747],[4374,10747],[4386,10811],[4387,10791],[4388,10811],[4389,10810],[4390,10879],[4392,10811],[4393,10811],[4395,10864],[4396,10906],[4398,10864],[4399,10864],[4400,10864],[4404,10857],[4406,10990],[4408,10990],[4409,10990],[4415,10856],[4416,10886],[4417,10791],[4418,10791],[4419,10820],[4425,10811],[4430,10669],[4437,10727],[4438,10723],[4439,10725],[4440,10662],[4442,10926],[4443,10827],[4444,10903],[4445,10932],[4446,10724],[4447,10727],[4448,10662],[4449,10881],[4451,10881],[4453,10702],[4456,10702],[4481,10792],[4504,10881],[4509,10923],[4510,10923],[4522,10879],[4524,10726],[4526,10755],[4527,10885],[4537,10881],[4545,10861],[4546,10713],[4547,10713],[4548,10669],[4549,10684],[4550,10662],[4553,10662],[4555,10662],[4559,10817],[4560,10880],[4568,10840],[4569,10701],[4571,10865],[4572,10866],[4573,10865],[4574,10843],[4576,10866],[4577,10845],[4578,10886],[4581,10984],[4582,10984],[4583,10983],[4584,10984],[4585,10984],[4587,10926],[4588,10662],[4589,10667],[4590,10662],[4591,10662],[4592,10706],[4593,10937],[4594,10938],[4595,10662],[4596,10671],[4597,10667],[4598,10945],[4599,10790],[4600,10950],[4602,10953],[4604,10876],[4605,10733],[4608,10936],[4609,10710],[4611,10862],[4619,10870],[4620,10870],[4621,10747],[4623,10822],[4629,10765],[4637,10879],[4640,10790],[4641,10854],[4642,10711],[4643,10884],[4644,10991],[4645,10884],[4649,10852],[4650,10992],[4653,10701],[4656,10821],[4657,10858],[4658,10859],[4659,10784],[4662,10784],[4663,10754],[4668,10891],[4669,10891],[4670,10862],[4671,10666],[4673,10822],[4674,10927],[4675,10901],[4676,10944],[4677,10870],[4678,10925],[4679,10836],[4680,10705],[4681,10822],[4694,10749],[4695,10670],[4700,10683],[4701,10683],[4702,10822],[4706,10940],[4708,10857],[4710,10751],[4718,10776],[4720,10662],[4721,10729],[4723,10877],[4724,10832],[4725,10839],[4727,10662],[4734,10879],[4738,10795],[4739,10760],[4742,10905],[4750,10812],[4752,10875],[4753,10853],[4755,10872],[4763,10985],[4764,10928],[4766,10662],[4767,10703],[4768,10681],[4772,10949],[4786,10662],[4793,10662],[4794,10662],[4799,10662],[4800,10662],[4805,10662],[4806,10662],[4811,10662],[4812,10662],[4813,10908],[4817,10882],[4819,10775],[4822,10681],[4825,10848],[4834,10947],[4835,10954],[4839,10872],[4841,10860],[4844,10879],[4845,10879],[4854,10866],[4944,10993],[4949,10993],[4958,10994],[4968,10789],[4970,10995],[4972,10996],[4984,10996],[4995,10997],[5001,10998],[5004,10999],[5017,11000],[5022,11000],[5025,10747],[5031,11001],[5056,11002],[5060,11003],[5064,11004],[5072,10998],[5074,10872],[5328,10766],[5333,11003],[5341,10998],[5349,10988],[5350,10988],[5351,10988],[5357,11005],[5360,11006],[5362,11006],[5364,11006],[5548,11007],[5556,10996],[5560,11008],[5561,10995],[5563,11009],[5575,10995],[5586,11009],[5588,11010],[5591,11009],[5592,11009],[5593,11010],[5594,11010],[5603,10926],[5604,11011],[5609,11012],[5610,10681],[5618,11013],[5620,10996],[5621,11013],[5623,11013],[5625,11013],[5627,10996],[5628,11013],[5635,10969],[5637,10999],[5638,11001],[5639,10878],[5641,10999],[5642,10999],[5643,10977],[5644,10977],[5645,10977],[5708,10926],[5709,10810],[5964,10917],[5966,10969],[5968,11014],[6107,11015],[6108,10998],[6113,10995],[6114,10995],[6116,10878],[6124,10774],[6125,10774],[6382,10789],[6408,10747],[6445,10998],[6449,10926],[6452,10747],[6457,11016],[6552,10789],[6556,10996],[6560,11010],[6775,10747],[6783,10998],[6785,10747],[6826,10988],[6828,10988],[6839,10857],[6840,10857],[6918,11017],[6930,11018],[6931,11018],[6934,11019],[6942,10995],[6948,10939],[6949,10952],[7081,10999],[7082,10999],[7084,11020],[7085,10868],[7087,11020],[7088,11021],[7229,10869],[7231,10988],[7232,11022],[7239,11023],[7243,11024],[7246,11025],[7254,11003],[7257,11003],[7263,11011],[7299,10998],[7314,10998],[7326,10881],[7372,10766],[7373,10766],[7378,10997],[7389,10998],[7392,10998],[7400,11026],[7401,10988],[7402,11003],[7411,11003],[7417,11003],[7431,10681],[7442,11003],[7462,11001],[7502,11001],[7512,11027],[7513,11028],[7561,11029],[7582,11003],[7586,10998],[7587,10926],[7640,10667],[7641,10667],[7642,10667],[7643,10667],[7650,10924],[7660,11003],[7691,10996],[7702,11030],[7703,11031],[7705,11032],[7712,11018],[7717,10988],[7811,11033],[7814,10747],[7827,11005],[7866,10926],[7884,10747],[7898,10940],[7900,10940],[7917,11017],[7931,11001],[7932,11034],[7934,11034],[7936,11034],[7938,11034],[7940,11034],[7952,11003],[7975,10872],[7979,10999],[8535,10998],[8556,10926],[8715,10872],[8926,10747],[9073,10804],[9074,10805],[9075,10805],[9076,10805],[9077,10805],[9078,10805],[9079,10805],[9080,10805],[9081,10805],[9082,10805],[9086,10750],[9090,10750],[9091,10750],[9092,10750],[9093,10750],[9094,10750],[9095,10750],[9096,10750],[9097,10750],[9098,10750],[9099,10750],[9100,10750],[9101,10750],[9102,10750],[9103,10750],[9104,10750],[9105,10750],[9106,10750],[9107,10750],[9108,10750],[9109,10750],[9110,10750],[9111,10750],[9112,10750],[9113,10750],[9114,10750],[9115,10750],[9116,10750],[9117,10750],[9118,10750],[9119,10750],[9120,10750],[9121,10957],[9122,10958],[9140,10847],[9156,10851],[9157,10894],[9158,10895],[9159,10896],[9160,10854],[9161,10944],[9162,10832],[9163,10928],[9216,11035],[9224,10832],[9230,10959],[9231,10832],[9253,10832],[9262,10960],[9264,10960],[9265,10960],[9275,10960],[9294,10887],[9295,10887],[9329,11036],[9341,10887],[9342,10887],[9348,10701],[9352,10662],[9353,10763],[9354,10763],[9355,10763],[9356,10742],[9358,10681],[9362,10662],[9364,10662],[9365,10662],[9367,10662],[9372,10662],[9373,10662],[9374,10761],[9377,10761],[9378,10762],[9379,10766],[9380,10765],[9381,10662],[9382,10681],[9383,10681],[9384,10681],[9389,10979],[9390,10662],[9393,10980],[9394,10662],[9399,10981],[9400,10662],[9405,10982],[9406,10662],[9410,10662],[9411,10709],[9412,10709],[9415,10662],[9421,10662],[9422,10662],[9426,10662],[9427,10662],[9428,10701],[9430,10766],[9434,10983],[9435,10939],[9436,10983],[9437,10983],[9438,10984],[9439,10983],[9441,10662],[9442,10662],[9446,10662],[9447,10662],[9451,10662],[9452,10662],[9456,10662],[9457,10662],[9461,10662],[9462,10662],[9472,10662],[9473,10662],[9475,10702],[9476,10702],[9488,10662],[9491,10662],[9493,10662],[9494,10701],[9498,10984],[9499,10984],[9500,10983],[9501,10984],[9502,10984],[9503,10662],[9504,10662],[9505,10662],[9506,10662],[9508,10765],[9509,10701],[9511,10751],[9515,10662],[9517,10662],[9521,10760],[9527,10985],[9528,10662],[9529,10703],[9530,10681],[9533,10662],[9537,10662],[9538,10662],[9542,10662],[9543,10662],[9547,10662],[9548,10662],[9552,10662],[9553,10662],[9557,10681],[9570,10766],[9572,10702],[9577,10681],[9593,10766],[9594,10766],[9595,10681],[9613,10761],[9614,10761],[9615,10762],[9616,10766],[9617,10765],[9619,10766],[9623,10765],[9624,10766],[9626,10766],[9627,10766],[9628,10761],[9629,10761],[9630,10765],[9635,10765],[9636,10776],[9637,10776],[9638,10776],[9639,10776],[9640,11018],[9641,11018],[9642,11018],[9643,10920],[9644,10920],[9645,10920],[9649,10900],[9701,10806],[9704,10961],[9724,10971],[9725,10971],[9740,10873],[9743,10874],[9780,10824],[9821,10876],[9850,10877],[9861,10875],[9885,10824],[9886,10824],[9887,10824],[9888,10824],[9929,10874],[9933,10876],[9939,10962],[9968,10963],[9993,10972],[9994,10972],[9995,10972],[9996,10868],[9999,10868],[10000,11021],[10001,11037],[10002,11038],[10003,11038],[10004,11038],[10005,11038],[10006,10964],[10036,10952],[10050,10952],[10063,10754],[10064,10754],[10065,10754],[10066,10853],[10067,10853],[10088,10749],[10091,10749],[10092,10973],[10093,10973],[10094,10973],[10095,10973],[10098,10974],[10099,10975],[10100,10975],[10101,10975],[10102,10975],[10103,10975],[10104,10975],[10105,10975],[10106,10749],[10107,10683],[10108,10683],[10119,10837],[10120,10940],[10121,10839],[10140,11017],[10148,10940],[10150,10940],[10152,11017],[10159,11034],[10161,11034],[10163,11034],[10165,11034],[10167,11034],[10173,10848],[10179,11039],[10180,11039],[10184,10747],[10186,10785],[10187,10705],[10190,10666],[10191,10968],[10192,10968],[10193,10705],[10207,10666],[10382,10666],[10496,10666],[10575,10666],[10584,10669],[10585,10669],[10586,10669],[10588,10669],[10592,10669],[10605,10684],[10606,10684],[10613,10899],[10637,10680],[10638,10680]],"b":[[26,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[27,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[28,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[29,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[30,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[31,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[32,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[33,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[34,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[35,"impl-Add-for-%26ChunkedArray%3CT%3E"],[36,"impl-Add-for-ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-ChunkedArray%3CT%3E"],[39,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[40,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[41,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[42,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[43,"impl-AggList-for-ChunkedArray%3CT%3E"],[44,"impl-AggList-for-ChunkedArray%3CListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[48,"impl-ChunkedArray%3CFixedSizeListType%3E"],[49,"impl-ChunkedArray%3CListType%3E"],[50,"impl-ChunkedArray%3CFixedSizeListType%3E"],[51,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[56,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[57,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[58,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[59,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[60,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[62,"impl-ChunkedArray%3CFixedSizeListType%3E"],[63,"impl-ChunkedArray%3CListType%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[69,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[70,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[71,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[72,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[75,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkedArray%3CStringType%3E"],[79,"impl-ChunkedArray%3CT%3E"],[82,"impl-ChunkedArray%3CFixedSizeListType%3E"],[83,"impl-ChunkedArray%3CListType%3E"],[84,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[85,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[86,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[87,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[88,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[89,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[92,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[93,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[94,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[95,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[97,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[98,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[99,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[100,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[101,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[102,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[103,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[104,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[105,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[106,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[107,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[108,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[109,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[114,"impl-ChunkedArray%3CStringType%3E"],[115,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[119,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[120,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[122,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[123,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[124,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[125,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[126,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[127,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[128,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[129,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[137,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[138,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[139,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[140,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[141,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[171,"impl-Div-for-ChunkedArray%3CT%3E"],[172,"impl-Div-for-%26ChunkedArray%3CT%3E"],[173,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[174,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[181,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[182,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[183,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[184,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[185,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[186,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[187,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[190,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[192,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[195,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[198,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[199,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[200,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[202,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[203,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[204,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[205,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[206,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[207,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[208,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[209,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[210,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[211,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[212,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[215,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[216,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[217,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[218,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-Debug-for-ChunkedArray%3CListType%3E"],[220,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[221,"impl-Debug-for-ChunkedArray%3CT%3E"],[223,"impl-ChunkedArray%3CFixedSizeListType%3E"],[224,"impl-ChunkedArray%3CListType%3E"],[233,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[234,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[235,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[236,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[237,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[238,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[239,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[240,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[241,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[242,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[243,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[244,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[245,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[246,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[247,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[248,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[249,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[250,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[251,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[252,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[253,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[254,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[255,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[256,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[257,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[258,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[259,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[260,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[261,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[262,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[263,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[264,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[265,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[266,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[268,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[269,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[270,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[271,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[272,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[273,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[274,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[275,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[277,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[278,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[279,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[280,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[281,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[282,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[283,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[284,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[285,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[286,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[287,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[288,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[291,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[292,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[293,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[294,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[295,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[296,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[297,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[298,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[299,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[300,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[301,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[302,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[303,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[305,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[306,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[308,"impl-ChunkedArray%3CFixedSizeListType%3E"],[309,"impl-ChunkedArray%3CListType%3E"],[311,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[312,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[313,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[314,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[315,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[316,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[317,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[318,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[319,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[320,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[327,"impl-ChunkedArray%3CFixedSizeListType%3E"],[328,"impl-ChunkedArray%3CListType%3E"],[332,"impl-ChunkedArray%3CFixedSizeListType%3E"],[333,"impl-ChunkedArray%3CListType%3E"],[339,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[340,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[341,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[342,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[343,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[344,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[345,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[346,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[347,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[348,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[349,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[350,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[352,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[353,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[354,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[355,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[357,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[358,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[359,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[360,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[361,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[362,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[363,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[364,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[365,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[366,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[367,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[368,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[369,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[375,"impl-ChunkedArray%3CListType%3E"],[376,"impl-ChunkedArray%3CFixedSizeListType%3E"],[384,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[385,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[386,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[387,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[388,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[389,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[390,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[391,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[393,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[394,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[424,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[425,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[426,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[427,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[428,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[429,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[430,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[431,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[432,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[433,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[434,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[435,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[436,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[437,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[438,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[439,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[440,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[441,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[442,"impl-ChunkedArray%3CBooleanType%3E"],[443,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[444,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[445,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[446,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[447,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkedArray%3CBooleanType%3E"],[449,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[450,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[452,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[453,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[454,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[460,"impl-ChunkedArray%3CBooleanType%3E"],[461,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[464,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[465,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[466,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[467,"impl-ChunkedArray%3CT%3E"],[468,"impl-ChunkedArray%3CBooleanType%3E"],[469,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[470,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[471,"impl-Mul-for-ChunkedArray%3CT%3E"],[472,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[474,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[475,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[476,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[478,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[479,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[480,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[481,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[482,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[483,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[484,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[485,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[486,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[487,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[488,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[489,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[490,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[491,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[492,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[493,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[494,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[495,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[496,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[497,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[498,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[501,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[502,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[503,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[504,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[505,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[506,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[507,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[508,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[509,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[511,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[513,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[514,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[515,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[516,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[517,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[519,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[520,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[521,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[522,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[523,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[524,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[525,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[526,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[533,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[534,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[535,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[536,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[537,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[538,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[539,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[540,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[541,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[542,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[543,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[544,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[545,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[546,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[547,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[548,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[549,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[550,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[551,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[552,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[555,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[556,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[558,"impl-ChunkedArray%3CListType%3E"],[559,"impl-ChunkedArray%3CStringType%3E"],[560,"impl-ChunkedArray%3CListType%3E"],[561,"impl-ChunkedArray%3CStringType%3E"],[564,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[565,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[566,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[567,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[568,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[569,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[576,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[577,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[578,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[579,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[580,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[581,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[582,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[583,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[584,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[585,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[586,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[587,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[588,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[589,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[590,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[591,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[592,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[593,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[594,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[595,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[596,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[597,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[598,"impl-Rem-for-ChunkedArray%3CT%3E"],[599,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[600,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[601,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[604,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[605,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[606,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[607,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[608,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[609,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[610,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[611,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[616,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[617,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[618,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[619,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[620,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[621,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[622,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[623,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[624,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[625,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[626,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[627,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[628,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[629,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[630,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[636,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[637,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[638,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[639,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[640,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[641,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[642,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[643,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[644,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[645,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[646,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[648,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[649,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[650,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[651,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[654,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[655,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[656,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[657,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[658,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[659,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[660,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[661,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[662,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[663,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[665,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[666,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[667,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[668,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[669,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[670,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[671,"impl-Sub-for-ChunkedArray%3CT%3E"],[673,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[674,"impl-ChunkedArray%3CBooleanType%3E"],[675,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[676,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[677,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[679,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[680,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[683,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[684,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[685,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[686,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[687,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[688,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[693,"impl-ChunkedArray%3CFixedSizeListType%3E"],[694,"impl-ChunkedArray%3CListType%3E"],[695,"impl-ChunkedArray%3CT%3E"],[696,"impl-ChunkedArray%3CListType%3E"],[701,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[702,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[703,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[704,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[705,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[706,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[708,"impl-ChunkedArray%3CListType%3E"],[709,"impl-ChunkedArray%3CFixedSizeListType%3E"],[722,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[723,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[724,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[725,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[726,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[731,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[732,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[733,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[734,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[735,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[736,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[737,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[738,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[739,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[740,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[741,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[742,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[743,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[744,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[745,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[746,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[747,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[748,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[749,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[750,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[751,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[752,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[753,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[754,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[755,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[756,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[757,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[758,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[759,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[760,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[761,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[762,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[763,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[764,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[765,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[774,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[775,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[776,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[777,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[778,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[779,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[780,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[781,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[782,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[783,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[784,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[785,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[786,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[787,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[788,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[789,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[790,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[791,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[792,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[793,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[794,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[795,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[796,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[797,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[798,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[799,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[800,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[801,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[802,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[803,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[804,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[805,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[806,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[807,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[808,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[809,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[984,"impl-BinViewChunkedBuilder%3Cstr%3E"],[985,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1232,"impl-MetadataProperties"],[1233,"impl-Flags-for-MetadataProperties"],[1234,"impl-MetadataFlags"],[1235,"impl-Flags-for-MetadataFlags"],[1277,"impl-Debug-for-MetadataProperties"],[1278,"impl-LowerHex-for-MetadataProperties"],[1279,"impl-Octal-for-MetadataProperties"],[1280,"impl-UpperHex-for-MetadataProperties"],[1281,"impl-Binary-for-MetadataProperties"],[1282,"impl-Octal-for-MetadataFlags"],[1283,"impl-UpperHex-for-MetadataFlags"],[1284,"impl-Debug-for-MetadataFlags"],[1285,"impl-LowerHex-for-MetadataFlags"],[1286,"impl-Binary-for-MetadataFlags"],[1292,"impl-Flags-for-MetadataProperties"],[1293,"impl-MetadataProperties"],[1294,"impl-Flags-for-MetadataFlags"],[1295,"impl-MetadataFlags"],[1381,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1382,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1414,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1415,"impl-ObjectArray%3CT%3E"],[1427,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1428,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1438,"impl-ObjectArray%3CT%3E"],[1439,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1441,"impl-ObjectArray%3CT%3E"],[1442,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1444,"impl-Array-for-ObjectArray%3CT%3E"],[1445,"impl-ObjectArray%3CT%3E"],[1448,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1449,"impl-ObjectChunkedBuilder%3CT%3E"],[1451,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1452,"impl-ObjectChunkedBuilder%3CT%3E"],[2184,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2185,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2186,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2187,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2188,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2192,"impl-Logical%3CDurationType,+Int64Type%3E"],[2193,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2439,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2440,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2441,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2442,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2443,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2452,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2453,"impl-PartialEq-for-DataType"],[2459,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2460,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2461,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2463,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2464,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2465,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2499,"impl-Display-for-AnyValue%3C\'_%3E"],[2500,"impl-Debug-for-AnyValue%3C\'a%3E"],[2502,"impl-Display-for-DataType"],[2503,"impl-Debug-for-DataType"],[2505,"impl-Display-for-TimeUnit"],[2506,"impl-Debug-for-TimeUnit"],[2512,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2513,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2527,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2529,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2530,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2531,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2532,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2534,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2535,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2536,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2538,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2540,"impl-From%3C%26ArrowField%3E-for-Field"],[2564,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2565,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2588,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2589,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2590,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2591,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2592,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2596,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2597,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2598,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2599,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2600,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2636,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2637,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2638,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2640,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2641,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2642,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2744,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2745,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2746,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2747,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2748,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2798,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2799,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2800,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2802,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2803,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2804,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2817,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2818,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2819,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2820,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2843,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2844,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2845,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2846,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2847,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2848,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2849,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2850,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2856,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2857,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2858,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2860,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2861,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2862,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2866,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2867,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2887,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2888,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2895,"impl-Logical%3CDurationType,+Int64Type%3E"],[2896,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2901,"impl-Logical%3CTimeType,+Int64Type%3E"],[2902,"impl-Logical%3CDateType,+Int32Type%3E"],[2903,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2917,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2918,"impl-Logical%3CDurationType,+Int64Type%3E"],[2966,"impl-Logical%3CDateType,+Int32Type%3E"],[2967,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2968,"impl-Logical%3CTimeType,+Int64Type%3E"],[2974,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[2975,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3260,"impl-Debug-for-ErrString"],[3261,"impl-Display-for-ErrString"],[3262,"impl-Debug-for-PolarsError"],[3263,"impl-Display-for-PolarsError"],[3267,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3268,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3269,"impl-From%3CError%3E-for-PolarsError"],[3270,"impl-From%3CError%3E-for-PolarsError"],[3271,"impl-From%3CError%3E-for-PolarsError"],[3272,"impl-From%3CError%3E-for-PolarsError"],[3395,"impl-Debug-for-DataFrame"],[3396,"impl-Display-for-DataFrame"],[3401,"impl-From%3C%26Schema%3E-for-DataFrame"],[3402,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3403,"impl-From%3CStructChunked%3E-for-DataFrame"],[3431,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3432,"impl-Index%3Cusize%3E-for-DataFrame"],[3433,"impl-Index%3C%26str%3E-for-DataFrame"],[3434,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3435,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3436,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3437,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3438,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3529,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3530,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3703,"impl-Debug-for-GroupByMethod"],[3704,"impl-Display-for-GroupByMethod"],[3711,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3712,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3713,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3747,"impl-IntoIterator-for-%26GroupsIdx"],[3748,"impl-IntoIterator-for-GroupsIdx"],[3750,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3751,"impl-IntoParallelIterator-for-GroupsIdx"],[5058,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5059,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5689,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5690,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5691,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6166,"impl-PartialEq-for-Expr"],[6167,"impl-Expr"],[6170,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6171,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6186,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6187,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6188,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6193,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6194,"impl-PartialEq-for-StructArray"],[6466,"impl-Debug-for-Duration"],[6467,"impl-Display-for-Duration"],[6491,"impl-Display-for-JoinType"],[6492,"impl-Debug-for-JoinType"],[6493,"impl-Debug-for-JoinValidation"],[6494,"impl-Display-for-JoinValidation"],[6506,"impl-Display-for-Expr"],[6507,"impl-Debug-for-Expr"],[6509,"impl-Display-for-Operator"],[6510,"impl-Debug-for-Operator"],[6512,"impl-Display-for-BooleanFunction"],[6513,"impl-Debug-for-BooleanFunction"],[6514,"impl-Debug-for-CategoricalFunction"],[6515,"impl-Display-for-CategoricalFunction"],[6516,"impl-Display-for-TemporalFunction"],[6517,"impl-Debug-for-TemporalFunction"],[6518,"impl-Debug-for-PowFunction"],[6519,"impl-Display-for-PowFunction"],[6520,"impl-Debug-for-StringFunction"],[6521,"impl-Display-for-StringFunction"],[6522,"impl-Display-for-FunctionExpr"],[6523,"impl-Debug-for-FunctionExpr"],[6536,"impl-Debug-for-Arc%3CT,+A%3E"],[6537,"impl-Pointer-for-Arc%3CT,+A%3E"],[6538,"impl-Display-for-Arc%3CT,+A%3E"],[6586,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6587,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6650,"impl-From%3Cu32%3E-for-Expr"],[6651,"impl-From%3Cf64%3E-for-Expr"],[6653,"impl-From%3Cu8%3E-for-Expr"],[6654,"impl-From%3Ci16%3E-for-Expr"],[6655,"impl-From%3Cu64%3E-for-Expr"],[6656,"impl-From%3Ci64%3E-for-Expr"],[6657,"impl-From%3Cbool%3E-for-Expr"],[6658,"impl-From%3Ci8%3E-for-Expr"],[6659,"impl-From%3C%26str%3E-for-Expr"],[6660,"impl-From%3Ci32%3E-for-Expr"],[6661,"impl-From%3Cf32%3E-for-Expr"],[6662,"impl-From%3CAggExpr%3E-for-Expr"],[6663,"impl-From%3Cu16%3E-for-Expr"],[6666,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6667,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6668,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6670,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6671,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6672,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6673,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6674,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6675,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6676,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6682,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6683,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6684,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6686,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6701,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6702,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6703,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6704,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6705,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6706,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6707,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6708,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6709,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6710,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6711,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6712,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6713,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6714,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6716,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6725,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6726,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6727,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6728,"impl-From%3CArrowSchema%3E-for-Schema"],[6730,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6731,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6732,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6733,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6747,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6748,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6756,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6757,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6769,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6770,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7871,"impl-StructArray"],[7872,"impl-Array-for-StructArray"],[7880,"impl-StructArray"],[7881,"impl-Array-for-StructArray"],[8559,"impl-StructArray"],[8560,"impl-Array-for-StructArray"],[8804,"impl-LazyCsvReader"],[8805,"impl-LazyFileListReader-for-LazyCsvReader"],[8806,"impl-LazyJsonLineReader"],[8807,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8854,"impl-LazyCsvReader"],[8855,"impl-LazyFileListReader-for-LazyCsvReader"],[8856,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8857,"impl-LazyJsonLineReader"],[8894,"impl-StructArray"],[8895,"impl-Array-for-StructArray"],[9281,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9282,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9287,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9288,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9952,"impl-Display-for-RollingFunction"],[9953,"impl-Debug-for-RollingFunction"],[9981,"impl-Display-for-RollingFunctionBy"],[9982,"impl-Debug-for-RollingFunctionBy"],[10198,"impl-Add-for-%26Series"],[10199,"impl-Add%3CT%3E-for-%26Series"],[10200,"impl-Add%3CT%3E-for-Series"],[10201,"impl-Add-for-Series"],[10216,"impl-SeriesSealed-for-Series"],[10217,"impl-AsSeries-for-Series"],[10261,"impl-Div%3CT%3E-for-Series"],[10262,"impl-Div-for-Series"],[10263,"impl-Div-for-%26Series"],[10264,"impl-Div%3CT%3E-for-%26Series"],[10274,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10275,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10276,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10278,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10279,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10280,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10297,"impl-Display-for-Series"],[10298,"impl-Debug-for-Series"],[10303,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10304,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10305,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10306,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10307,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10313,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10314,"impl-FromIterator%3Ci8%3E-for-Series"],[10315,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10316,"impl-FromIterator%3CString%3E-for-Series"],[10317,"impl-FromIterator%3Ci32%3E-for-Series"],[10318,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10319,"impl-FromIterator%3C%26i16%3E-for-Series"],[10320,"impl-FromIterator%3Cu64%3E-for-Series"],[10321,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10322,"impl-FromIterator%3C%26i64%3E-for-Series"],[10323,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10324,"impl-FromIterator%3Ci64%3E-for-Series"],[10325,"impl-FromIterator%3Cf64%3E-for-Series"],[10326,"impl-FromIterator%3Cu32%3E-for-Series"],[10327,"impl-FromIterator%3C%26u8%3E-for-Series"],[10328,"impl-FromIterator%3C%26str%3E-for-Series"],[10329,"impl-FromIterator%3C%26u64%3E-for-Series"],[10330,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10331,"impl-FromIterator%3C%26i8%3E-for-Series"],[10332,"impl-FromIterator%3C%26f64%3E-for-Series"],[10333,"impl-FromIterator%3Ci16%3E-for-Series"],[10334,"impl-FromIterator%3C%26u32%3E-for-Series"],[10335,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10336,"impl-FromIterator%3Cf32%3E-for-Series"],[10337,"impl-FromIterator%3Cu16%3E-for-Series"],[10338,"impl-FromIterator%3Cu8%3E-for-Series"],[10339,"impl-FromIterator%3C%26bool%3E-for-Series"],[10340,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10341,"impl-FromIterator%3C%26u16%3E-for-Series"],[10342,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10343,"impl-FromIterator%3C%26f32%3E-for-Series"],[10344,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10345,"impl-FromIterator%3Cbool%3E-for-Series"],[10346,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10347,"impl-FromIterator%3C%26i32%3E-for-Series"],[10348,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10349,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10350,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10351,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10352,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10353,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10354,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10355,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10356,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10357,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10367,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10368,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10369,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10371,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10372,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10373,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10409,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10410,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10411,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10413,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10414,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10415,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10424,"impl-Mul%3CT%3E-for-Series"],[10425,"impl-Mul-for-%26Series"],[10426,"impl-Mul-for-Series"],[10427,"impl-Mul%3CT%3E-for-%26Series"],[10431,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10432,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10433,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10434,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10435,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10436,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10437,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10438,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10439,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10440,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10441,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10442,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10443,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10444,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10445,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10446,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10447,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10448,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10449,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10450,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10451,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10452,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10453,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10454,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10455,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10456,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10457,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10458,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10459,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10460,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10461,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10462,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10463,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10464,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10465,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10466,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10467,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10468,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10469,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10470,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10471,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10472,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10473,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10474,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10475,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10476,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10477,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10478,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10479,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10480,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10481,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10487,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10488,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10489,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10491,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10492,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10493,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10501,"impl-Rem%3CT%3E-for-Series"],[10502,"impl-Rem%3CT%3E-for-%26Series"],[10503,"impl-Rem-for-%26Series"],[10527,"impl-Sub%3CT%3E-for-Series"],[10528,"impl-Sub%3CT%3E-for-%26Series"],[10529,"impl-Sub-for-Series"],[10530,"impl-Sub-for-%26Series"],[10556,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10558,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10559,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10560,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAACwOcw6wDrMOtA61DrYOtw68Dr8OxA7FDuoO","e":"OzAAAAEAAEEeBwQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUABoAMwAAADgABQBCAAIARgAKAFUACABfAAcAaQAAAGsABQByABYAigAGAJIACACeAAIAogAAAKcADAC2ABMAywAKANcACgDjAAAA5QABAOkAHQANARQAJAESADgBFABPAQEAVAEeAHUBAgB8ARAAjgEDAJUBAQCZAQEAnAEGAKgBIADNAQYA1gEHAN8BMgAWAhMAKwICAC8CBAA1AgUAPwIAAEECGgBdAgcAaQIRAH0CDwCPAhcAqgIBAK0CAACzAgEAugIAAL4CBwDIAgEAywIMANkCAADbAicABQMAAAcDIwAtAzQAZAMIAHEDEQCGA1gA7AMSAAoEBwATBFwAcQQAAHQEFACNBAMAlQQDAJsEKwDSBAAA1AQAANkECwDpBAgA9AQCAPkEAQD9BAoADQUAAA8FAAATBQEAGQUJACwFAQAyBQIAPwUIAE4FAgBTBQgAXgUEAGUFEwB6BQcAgwUAAIUFAACHBQAAiQUBAI0FDgCdBQAAoAUAAKIFAwCnBQIAqwUBAK4FBwC3BQAAuQUFAMEFAQDEBQAAxgUBAMkFAwDOBQMA0wUCANcFAwDdBQAA4AUAAOgFAADtBQAA8AUBAPUFAQD4BQAA+wUAAAIGAAAHBgIAEgYGABsGDQArBgUAMwYIAD4GAwBDBgEARwYAAEkGAQBPBgUAWAYBAGEGAQBtBgAAbwYBAHIGAAB1BgAAdwYAAHsGAAB9BgAAggYMAJEGAgCfBgAAoQYHAKoGAgCwBgAAsgYDALcGAQC6BgUAxgYVAN0GAQDhBgQA5wYDAO4GBgACBwMABwcHABAHBAAXBwIAGwcFACMHAAAlBwwANgcBADoHAQBABwEAQwcBAEYHAwBLBwAATQcAAFAHAQBUBwAAVgcBAFkHAABbBwIAXwcMAG0HAABvBwEAcgcAAHQHAQB3BwAAeQcBAHwHAAB+BwEAgQcAAIUHAACJBwEAjQcAAJAHAACSBwAAlAcDAJkHAACcBwgApgcBAKkHBQCwBwEAtAcAALYHAgC7BwAAwAcDAMUHAQDIBwAAygcBAM0HAADPBwEA0gcAANQHAQDXBwAA2QcBANwHAADeBwAA4QcmAAkIFwAiCG4AkwhQAOUIBwDvCJcAiAkHAJEJKAC7CQEAvgkPANEJAQDgCQAA4gkDAOcJAgDrCQAA7QkBAAUKAQAICgAAEAoAABMKAAAVCgYAHQoEACMKAAAlCgQAKwoBAC4KGQBNCg8AXwoqAIsKAAC3CgkAwwoAAMUKAQDICgQAzgoBANMKAADVCgUA3AoAAN8KAgDkCgQA6goAAO0KDwD/CgAAAgsSABYLAAAZCw0AKAsMADYLAAA4CwEAPAsOAEwLAABTCwAAVQsAAFoLDwBsCwAAbgsCAHMLIQCaC2UAAQwvADIMAgA2DDUAbQwBAHAMCAB6DAAAfAwBAH8MBACFDAEAigwAAIwMAgCQDAAAkwwaAK8MEQDDDAYAywwDANIMBADYDBUA8QwAAPQMCgAADQIACA0QABsNEAAzDQEANw0CADsNAAA9DQAAQg0DAEoNAgBODQAAXQ0AAF8NAABhDQEAaA0MAHsNAgCODQEAmw0BAJ8NAAClDQAArg0BALENAAC0DQEAuw0AAL0NBADFDQYAzg0JANkNAADcDQEA4A0EAOwNDQD7DQIAAA4KAAwOAQAPDgMAFA4DABkOCQAkDgcALQ4BADAOGABKDigAdA4GAIAOAgCEDgAAhg4AAIgOAwCODgAAkg4HAKIODQCxDgEAuA4DAL0OAQDBDgIAxg4AAMgOHwDrDgwA+g4FAAEPBwAKDyMAMA8LAD0PDwBPDwAAUQ8DAFgPBgBiDw4Acw8FAHsPAAB+DwgAiA8BAIwPBACSDwUAmQ8AAJ4PCQCpDwEArQ8EALMPAQC2DwoAwg8AAMUPAADHDwkA0g8AANQPCQDfDwQA6A8AAOsPAADzDwIA+g8AAP0PAQADEAoADxARACQQBwAtEAEAMBAEADkQBABBEAQAShADAE8QAABREAsAXxAKAGsQAQBvEAAAchAAAHQQBQB7EAMAgBAEAIYQAwCNEAIAkxAAAJUQAQCZEAAAmxAEAKIQDwCzEAAAthABALkQAwC/EAIAxRAVANwQCQDoEAAA6hABAO4QAADwEAEA9BAAAPYQAQD6EAAA/BAEAAMRAQAGEQEAChEAAA0RAAAPEQMAFBECABgRCAAjEQcALREAADERAQA1EQAANxEAADkRAQA8EQEAPxEBAEQRDgBWEQUAXREHAGcRAgBrEQYAdhEBAHkRAAB7EQEAfhEDAIMRAACFEQMAihECAI4RAACQEQQAlhEAAJgRBACeEQQApBEBAKcRAQCqEQEArREBALARAACyEQAAtBEAALYRAgC7EQMAwBEHAMoRAgDQEQAA0hEFANkRAwDeEQAA4REAAOMRBADpEQMA7hECAPIRAgD2EQ0ABRImAC0SBgA1EgQAPRIBAEESAABDEgYASxIEAFESAABTEgIAWBIBAFsSAQBgEgsAcBIGAHgSCQCFEgEAiBIGAJASAgCVEgIAnBIFAKMSEgC4EgAAuhIBAL4SAADAEgEAxBIAAMYSAQDKEgAAzBIDANISAwDXEgIA3hIJAOkSAADsEgUA9BICAPgSWgBUEwMAXBMAAF4TAABhEwUAaRMAAHATAAByEwAAdRMAAHcTAAB7EwUAhRMAAIkTAACQEwAAlBMAAKATAgCkEwQAqhMAAKwTAgCwEwEAthMBALkTBAC/EwEAxxMKANQT9ADKFAAAzBQBAM8UAADRFAIA2BQBAN4UAADgFAAA6BQAAOoUAQDtFAAA9xRLAEQVCwBRFVgAqxUBAK8VAQCzFQAAtxUCAL0VCgDLFQQA1RUAANcVAADhFQEA5RUAAOsVAADtFQEA8hUBAAEWAAAHFgAADBYCABIWAAAUFgUAHBYoAEYW/QBGFwAASxcBAE4XAwBUFwAAVhcCAF0XGAB3F1EAyhcNANwXAQDhFwAA5BcAAOgXAgDsFysAGRgTAC4YCgA8GKcA6BgAAOwYAADuGAQA9BgAAPgYAAD+GAAAABkAAAkZAAAMGQAAFBkAABcZAgAcGQQAIhkAACUZAQAoGQAAKhkDADIZAAA1GQEAOhlgAJwZAACfGQAAuxkBAM8ZAADYGQAA4xkAAPsZAQD+GQoACxoCAA8aBgAbGgIAHxoAACYaAAA8GgAAPxoAAEYaAwBLGgMAUBoAAFYaAABZGgQAXxoAAGUaAQBpGgIAbxoFAHYaAgB6GgAAfRoBAIAaAACCGgAAhBoAAIkaAACSGgAAlRoBAJgaAgCdGgAAoBoAAKQaAQCoGgQAsRoBALUaAADAGgAAwho+AAQbAgALGwAADRsAAA8bBAAXGwAAGRsAABwbAAAjGwIAKBt8AKcbAACsGwIAsBsBACwcAAAuHAYANxwBADocBQBCHAAARBwCAEgcAQBMHAAATxwBAFwcAABeHAAAYRwBAGQcAwBqHAIAexwBAH4cAQCHHAAAiRwBAIwcAACQHAIAlhwBAJkcAACcHAAAoRwBAKUcAQCpHAIArRwDALMcDgDHHAAAzRwBANQcAADXHAUA4BwAAOgcAgD9HAAABB0BAAgdAAAMHQEADx0AABIdAAAXHQAAGR0AABsdAAAjHQAAJR0CACwdCAA7HQgASR0AAEsdAABPHQAAVR0AAFcdAwBfHQEAYh0BAGUdAABoHQcAcR0AAHMdAgB3HQAAeh0BAIodAACNHQEAmB0GAKQdAgCsHQAAsh0CALYdAAC/HQAAwR0DAMYdBQDOHQUA2R0DAN4dAADiHQIA6B0AAOsdAAD3HQAA+h0BAP0dAQAAHgMABh4FAA0eBAAYHgAAGh4AAB4eAAAhHgAAIx4DACoeAAAuHgAAMB4AADIeAQBVHgAAWh4AAGQeAwBpHgUAcB4AAHIeAAB1HgAAex4BAIAeAgCEHgMAix4AAI0eAQCQHgEAkx4BAJYeAACbHgMAoh4AAK4eAACwHgAAtx4EAMEeAQDGHgAAyB4AAMoeAADNHgAAzx4AANUeCQDgHgAA4h4AAOYeAADsHgAA7h4AAPUeAAD8HgoACR8CAA4fAgAZHwAAKB8AACofAAAtHwIAMR8DADcfAQA6HwAAPR8AAEEfWgCeHwsAqx8AALEfCwC+HwEAwR+HAEsgAABPIHgAyyAAAM0gAwDYIAAA2yAAAN8gdwBYIQAAZCEAAGshBABxIQEAdSEAAHchAAB5IQAAfSEAAIMhAACFIQAAhyF4AAciAwAQIgAAEyIAABYiAAAYIgEAHiIAACYiAAAvIgAANSIAAEAiAABGIgAAUyIBAGYiAABoIgEAbCIAAHUiAwB6IgQAjyIAAJgiAQCiIgAApyIAALYiAAC4IgEAwCIBAMUiFADeIgEA4SJIACwjAAAuIwAAMCMBADMjAQA2IwQAPCM3AHYjBQB9IwkAiCMCAI4jAACQIwMAlSMBAJgjBQCiIxIAtiMBALkjAgC+IwAAwSMDAMYjBgDdIwAA6yMCAAEkAAAJJAgAFiQAABgkCwAlJAIAKSQRADwkAQA/JA8AUCQXAGokAABsJAIAcSQMAH8kBwCIJAQAjyQCAJMkBQCbJAAAnSQMAK4kAQCyJAEAuCQBALskAQC+JAMAwyQAAMUkAADIJAEAzCQAAM4kAQDRJAAA0yQCANckDADlJAAA5yQBAOokAADsJAEA7yQAAPEkAQD0JAAA9iQBAPkkAAD9JAAAASUBAAUlAAAIJQAACiUAAAwlAwARJQAAFCUIAB4lAQAhJQUAKCUBACwlAAAuJQIAMyUAADglAwA9JQEAQCUAAEIlAQBFJQAARyUBAEolAABMJQEATyUAAFElAQBUJQAAViUAAFklEQBsJQYAdSUAAHglEACKJQgAlCUBAJclCAChJQAAoyUBAKklAACrJQQAtCUBAL0lAgDDJQAAxSUAAM8lAADeJQMA5iUKAPIlAAD0JQgA/yXjAOQmAQDnJhgAAScBAAQnDgAVJxEAKCcAAConFQBBJwEARCcAAEYnCwBTJwIAWicAAG0nAwB0JwYAiCcFAJAnAACZJwAAmycBAKInBwCwJwoAxCcEAMonAADMJwIA0CcEANcnAwDcJwEA4CcAAOYnBADvJwIA8ycGAP0nAgAEKAIACCgBAA4oDgAgKAEAIygAACUoAAAnKAEALCgCADkoAwBAKAQARygAAEkoLgB7KAAAgCgAAIIoAACEKAAAhigAAIgoAACOKAQAligDAKEoAgCoKAAAqigAAKwoAACuKAAAsCgAALQoAAC5KAMAwCgKAMwoJgD1KAEA+CgBAPwoAAD+KAAAASkBAAYpAgAMKQAADykCABUpAQAZKQAAHSkAACApAwApKQAANCkAADYpAQA5KQsARikCAE8pAQBTKQIAVykAAFkpFgByKQEAdikOAIYpAQCJKQUAkCkKAJwpAACeKQAAoCkEAA=="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCTTTTTTFFFTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNMNNNNCNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPFPPPPPGIGPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPIFEKPPKGEEIEKGPPGFFFPPEEPKFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNMNNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHEHNNNNNNNNHHNNHHNNNNNNNNNNNNNHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","dtype","effective_metadata","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","MAX_VALUE","MIN_VALUE","Metadata","MetadataFlags","MetadataProperties","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","difference","difference","drop","drop","drop","empty","empty","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","vzip","vzip","vzip","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","One","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_descending","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_order_descending","with_order_descending","with_order_descendings","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_set_metadata","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_reduce","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[426,"polars_core::chunked_array::arithmetic"],[454,"polars_core::chunked_array::builder"],[558,"polars_core::chunked_array::builder::list"],[712,"polars_core::chunked_array::collect"],[726,"polars_core::chunked_array::float"],[728,"polars_core::chunked_array::from_iterator_par"],[732,"polars_core::chunked_array::iterator"],[769,"polars_core::chunked_array::iterator::par"],[771,"polars_core::chunked_array::metadata"],[940,"polars_core::chunked_array::object"],[1011,"polars_core::chunked_array::object::builder"],[1034,"polars_core::chunked_array::object::registry"],[1062,"polars_core::chunked_array::ops"],[1183,"polars_core::chunked_array::ops::arity"],[1218,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1220,"polars_core::chunked_array::ops::gather"],[1223,"polars_core::chunked_array::ops::search_sorted"],[1252,"polars_core::chunked_array::ops::sort"],[1259,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1260,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1267,"polars_core::chunked_array::ops::sort::options"],[1341,"polars_core::chunked_array::temporal"],[1342,"polars_core::chunked_array::temporal::conversion"],[1345,"polars_core::config"],[1349,"polars_core::datatypes"],[2751,"polars_core::datatypes::categorical"],[2891,"polars_core::datatypes::categorical::revmap"],[2943,"polars_core::datatypes::categorical::string_cache"],[2962,"polars_core::datatypes::revmap"],[2968,"polars_core::datatypes::string_cache"],[2972,"polars_core::error"],[3033,"polars_core::error::PolarsError"],[3037,"polars_core::error::constants"],[3040,"polars_core::export"],[3048,"polars_core::fmt"],[3078,"polars_core::frame"],[3340,"polars_core::frame::explode"],[3369,"polars_core::frame::group_by"],[3604,"polars_core::frame::group_by::GroupByMethod"],[3605,"polars_core::frame::group_by::GroupsProxy"],[3607,"polars_core::frame::group_by::aggregations"],[3620,"polars_core::frame::group_by::expr"],[3623,"polars_core::frame::row"],[3717,"polars_core::functions"],[3719,"polars_core::hashing"],[3767,"polars_core::prelude"],[4321,"polars_core::prelude::PolarsError"],[4325,"polars_core::prelude::default_arrays"],[4331,"polars_core::prelude::list"],[4354,"polars_core::prelude::null"],[4384,"polars_core::prelude::revmap"],[4390,"polars_core::prelude::slice"],[4393,"polars_core::prelude::string_cache"],[4397,"polars_core::prelude::utf8"],[4401,"polars_core::random"],[4402,"polars_core::schema"],[4476,"polars_core::series"],[4857,"polars_core::series::arithmetic"],[4882,"polars_core::series::arithmetic::checked"],[4890,"polars_core::series::ops"],[4916,"polars_core::series::unstable"],[4940,"polars_core::utils"],[5049,"polars_core::utils::flatten"],[5054,"dyn_clone::sealed"],[5055,"num_traits"],[5056,"num_traits::cast"],[5057,"polars_error"],[5058,"polars_core::series::arithmetic::borrowed"],[5059,"polars_core::frame::group_by::proxy"],[5060,"core::option"],[5061,"core::iter::traits::iterator"],[5062,"core::ops::function"],[5063,"core::marker"],[5064,"polars_core::datatypes::dtype"],[5065,"alloc::string"],[5066,"polars_core::datatypes::aliases"],[5067,"polars_core::series::arithmetic::borrowed::checked"],[5068,"polars_arrow::array"],[5069,"alloc::vec"],[5070,"core::iter::traits::double_ended"],[5071,"core::fmt"],[5072,"core::iter::traits::collect"],[5073,"core::result"],[5074,"polars_utils::iter::fallible"],[5075,"polars_arrow::bitmap::immutable"],[5076,"rayon::iter"],[5077,"polars_arrow::trusted_len"],[5078,"polars_core::datatypes::any_value"],[5079,"polars_utils::index"],[5080,"polars_core::chunked_array::logical::decimal"],[5081,"core::iter::traits::exact_size"],[5082,"polars_core::series::series_trait"],[5083,"core::slice::iter"],[5084,"core::iter::adapters::map"],[5085,"alloc::sync"],[5086,"core::convert"],[5087,"core::ops::range"],[5088,"polars_core::datatypes::field"],[5089,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5090,"polars_core::chunked_array::ops::rolling_window"],[5091,"ahash::random_state"],[5092,"polars_utils::hashing"],[5093,"ndarray::aliases"],[5094,"either"],[5095,"core::any"],[5096,"polars_core::chunked_array::arithmetic::numeric"],[5097,"polars_core::chunked_array::builder::string"],[5098,"polars_arrow::array::binview"],[5099,"polars_core::chunked_array::builder::boolean"],[5100,"polars_core::chunked_array::builder::null"],[5101,"polars_core::chunked_array::builder::primitive"],[5102,"core::clone"],[5103,"polars_core::chunked_array::builder::list::anonymous"],[5104,"polars_core::chunked_array::builder::list::boolean"],[5105,"polars_core::chunked_array::builder::list::primitive"],[5106,"polars_core::chunked_array::builder::list::binary"],[5107,"polars_core::chunked_array::builder::list::null"],[5108,"alloc::boxed"],[5109,"polars_arrow::array::boolean"],[5110,"bitflags::iter"],[5111,"polars_arrow::datatypes"],[5112,"polars_arrow::bitmap::utils::iterator"],[5113,"polars_arrow::bitmap::utils::zip_validity"],[5114,"polars_arrow::offset"],[5115,"core::hash"],[5116,"polars_arrow::array::static_array"],[5117,"core::error"],[5118,"polars_arrow::array::primitive"],[5119,"polars_arrow::legacy::array::slice"],[5120,"polars_row::row"],[5121,"chrono::naive::datetime"],[5122,"alloc::borrow"],[5123,"polars_arrow::array::static_array_collect"],[5124,"bytemuck::zeroable"],[5125,"polars_core::chunked_array::logical::categorical"],[5126,"polars_core::chunked_array::logical::categorical::merge"],[5127,"polars_core::chunked_array::logical"],[5128,"polars_core::datatypes::time_unit"],[5129,"polars_arrow::types"],[5130,"polars_arrow::datatypes::physical_type"],[5131,"core::borrow"],[5132,"smartstring::alias"],[5133,"polars_arrow::pushable"],[5134,"core::cmp"],[5135,"polars_core::chunked_array::logical::categorical::builder"],[5136,"polars_core::chunked_array::logical::categorical::revmap"],[5137,"polars_core::chunked_array::logical::categorical::string_cache"],[5138,"polars_error::warning"],[5139,"polars_core::series::from"],[5140,"polars_utils::aliases"],[5141,"polars_arrow::datatypes::schema"],[5142,"polars_core::chunked_array::ndarray"],[5143,"polars_arrow::array::struct_"],[5144,"polars_arrow::record_batch"],[5145,"polars_utils::idx_vec"],[5146,"rayon::iter::plumbing"],[5147,"polars_core::frame::group_by::into_groups"],[5148,"core::iter::adapters::copied"],[5149,"core::iter::adapters::zip"],[5150,"polars_arrow::legacy::kernels::rolling"],[5151,"polars_utils::float"],[5152,"polars_arrow::types::native"],[5153,"polars_core::frame::group_by::aggregations::agg_list"],[5154,"polars_core::frame::row::av_buffer"],[5155,"polars_arrow::array::binary"],[5156,"polars_core::hashing::identity"],[5157,"hashbrown::map"],[5158,"polars_core::hashing::vector_hasher"],[5159,"core::alloc"],[5160,"std::os::fd::owned"],[5161,"std::os::fd::raw"],[5162,"core::mem::maybe_uninit"],[5163,"polars_arrow::legacy::kernels::time"],[5164,"core::default"],[5165,"polars_arrow::scalar"],[5166,"std::fs"],[5167,"std::io::error"],[5168,"simdutf8::basic"],[5169,"alloc::collections"],[5170,"regex::error"],[5171,"std::ffi::os_str"],[5172,"core::ffi::c_str"],[5173,"alloc::ffi::c_str"],[5174,"std::path"],[5175,"polars_arrow::legacy::array::default_arrays"],[5176,"polars_arrow::buffer::immutable"],[5177,"polars_arrow::array::list"],[5178,"polars_core::named_from"],[5179,"polars_arrow::legacy::array"],[5180,"polars_core::chunked_array::ops::aggregate"],[5181,"polars_core::chunked_array::ops::aggregate::quantile"],[5182,"polars_arrow::legacy::index"],[5183,"core::pin"],[5184,"core::io::borrowed_buf"],[5185,"std::io"],[5186,"polars_core::chunked_array::ops::aggregate::var"],[5187,"alloc::collections::btree::map"],[5188,"polars_arrow::legacy::array::list"],[5189,"polars_arrow::legacy::array::null"],[5190,"polars_arrow::bitmap::mutable"],[5191,"polars_arrow::array::utf8"],[5192,"polars_core::series::iterator"],[5193,"polars_arrow::legacy::utils"],[5194,"polars_arrow::legacy::trusted_len::rev"],[5195,"smartstring::config"],[5196,"smartstring"],[5197,"polars_error::constants"],[5198,"polars_arrow::legacy::prelude"],[5199,"polars_arrow::legacy::array::utf8"],[5200,"polars_core::utils::any_value"],[5201,"polars_core::utils::schema"],[5202,"polars_core::utils::supertype"],[5203,"polars_core::utils::series"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,83,83,83,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,83,6,83,0,0,6,6,6,6,6,6,6,6,6,6,6,0,0,6,6,6,6,6,6,83,6,83,6,6,6,6,6,6,6,83,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,83,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,83,6,6,6,83,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,83,6,6,83,6,6,83,6,6,6,6,6,6,6,83,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,0,0,0,0,0,0,0,0,117,119,120,121,116,117,119,120,121,117,116,116,117,119,121,117,119,120,121,117,119,120,121,117,119,120,121,117,119,120,121,117,119,120,121,117,119,120,121,117,119,120,121,116,117,117,123,124,119,120,121,117,119,120,121,125,125,125,125,117,119,120,121,117,119,120,121,0,117,119,120,121,116,119,120,121,117,119,120,121,117,119,120,121,117,119,120,121,117,119,120,121,117,119,120,121,0,0,0,0,0,0,0,0,126,126,127,128,129,129,130,126,127,131,132,128,133,129,126,126,130,129,130,126,127,131,132,128,133,129,129,131,132,131,132,126,127,131,132,128,133,129,126,127,131,132,128,133,129,129,126,127,126,127,131,132,128,133,129,126,127,131,132,128,133,129,126,127,131,132,128,133,129,131,132,128,129,130,131,132,128,129,130,126,127,133,130,126,127,131,132,128,133,129,0,126,127,131,132,128,133,129,131,132,128,129,130,126,127,131,132,128,133,129,126,127,131,132,128,133,129,129,126,127,131,132,128,133,129,126,127,131,132,128,133,129,126,127,131,132,128,133,129,126,127,131,132,128,133,129,0,0,135,136,135,136,136,136,135,136,135,136,136,136,0,137,0,0,138,139,0,0,0,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,141,142,141,142,0,141,142,141,142,141,142,141,142,141,142,0,0,50,47,47,65,47,47,0,0,0,47,65,65,50,47,65,47,65,47,65,47,65,47,65,47,65,47,47,65,65,47,65,47,65,50,47,65,50,47,65,50,47,65,50,47,65,47,65,47,65,50,47,65,50,47,65,50,47,65,47,65,50,47,65,47,65,47,65,47,65,50,47,47,47,47,47,65,65,65,65,65,50,47,65,47,65,47,47,65,65,47,65,47,65,47,65,47,65,50,50,65,50,50,50,65,50,47,65,47,65,47,65,47,65,50,47,65,47,65,47,65,47,65,50,50,50,47,65,47,65,47,65,47,65,47,65,50,50,50,50,50,50,50,50,65,47,65,47,65,47,65,50,47,65,47,65,50,47,65,50,47,65,50,47,65,47,65,50,47,65,0,0,0,0,145,145,145,145,145,67,145,145,145,145,0,145,145,145,145,145,145,67,67,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,0,145,145,145,145,145,67,145,145,145,145,145,145,145,145,145,67,68,145,145,145,145,145,145,145,145,145,145,145,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,0,0,0,154,154,154,155,155,155,155,155,155,155,155,0,0,0,155,155,0,155,0,154,155,155,155,155,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,159,0,0,165,164,164,164,164,164,164,164,164,159,160,160,159,159,161,161,162,0,164,164,163,163,164,164,164,164,164,164,165,165,166,166,0,168,169,0,164,164,0,170,171,0,172,172,165,165,164,164,164,174,175,165,165,176,176,177,176,176,162,178,165,165,166,177,179,180,181,181,0,181,182,183,0,161,161,184,176,185,186,187,164,164,164,164,162,184,164,0,188,0,193,191,189,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,195,195,195,0,195,0,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,0,195,195,195,195,195,0,0,0,0,0,196,196,0,0,0,0,0,0,0,0,0,0,0,38,40,38,40,38,40,38,40,38,40,38,40,38,40,38,40,38,40,38,40,38,40,38,38,38,40,40,40,38,40,38,38,40,40,38,40,38,40,38,40,38,40,38,40,38,40,38,40,196,196,38,40,38,40,38,40,38,40,38,40,38,40,38,40,38,40,38,40,40,38,40,0,0,0,0,0,0,0,0,218,0,23,0,0,0,0,0,0,63,35,146,0,35,0,0,63,0,146,63,35,146,0,0,0,63,35,0,0,0,0,0,0,0,0,35,146,146,0,35,0,63,35,146,146,0,0,146,35,146,0,63,35,146,0,0,0,146,146,218,146,63,35,146,0,0,63,35,146,0,0,0,258,0,23,392,393,0,0,0,0,0,0,218,0,0,63,35,146,0,0,63,35,146,0,0,63,35,146,0,0,63,35,146,0,0,146,23,146,146,146,259,63,35,146,0,0,258,0,0,146,231,219,231,219,231,219,7,63,35,146,0,63,35,0,63,0,0,23,259,23,0,0,0,0,0,0,0,0,0,237,0,0,231,0,218,63,35,0,63,0,146,35,146,146,0,0,0,146,237,0,63,35,146,0,0,63,35,146,0,0,63,35,146,0,0,63,35,146,0,0,146,35,146,0,146,146,190,190,23,190,216,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,37,72,51,51,107,107,107,41,41,41,63,71,91,88,95,90,30,29,34,31,14,37,51,107,41,153,51,51,37,37,51,51,37,51,107,41,153,37,37,203,204,51,107,41,51,107,41,107,41,107,37,37,51,107,41,153,37,51,107,41,153,51,107,41,199,51,107,41,199,51,107,41,153,205,205,206,206,85,107,63,35,96,207,190,37,51,51,51,51,51,51,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,35,0,215,72,37,51,107,41,199,63,37,51,107,41,199,0,71,91,88,95,90,30,29,216,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,216,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,96,232,232,232,232,35,35,35,0,96,63,218,35,146,216,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,216,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,72,71,91,88,95,90,30,29,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,215,72,85,63,96,63,218,35,35,96,219,146,231,63,37,51,107,107,41,41,37,51,107,107,41,41,63,63,63,218,218,218,35,35,35,96,96,96,219,219,219,146,146,146,231,231,231,37,216,51,41,37,51,107,41,199,153,214,37,107,41,153,217,63,63,218,35,35,96,219,219,146,231,37,216,394,22,5,71,66,85,217,63,63,63,63,63,63,218,35,35,35,35,96,96,96,219,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,146,146,231,35,37,37,37,51,107,107,41,41,153,51,107,41,153,37,37,51,107,107,41,41,199,199,153,51,107,41,153,96,37,51,51,107,107,41,41,37,51,107,41,153,51,107,41,153,51,190,190,190,37,51,107,41,199,153,190,37,51,107,41,199,153,37,190,72,215,215,37,51,107,41,199,153,72,215,215,37,51,107,41,199,153,37,23,5,71,66,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,37,153,153,63,244,190,37,107,199,37,51,107,41,199,153,37,51,107,107,41,41,37,51,107,107,41,41,63,218,35,96,219,146,231,63,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,37,35,146,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,245,245,37,51,107,41,199,153,72,245,85,63,35,35,35,63,35,35,35,63,35,63,35,35,35,35,35,63,35,63,35,63,35,35,35,35,63,35,35,35,35,63,35,146,190,37,190,35,37,51,107,107,41,41,37,51,107,107,41,41,0,0,35,51,51,107,41,51,203,204,203,204,0,51,51,107,41,51,72,71,91,88,95,90,30,29,107,41,96,96,392,393,255,107,107,107,107,41,41,41,41,153,153,85,96,153,37,51,107,41,199,153,153,153,51,51,37,51,107,107,41,41,37,51,107,107,41,41,37,37,107,37,107,63,219,72,216,203,204,203,204,51,71,91,88,95,90,30,29,37,51,107,41,199,153,0,72,216,51,107,41,51,107,41,51,107,41,37,37,96,37,51,107,41,199,153,37,51,107,41,199,153,51,107,41,199,51,107,41,199,203,204,63,0,72,71,91,88,95,90,30,29,51,51,41,107,107,41,41,35,96,219,35,219,107,37,146,37,216,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,35,146,63,35,219,41,63,37,37,205,205,206,206,232,232,232,232,63,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,63,35,37,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,146,51,107,41,153,85,190,85,190,35,190,203,204,51,248,249,234,250,251,252,253,254,245,203,204,107,41,199,153,51,248,249,234,250,251,252,253,254,245,203,204,107,41,199,153,216,394,22,5,71,66,85,217,63,218,35,96,219,220,221,91,88,222,223,95,90,30,29,224,225,34,31,226,14,227,228,229,230,146,231,392,393,255,39,190,63,37,0,0,0,0,0,258,0,259,258,259,0,213,213,213,256,213,256,256,213,256,260,257,213,256,260,257,213,0,213,213,213,257,256,260,257,213,256,260,257,213,256,256,260,257,213,213,213,213,213,213,213,213,214,256,257,256,260,257,213,213,213,213,213,213,213,213,213,213,213,213,213,213,256,260,257,213,256,260,257,213,260,213,213,213,213,213,213,213,213,213,213,213,0,0,213,257,213,213,213,256,257,260,213,213,213,213,213,213,213,213,256,0,260,213,213,0,213,213,213,213,213,256,260,257,213,256,260,257,213,256,260,257,213,213,213,213,256,260,257,213,0,258,259,258,259,0,259,258,259,258,259,258,258,259,258,259,258,259,258,259,258,259,258,259,258,259,258,259,258,259,258,258,258,258,259,258,259,258,258,258,258,258,259,258,259,258,259,258,259,258,259,258,0,263,263,263,263,263,0,263,263,0,263,263,263,263,263,263,263,0,263,0,258,259,258,259,0,0,0,0,0,265,201,201,201,201,0,201,201,265,201,201,0,0,0,201,201,201,201,201,265,264,265,264,265,264,0,265,264,264,265,264,265,264,0,265,264,264,265,264,264,0,265,264,265,264,0,0,0,0,0,0,0,264,265,264,265,264,265,264,265,264,395,396,395,396,0,0,0,0,0,0,0,0,0,0,0,0,267,267,267,267,267,267,267,267,267,267,0,267,0,0,0,0,0,267,267,0,0,0,0,0,267,267,267,267,267,273,0,273,272,273,273,0,0,272,0,0,272,273,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,283,284,272,273,262,283,284,272,273,262,262,272,273,262,272,273,262,262,262,273,262,283,284,272,273,262,283,284,272,273,262,262,262,262,283,284,272,273,262,262,262,262,262,262,262,262,273,262,262,262,273,273,273,262,0,262,262,262,262,262,262,272,273,262,262,283,284,272,273,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,0,262,262,262,273,262,262,262,262,262,262,262,262,262,262,262,262,262,262,283,284,272,273,262,262,283,284,272,273,262,283,284,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,283,284,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,0,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,283,284,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,272,273,262,262,262,262,262,262,283,284,272,273,262,262,262,262,262,283,284,272,273,262,283,284,272,273,262,262,262,262,262,262,283,284,272,273,262,262,262,262,262,262,262,0,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,0,294,294,0,0,294,0,0,0,0,0,0,298,13,0,294,0,294,294,294,294,294,294,294,294,294,298,13,0,294,294,294,292,13,277,294,277,0,292,277,13,298,303,296,295,292,13,277,294,298,303,296,295,292,13,277,294,292,13,277,294,292,13,277,294,277,292,13,298,303,296,295,295,292,13,277,294,298,303,296,295,292,13,277,294,277,296,298,303,296,295,292,292,13,277,294,292,13,292,292,292,13,13,13,0,298,292,277,292,292,13,277,294,294,0,298,303,296,295,292,292,292,292,13,13,277,294,292,292,292,13,277,277,13,300,300,277,13,298,303,296,295,292,13,277,294,298,303,296,295,292,13,277,294,13,303,292,292,296,292,292,298,13,292,292,13,277,277,277,298,13,277,277,277,277,277,292,277,303,303,277,292,13,277,277,13,292,13,277,277,13,13,277,277,292,13,277,294,294,298,303,296,295,292,13,277,294,298,303,296,295,292,13,277,294,298,303,296,295,292,13,277,294,13,13,13,277,298,303,296,295,292,13,277,294,397,398,398,0,0,0,0,0,0,0,0,0,0,309,310,310,0,311,311,312,313,0,0,312,313,312,313,312,313,312,313,312,313,312,313,0,312,313,312,313,312,313,312,313,276,312,313,313,312,313,276,312,313,276,312,313,276,312,313,276,0,276,312,313,276,312,313,276,312,313,276,276,276,276,276,276,312,312,313,313,276,0,312,313,276,312,313,276,312,313,312,313,276,312,313,0,0,0,312,313,276,312,313,276,312,313,276,312,313,276,312,313,276,0,0,0,0,0,0,0,0,0,0,315,316,315,316,315,315,316,315,316,315,316,315,316,315,316,316,316,316,315,316,315,316,0,315,316,315,316,315,316,319,319,319,319,315,316,315,315,315,315,315,0,0,0,0,0,0,0,0,0,289,0,0,0,0,0,0,0,0,0,0,0,201,201,201,0,201,0,353,289,0,0,0,258,0,99,201,0,0,0,0,0,0,201,0,0,0,353,259,0,99,0,0,0,0,0,0,258,99,0,99,0,0,99,0,201,0,353,329,0,0,0,0,201,259,0,0,0,0,0,0,0,0,353,329,0,0,0,0,201,201,0,0,201,0,0,201,0,201,0,0,0,110,326,87,100,289,238,275,99,327,328,329,87,87,87,87,87,87,87,201,110,326,87,87,100,289,353,238,275,99,327,328,329,201,110,326,87,100,289,353,238,275,99,327,328,329,0,87,100,325,325,110,326,87,100,289,238,275,99,327,328,329,110,326,87,100,289,238,275,99,327,328,329,87,232,232,232,232,87,201,201,0,238,238,0,327,87,87,87,100,289,238,275,99,0,201,110,326,87,87,100,289,353,238,275,99,327,328,329,201,110,326,87,100,289,353,238,275,99,327,328,329,87,0,87,87,87,201,110,326,87,87,100,289,353,238,275,99,327,328,329,110,87,87,87,100,289,238,275,99,329,110,110,110,87,87,87,289,289,289,238,238,238,275,275,275,99,99,99,329,329,329,326,275,275,214,87,201,201,110,326,87,87,87,100,289,238,275,99,327,328,329,100,201,201,201,201,201,110,110,326,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,100,289,353,238,275,275,99,327,328,329,348,350,351,87,87,399,399,399,399,399,87,87,87,353,354,87,87,87,275,45,87,356,87,289,238,99,329,110,87,87,275,0,201,110,326,87,100,289,353,238,275,99,327,328,329,110,326,328,201,110,326,87,100,289,353,238,275,99,327,328,329,87,87,87,275,326,110,238,87,110,87,87,275,0,87,0,0,87,359,359,360,238,275,100,359,359,238,87,361,362,87,238,87,87,87,87,87,87,87,87,87,87,0,110,326,87,87,87,0,0,0,0,328,359,359,87,87,360,87,87,87,87,87,0,87,0,196,196,87,368,326,0,87,359,359,110,110,326,87,100,289,238,275,99,327,328,329,201,87,232,232,232,232,201,110,326,87,87,100,289,353,238,275,99,327,328,329,201,110,326,87,100,289,353,238,275,99,327,328,329,361,87,87,87,87,87,87,87,87,87,201,110,326,87,100,289,353,238,275,99,327,328,329,87,0,368,201,110,326,87,100,289,353,238,275,99,327,328,329,87,100,100,238,275,87,87,395,396,395,396,0,0,0,348,350,351,0,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,0,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,0,258,259,258,259,0,0,196,196,0,0,0,0,0,0,400,401,0,0,0,0,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,378,270,270,378,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,378,270,270,270,270,270,77,77,0,77,77,0,0,0,77,77,0,0,0,0,77,10,10,10,10,10,10,10,10,358,358,358,358,0,10,358,358,358,10,358,358,10,358,358,10,10,10,358,358,358,358,358,358,10,380,77,10,380,77,10,358,10,10,10,358,358,10,10,358,358,358,10,10,77,10,358,77,10,10,10,10,380,77,10,10,380,77,10,10,10,10,10,10,380,77,10,358,358,358,358,77,10,10,10,10,10,10,10,10,10,77,77,77,10,10,10,10,10,10,358,358,10,358,10,77,10,10,10,380,77,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,358,10,10,358,358,358,358,358,358,10,10,10,10,10,10,358,77,10,10,10,10,10,10,0,380,77,10,380,77,10,10,380,271,10,358,358,10,10,10,10,358,358,271,271,10,10,10,358,358,358,10,10,10,10,10,10,10,10,358,358,358,358,10,358,358,358,358,10,358,358,10,10,10,10,358,358,358,358,358,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,358,10,380,10,10,10,10,10,10,10,358,0,10,10,358,358,358,10,10,10,358,10,358,77,358,358,10,10,10,10,358,358,358,10,10,380,358,10,358,358,358,358,358,358,10,10,10,10,10,10,10,10,358,358,10,10,358,358,358,10,10,358,10,10,10,10,77,10,10,10,10,380,77,10,10,10,10,10,380,77,10,10,380,77,10,10,10,10,10,358,358,10,358,0,358,358,358,358,380,77,10,10,10,10,0,0,0,382,382,383,12,12,0,382,383,12,12,382,383,12,12,382,383,12,12,382,383,12,12,0,0,325,43,43,325,43,43,384,384,0,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,386,0,0,0,0,0,0,0,385,0,0,0,0,389,197,386,389,197,386,386,386,0,0,385,385,0,0,385,389,389,197,197,386,389,197,197,386,389,197,386,0,0,389,389,389,389,0,385,389,197,386,197,197,197,388,197,197,197,197,197,0,0,0,389,389,197,386,389,197,386,197,386,285,386,386,0,197,386,386,386,0,386,0,0,0,386,385,389,197,386,0,389,197,386,389,197,386,389,197,386,0,0,0,0,0,0],"f":"`````````````{{}b}``0``````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{{l{c}}}}Dfg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dj}}}}{{{f{{l{c}}}}g{f{Bh{Db{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dl}Dnn}{{{f{{l{c}}}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}n}{{{f{{l{c}}}}}{{Af{Dn}}}n}`{{{f{{l{Dd}}}}}Eb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEd{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}{f{Df}}}{{Af{Ad}}}n}{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}1{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ef}{{{f{{l{c}}}}e}{{Af{Ad}}}EfAb}{{{f{{l{c}}}}}EhBn}{{{f{{l{c}}}}}{{f{{El{Ej}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{El{Ej}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}``{{{f{{l{c}}}}}{{Af{{f{Db}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}En}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}En}bBnBn}{{{f{{l{c}}}}}{{`{{F`{}{{B`{{f{Db}}}}}}}}}n}{{}{{l{c}}}Bn}{Fb{{f{c}}}{}}0{Fb{{f{Bhc}}}{}}0{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}}bBn}{Fbb}0{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{c}}}}}{{f{{Fd{c}}}}}Bn}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}10{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ff}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{An{Fb}}}Bn}`{{{f{{l{c}}}}{f{BhFh}}}Fjn}{{{f{{l{Al}}}}{f{BhFh}}}Fj}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{c{{l{e}}}Fl{{Bn{}{{Fn{c}}}}}}{cc{}}0{{{f{Bf}}c}{{l{e}}}G`{{Bn{}{{Fn{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{Fn{}}}}Bn}G`}{{{f{Bf}}{El{Ej}}}{{l{c}}}Bn}{{{f{Bf}}{El{Ej}}Df}{{l{c}}}Bn}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{c{{l{e}}}{{G`{}{{B`{An}}}}}n}{c{{l{e}}}{{G`{}{{B`{{Gh{El{An{Gf}}}}}}}}}n}{c{{l{Al}}}{{G`{}{{B`{{An{d}}}}}}}}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}13{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gj{}{{B`{An}}}}}n}{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Gl{}{{B`{An}}}}}n}{{{f{Bf}}El}{{l{c}}}n}{{{f{Bf}}El{An{Gf}}}{{l{c}}}n}{{{f{Bf}}Fb}{{l{c}}}n}0{{{f{{l{c}}}}Fb}{{l{c}}}Bn}{{{f{Bf}}Fb{f{Df}}}Dj}{{{f{{l{c}}}}Fb}AnBn}{{{f{{l{c}}}}Fb}{{Af{Gn}}}n}{{{f{{l{c}}}}Fb}Gnn}{{{f{{l{j}}}}Fb}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{H`}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HbBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}{{An{f}}}Bn}0{{{f{{l{{Hd{c}}}}}}Fb}{{An{{f{Hf}}}}}Hh}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}FbdFb}AjEd}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}{{{f{{l{c}}}}e}FfnAb}108{{{f{{l{c}}}}{An{Fb}}}{{l{c}}}Bn}{{}Fb}0{{FbHj{An{Hl}}}{{l{c}}}n}{{{f{{l{j}}}}}Df}{ce{}{}}0{{{l{Hn}}{An{Fb}}Fb}{{Af{I`}}}}{{{l{Hn}}{An{Fb}}Fb}I`}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IbId{If{}{{B`{}}}}F`Gl}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FfIh}000{{{f{{l{c}}}}}FfBn}02{{{f{{l{c}}}}}IjBn}{{{f{{l{c}}}}}{{`{{Il{}{{B`{An}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{In}}}}}}}}{{{f{{l{c}}}}}{{Jd{{J`{Ej}}{Jb{{f{Ej}}}{{C`{{An{{f{Gf}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{Fb}}}Bn}{{{f{{l{c}}}}}{{Jf{c}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}FbBn}{{{f{{l{c}}}}e}{{l{c}}}n{A`Jh}}00{{{f{{l{c}}}}Fb}{{l{c}}}Bn}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}10{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Jjn}{{{f{{l{Al}}}}}{{An{Jl}}}}{{{f{{l{c}}}}}{{An{Jl}}}n}{{{f{{l{c}}}}}{{An{Jl}}}Ed}{{{f{{l{c}}}}}JjEd}`{{{f{{l{c}}}}}{{An{{f{{Fd{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{f{{Jn{{Fd{c}}}}}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Jn{{Fd{c}}}}}}}Bn}{{{f{{l{c}}}}}{{Jn{{Fd{c}}}}}Bn}:9{{{f{{l{c}}}}}{{An{Gh}}}n}9{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{D`}}}}FbFb}{{l{Al}}}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}{{Af{Fb}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{K`}}}{{Kb{{Db{{An{Hl}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Kb{{Db{{An{d}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kb{{Db{{El{D`}}}}}}}}{{{f{Bf}}c}{{l{Kd}}}{{Kb{{Db{{An{In}}}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Kb{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kb{{Db{Hj}}}}}}{{{f{Bf}}c}{{l{Kf}}}{{Kb{{Db{{An{Kh}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kb{{Db{{An{{El{D`}}}}}}}}}}{{{f{Bf}}{Kl{Kj}}}{{l{Kn}}}}{{{f{Bf}}c}{{l{Kn}}}{{Kb{{Db{Kj}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Kb{{Db{d}}}}}}{{{f{Bf}}c}{{l{Kf}}}{{Kb{{Db{Kh}}}}}}{{{f{Bf}}c}{{l{Kn}}}{{Kb{{Db{{An{Kj}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kb{{Db{{An{Jl}}}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Kb{{Db{Dh}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kb{{Db{Jl}}}}}}{{{f{Bf}}{Kl{Kh}}}{{l{Kf}}}}{{{f{Bf}}c}{{l{K`}}}{{Kb{{Db{Hl}}}}}}{{{f{Bf}}{Kl{In}}}{{l{Kd}}}}{{{f{Bf}}{Kl{Hl}}}{{l{K`}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kb{{Db{{An{Hj}}}}}}}}{{{f{Bf}}c}{{l{Kd}}}{{Kb{{Db{In}}}}}}{{{f{Bf}}}{{l{{Hd{c}}}}}Hh}{{{f{{l{c}}}}FbFb}{{l{c}}}n}{{{f{Bf}}{El{c}}}{{l{{Hd{c}}}}}Hh}{{{f{Bf}}{El{c}}Gf}{{l{{Hd{c}}}}}Hh}{{{f{Bf}}El}{{l{c}}}n}{{{Jn{L`}}{El{Ej}}}{{l{c}}}Bn}{{{Jn{L`}}{El{Ej}}H`H`}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ih}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}10{{{f{{l{c}}}}}FbBn}``{{{f{{l{Dd}}}}}{{`{{Lb{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Lb{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{c}}}}}Jjn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JlLf}{{Af{{An{Jl}}}}}Ed}{{{f{{l{c}}}}JlLf}{{Af{Jj}}}Ed}{{{f{Bf}}FbJl}{{Af{{l{Al}}}}}}{{{f{Bf}}FbJlJl}{{Af{{l{c}}}}}n}{{{f{Bf}}Fb}{{l{c}}}n}{{{f{Bf}}FbJlJl}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{L`}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Lh}{{Af{Ad}}}n}{{{f{{l{c}}}}Fbe}{{Af{{l{c}}}}}Ih{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Jldd{An{Hl}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Fbdd{An{Hl}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{G`{}{{B`{H`}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{G`{}{{B`{H`}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Ff}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Df}b}{{{f{Bh{l{c}}}}H`}bBn}{{{f{Bh{l{c}}}}Ij}bBn}{{{f{{l{c}}}}In}{{l{c}}}n}{{{f{{l{c}}}}InAn}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}InFb}{{l{c}}}Bn}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dl}{{l{c}}}n}{{{f{{l{c}}}}D`}{{An{Jl}}}n}{{{f{{l{c}}}}D`}JjEd}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{H`}}}}{{{f{{l{c}}}}}Jjn}{{{f{{l{c}}}}{An{Fb}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Kb{{Db{H`}}}}Lj}}{{{f{{l{c}}}}{f{Dn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Ll{Bl}}}}Bn}{{Kb{{Db{H`}}}}Lj}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}{{Bn{}{{Ll{Bl}}}}Bn}}`{{{f{{l{c}}}}dLn}{{El{{El{M`}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ih}{{{f{{l{Dd}}}}Fb}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Df}b}{{{f{{l{j}}}}}{{Af{Mb}}}}{{{f{{l{c}}}}}{{Af{Md}}}n}{{{f{c}}}e{}{}}{{{f{{l{Cn}}}}}Mf}{{{f{{l{c}}}}}{{El{An}}}n}{{{f{{l{c}}}}}{{Mh{El{El{An}}}}}n}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gb{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gb{eg}}}}}}}Bn}{c{{Gb{e}}}{}{}}0{{{f{Bf}}g}{{Gb{{l{i}}e}}}Fl{}{{G`{}{{B`{{Gb{ce}}}}}}}{{Bn{}{{Fn{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Mj{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}Fb}{}Bn}{{{f{{l{c}}}}D`}{{An{Jl}}}n}{{{f{{l{c}}}}D`}JjEd}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Fl{{Bn{}{{Fn{c}}}}Bn}}{{{f{{l{c}}}}{El{Ej}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Db{Ml}}}}e}c{}{{Mn{{f{Dn}}}{{C`{c}}}}}}{{{f{{l{c}}}}Ij}{{l{c}}}Bn}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}3201{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}543210452376543210543210{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Ff}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}}e{}{}{}}{{{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}c}e{}{}{}}{{c{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}}e{}{}{}}{{{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}}g{}{}{}}{{{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}c}g{}{}{}}{{c{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}}g{}{}{}}{{{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhNh}}}b}{{{f{Bh{Nj{c}}}}}b{NlLj}}{{{f{BhNn}}}b}{{{f{BhO`}}}b}{{{f{Bh{Ob{c}}}}}bn}{{{f{Bh{Nj{c}}}}{An{e}}}b{NlLj}{{Kb{c}}}}{{{f{BhNh}}{An{c}}}b{}}{{{f{BhNh}}c}b{}}{{{f{Bh{Nj{c}}}}e}b{NlLj}{{Kb{c}}}}{{{f{BhNn}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Nj{c}}}}}{{Nj{c}}}{NlLj}}{{{f{Nn}}}Nn}{{{f{O`}}}O`}{{{f{{Ob{c}}}}}{{Ob{c}}}{nOd}}{{{f{c}}{f{Bhe}}}b{}{}}000{Fb{{f{c}}}{}}000{Fb{{f{Bhc}}}{}}000{Fbb}000{Nh{{l{c}}}Bn}{{{Nj{Bf}}}Mf}{{{Nj{{Db{D`}}}}}Eb}{OfMf}{OhEb}{NnFf}`{{{Ob{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}Oj{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Oj{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Db{c}}}}}Oj{}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Oj{}}{{}Fb}000{ce{}{}}000`{{{f{Bf}}Fb}{{Nj{c}}}{NlLj}}{{{f{Bf}}Fb}Nn}{{{f{Bf}}Fb}O`}{{{f{Bf}}Fb}{{Ob{c}}}n}{{{f{BhNh}}}b}{{{f{BhNn}}}b}{{{f{BhO`}}}b}{{{f{Bh{Ob{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gb{e}}}{}{}}0000000{{{f{c}}}Mj{}}000;;;;````````{{{f{BhOl}}{f{Fl}}}b}{{{f{BhOl}}}b}{{{f{BhOn}}}b}{{{f{BhA@`}}c}b{{Bd{}{{B`{{An{d}}}}}}Gl}}{{{f{Bh{A@b{c}}}}e}bn{{Bd{}{{B`{An}}}}Gl}}{{{f{Bh{A@b{c}}}}e}bn{{Bd{}{{B`{}}}}Gl}}{{{f{BhA@d}}}b}54{{{f{BhA@f}}}b}{{{f{BhA@h}}}b}{{{f{BhA@`}}}b}{{{f{BhA@j}}}b}{{{f{Bh{A@b{c}}}}}bn}{{{f{BhOl}}{An{{f{Fl}}}}}b}{{{f{BhOl}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhA@d}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{A@b{c}}}}{An{{f{Db}}}}}bn}{{{f{BhA@d}}{f{Ad}}}{{Af{b}}}}{{{f{BhOl}}{f{Ad}}}{{Af{b}}}}{{{f{BhOn}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@f}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@h}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@`}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@j}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{A@b{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{A@b{c}}}}{f{Db}}}bn}{{{f{BhA@f}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}Gl}}{{{f{BhA@h}}c}b{{Bd{}{{B`{{An{{f{{Db{D`}}}}}}}}}}Gl}}{{{f{BhA@f}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhA@h}}c}b{{Bd{}{{B`{{f{{Db{D`}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}Ol}{{}On}{Fb{{f{c}}}{}}000000{Fb{{f{Bhc}}}{}}000000{Fbb}000000{{{f{A@f}}}d}{{{f{A@h}}}d}{{{f{A@`}}}d}{{{f{{A@b{c}}}}}dn}{{{f{A@d}}}d}{{{f{A@f}}}{{f{L`}}}}{{{f{A@h}}}{{f{L`}}}}{{{f{A@`}}}{{f{L`}}}}{{{f{{A@b{c}}}}}{{f{L`}}}n}{{{f{A@d}}}{{f{L`}}}}{{{f{BhOl}}}Dj}{{{f{BhOn}}}Dj}{{{f{BhA@j}}}Dj}{{{f{BhA@d}}}Dj}{cc{}}000000{{{f{Df}}FbFb{f{Bf}}}{{Af{{A@l{A@d}}}}}}{{}Fb}000000{{{f{BhA@f}}}Ej}{{{f{BhA@h}}}Ej}{{{f{BhA@`}}}Ej}{{{f{Bh{A@b{c}}}}}Ejn}{{{f{BhA@d}}}Ej}{ce{}{}}000000{{{f{Bf}}Fb{An{Df}}}Ol}{{{f{Bf}}Fb{An{Df}}}On}{{{f{Bf}}FbFb}A@f}{{{f{Bf}}FbFb}A@h}{{{f{Bf}}FbFb}A@`}{{{f{Bf}}Fb}A@j}{{{f{Bf}}FbFbDf}{{A@b{c}}}n}{{{f{Bf}}FbFbDfDf}{{A@b{c}}}n}{c{{Gb{e}}}{}{}}0000000000000{{{f{c}}}Mj{}}000000:::::::``{{A@n{f{Bf}}}{{l{c}}}Bn}{{AA`{f{{l{c}}}}}{{l{c}}}Bn}10{{AA`{f{Bf}}Df}{{l{c}}}Bn}0{{A@n{f{Bf}}}{{Gb{{l{c}}e}}}Bn{}}{{AA`{f{{l{c}}}}}{{Gb{{l{c}}e}}}Bn{}}10{{AA`{f{Bf}}Df}{{Gb{{l{c}}e}}}Bn{}}0`{AAbAAb}``{{AAd{f{Bf}}Df}e{}{{AAf{c}}}}{{e{f{Bf}}Df}AAf{}{{Gj{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{Fb{{f{c}}}{}}0{Fb{{f{Bhc}}}{}}0{Fbb}0{cc{}}0{{}Fb}0{ce{}{}}000{{{f{AAh}}}AAj}{{{f{BhAAj}}}{{An{c}}}{}}{{{f{Bh{AAl{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AAl{c}}}}}{{An{e}}}F`{}}`{{{f{AAj}}}{{Gh{Fb{An{Fb}}}}}}{{{f{{AAl{c}}}}}{{Gh{Fb{An{Fb}}}}}Bd}{c{{Gb{e}}}{}{}}000{{{f{c}}}Mj{}}088``````````````{{{f{c}}h}b{}}00{{}En}{{}Hb}{{EnEn}En}{{HbHb}Hb}{{{f{BhEn}}En}b}{{{f{BhHb}}Hb}b}3210{{{f{En}}}Kh}0{{{f{Hb}}}D`}05432{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{{Fd{c}}}}}{{Fd{c}}}Bn}{{{f{En}}}En}{{{f{Hb}}}Hb}{{{f{c}}{f{Bhe}}}b{}{}}00{EnEn}{HbHb}{{{f{En}}En}d}{{{f{Hb}}Hb}d}{{}{{Fd{c}}}Bn}{{}En}{{}Hb}{Fb{{f{c}}}{}}00{Fb{{f{Bhc}}}{}}00{{EnEn}En}{{HbHb}Hb}{Fbb}0065{{{f{En}}{f{En}}}d}{{{f{Hb}}{f{Hb}}}d}{{{f{BhEn}}c}b{{G`{}{{B`{En}}}}}}{{{f{BhHb}}c}b{{G`{}{{B`{Hb}}}}}}{{{f{{Fd{c}}}}{f{BhFh}}}FjBn}{{{f{En}}{f{BhFh}}}Fj}0000{{{f{Hb}}{f{BhFh}}}Fj}0000{cc{}}00{Kh{{An{En}}}}{D`{{An{Hb}}}}{KhEn}0{D`Hb}010{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}0{cEn{{G`{}{{B`{En}}}}}}{cHb{{G`{}{{B`{Hb}}}}}}{{{f{Bf}}}{{An{En}}}}{{{f{Bf}}}{{An{Hb}}}}{{{f{{Fd{c}}}}}{{An{H`}}}Bn}{{{f{{Fd{c}}}}}dBn}{{{f{Hb}}}d}{{{f{{Fd{c}}}}}HbBn}{{{f{{Fd{c}}}}}{{An{f}}}Bn}0{{{f{Hb}}}Ij}{{}Fb}00{{{f{BhEn}}En}b}{{{f{BhHb}}Hb}b}{{EnEn}En}{{HbHb}Hb}{{{f{En}}En}d}{{{f{Hb}}Hb}d}{ce{}{}}00{Enc{}}{Hbc{}}{{{f{En}}}d}>0>{{{f{{Fd{c}}}}}IjBn}{{{f{{Fd{c}}}}}dBn}0{{{f{En}}}{{AAn{En}}}}{{{f{Hb}}}{{AAn{Hb}}}}{{{f{En}}}{{AB`{En}}}}{{{f{Hb}}}{{AB`{Hb}}}}{EnEn}{HbHb}{{{f{BhEn}}En}b}{{{f{BhHb}}Hb}b}{{{f{BhEn}}End}b}{{{f{BhHb}}Hbd}b}{{{f{Bh{Fd{c}}}}{An{H`}}}bBn}{{{f{Bh{Fd{c}}}}d}bBn}{{{f{Bh{Fd{c}}}}Hb}bBn}{{{f{Bh{Fd{c}}}}An}bBn}022{{{f{Bh{Fd{c}}}}Ij}bBn}{{{f{BhHb}}Ij}b}{{EnEn}En}{{HbHb}Hb};:10{{{f{c}}}e{}{}}00<;{c{{Gb{e}}}{}{}}00000{{{f{c}}}Mj{}}0043{ce{}{}}00````{{{f{c}}h}b{}}{e{{ABb{c}}}Hh{{G`{}{{B`{{An{{f{c}}}}}}}}}}{e{{ABb{c}}}Hh{{G`{}{{B`{{f{c}}}}}}}}{{ABde}g{}{{G`{}{{B`{c}}}}}{}}0{{{f{Hf}}}{{f{ABf}}}}{{{f{{ABb{c}}}}}{{f{ABf}}}Hh}{{{f{Bh{ABb{c}}}}}{{f{BhABf}}}Hh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{ABb{c}}}}}{{ABb{c}}}{HhOd}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{ABb{c}}}}}{{f{ABd}}}Hh}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{{f{Hf}}}}{f{{f{Hf}}}}}d}{{{f{Hf}}{f{Hf}}}d}{{{f{{ABb{c}}}}{f{BhFh}}}Fj{HhABh}}{cc{}}{{FbABd}{{ABb{c}}}Hh}{{{f{{ABb{c}}}}Fb}{{An{{f{c}}}}}Hh}{{}ABd}{{{f{Gf}}{f{{ABb{c}}}}{f{{ABb{c}}}}}{{ABb{c}}}Hh}{{ABd{f{Gf}}cc}{{ABb{e}}}{}Hh}{{{f{Gf}}{f{{ABb{c}}}}e}{{ABb{c}}}Hh{}}{{{f{Gf}}c{f{{ABb{e}}}}}{{ABb{e}}}{}Hh}{{}Fb}{ce{}{}}{{{f{{ABb{c}}}}}eHh{}}{{{f{{ABb{c}}}}Fb}dHh}{{{f{c}}Fb}d{}}1{{{f{{ABb{c}}}}}{{ABn{{f{c}}{ABj{c}}ABl}}}Hh}{{{f{{ABb{c}}}}}{{ABn{egABl}}}Hh{}{}}{{{f{{ABb{c}}}}}FbHh}0`{{{f{Bh{ABb{c}}}}{An{Gf}}}bHh}{{{f{Bh{ABb{c}}}}FbFb}bHh}{{{f{c}}FbFb}e{}{}}01{{{f{Hf}}}{{A@l{Hf}}}}{{{f{{ABb{c}}}}}{{A@l{Fl}}}Hh}{{{f{c}}}e{}{}}{g{{Gb{{ABb{c}}e}}}Hh{}{{G`{}{{B`{{Gb{{f{c}}e}}}}}}}}{g{{Gb{{ABb{c}}e}}}Hh{}{{G`{}{{B`{{Gb{{An{{f{c}}}}e}}}}}}}}{{ABdg}{{Gb{ie}}}{}{}{{G`{}{{B`{{Gb{ce}}}}}}}{}}0{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}{{{f{Hf}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{ABb{c}}}}}{{An{{f{Gf}}}}}Hh}{{{f{{ABb{c}}}}Fb}{{f{c}}}Hh}{{{f{{ABb{c}}}}Fb}eHh{}}1{{{f{{ABb{c}}}}}{{f{{Jn{{El{c}}}}}}}Hh}{{{f{{ABb{c}}}}}eHh{}}{{{f{{ABb{c}}}}}{{ABj{c}}}Hh}{ce{}{}}{{{f{{ABb{c}}}}{An{Gf}}}{{A@l{Fl}}}Hh}{{{ABb{c}}{An{Gf}}}{{ABb{c}}}Hh}0`{{{f{Bh{AC`{c}}}}}bHh}0{{{f{Bh{AC`{c}}}}{An{c}}}bHh}{{{f{Bh{AC`{c}}}}{f{ABf}}}bHh}{{{f{Bh{AC`{c}}}}c}bHh}{{{f{Bh{AC`{c}}}}{f{ABf}}}{{Af{b}}}Hh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{AC`{c}}}Hh}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{AC`{c}}}{{ACb{c}}}Hh}{cc{}}{{}Fb}{ce{}{}}{{{f{Bf}}Fb}{{AC`{c}}}Hh}{{{f{Bh{AC`{c}}}}}AdHh}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}4````{{{f{BhACd}}}b}{{{f{BhACd}}{An{{f{ABf}}}}}b}{{{f{BhACd}}{f{ABf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{ACf}}{f{BhFh}}}Fj}<{{{f{Bf}}Fb}{{A@l{ACd}}}}{{}ACh}{{}ABd}>={{}d}`{{ACjAChABd}b}{{{f{BhACd}}}Ad}==<{ce{}{}}````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ACn{}{{ACl{c}}}}}}g}{{ACn{}{{ACl{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{AD`}}{f{Cb}}}AD`}{{{f{AD`}}{f{Cb}}}{{l{c}}}Bn}{{{f{{ACn{}{{ACl{c}}}}}}i{f{Bh{Db{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{ACn{}{{ACl{c}}}}}}g}{{ACn{}{{ACl{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{ADb}}Dl}Dn}{{{f{ADb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{ADd}}}{{Af{Dn}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{ADf}}{f{Df}}}{{Af{Ad}}}}0{{{f{ADh}}}ADh}{{{f{c}}{f{Bhe}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{ADh}}{f{ADh}}}d}{{{f{{ADj{}{{B`{c}}}}}}e}c{}{}}0{{{f{ADl}}}{{Af{Ad}}}}{{{f{ADl}}}{{Af{{Gh{Ad{ADn{In}}}}}}}}`{{{f{AE`}}c}{{Af{AE`}}}{}}{{{f{AEb}}{f{Ff}}}{{Af{{l{c}}}}}Bn}`{{{f{ADh}}{f{BhFh}}}Fj}{cc{}}`{{{f{Bf}}cFb}AEd{}}{{{f{Bf}}Fb}AEf}`{{{f{AEh}}Fb}{{Af{Gn}}}}{{{f{AEh}}Fb}Gn}::{{{f{ADh}}{f{Bhc}}}bAEj}{{}Fb}{ce{}{}}{{{f{AEl}}}{{Af{Ff}}}}{{{f{AEn}}}{{Af{Ff}}}}??{{{f{AF`}}}{{An{c}}}{}}{{{f{AF`}}}{{An{Jl}}}}{{{f{AFb}}}{{An{c}}}{}}2{{{f{AF`}}}{{An{{Gh{cc}}}}}{}}{{{f{ADd}}}{{Af{Fb}}}}{{{f{AFd}}FbFb}{{l{c}}}Bn}{{{f{{ADj{}{{B`{c}}}}}}e}c{}{}}0{{{f{ADl}}}{{Af{{ADn{In}}}}}}{{{f{AFb}}JlLf}{{Af{{An{c}}}}}{}}{{{f{AFf}}}AFf}{{{f{AFh}}{f{Cb}}Lh}{{Af{Ad}}}}{{{f{AFj}}c{An{e}}}{{Af{AFj}}}{{G`{}{{B`{H`}}}}}{}}{{{f{AFj}}ci}{{Af{AFj}}}{{G`{}{{B`{H`}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AFj}}{f{Ff}}{An{c}}}{{Af{AFj}}}{}}{{{f{AFl}}In}{{l{c}}}Bn}{{{f{AFn}}Inc}{{l{e}}}{}Bn}`{{{f{ADb}}d}{{l{c}}}Bn}{{{f{ADb}}Dl}{{l{c}}}Bn}{{{f{AG`}}D`}{{An{Jl}}}}{{{f{AF`}}}{{An{c}}}{}}{{{f{AGb}}{f{c}}}{{Af{AGb}}}Lj}{{{f{AGd}}{f{c}}}AGdLj}{{{f{AGf}}}{{El{{f{{Db{D`}}}}}}}}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}{{{f{ADd}}}{{Af{ADd}}}}8{ce{}{}}`{{{f{AGh}}{f{Ff}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnFl{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AGj{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{FlAGl}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnFl{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnFl{{Ch{}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{A@l{Fl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{A@l{Fl}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gb{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gb{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AGn{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gb{{l{m}}i}}}BnBnFlAH`{{Ch{ff}{{C`{{Gb{gi}}}}}}}{{Bn{}{{Fn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gb{{l{m}}i}}}BnBnFlAH`{{Ch{ff}{{C`{{Gb{gi}}}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gb{{l{c}}g}}}BnBnAH`{{Ch{ff}{{C`{{Gb{{A@l{Fl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gb{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gb{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gb{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gb{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{FlAGl}AH`{{Ch{f}{{C`{{Gb{eg}}}}}}}{{Bn{}{{Fn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AHb{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAHbBn}{{{f{{l{c}}}}g}{{l{i}}}BnFl{{Ch{f}{{C`{e}}}}}{{Bn{}{{Fn{e}}}}}}{{{l{c}}g}{{l{i}}}BnFl{{Ch{}{{C`{e}}}}}{{Bn{}{{Fn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{FlAGl}{{Ch{f}{{C`{e}}}}}{{Bn{}{{Fn{e}}}}}}0{{{f{{l{c}}}}}Fbn}0{{IjIj}Ij}{{{f{Dn}}H`}{{Af{b}}}}{{{f{{AHd{H`}}}}H`}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAHfd}{{El{H`}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AHf}}}AHf}{{{f{c}}{f{Bhe}}}b{}{}}{{}AHf}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{AHf}}{f{AHf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AHf}}{f{BhFh}}}Fj}{cc{}}{{{f{AHf}}{f{Bhc}}}bAEj}{{}Fb}{ce{}{}}{{{f{{Db{f}}}}cH`e}{{El{H`}}}{{Bd{}{{B`{An}}}}}{{Cb{fFbf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}4`{{Fb{f{Bh{El{d}}}}}b}```{{{f{AHh}}FbFb}AHh}0{{Fb{f{{Db{Ad}}}}{f{BhE`}}}{{Af{{AHj{Dn}}}}}}{{{f{{Db{Ad}}}}{f{{Db{d}}}}d}{{Af{AHl}}}}{{{f{Bf}}{f{{Db{Ad}}}}{f{{Db{d}}}}d}{{Af{AHn}}}}{{{f{Bf}}{f{{Db{Ad}}}}}{{Af{AHn}}}}{{{f{Ad}}}{{Af{Ej}}}}{{{f{{Db{Ad}}}}}{{Af{AHl}}}}{{{f{{Db{Ad}}}}}{{Af{AHn}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dl}}}Dl}{{{f{E`}}}E`}{{{f{c}}{f{Bhe}}}b{}{}}0{{}Dl}{{}E`}{Fb{{f{c}}}{}}0{Fb{{f{Bhc}}}{}}0``{Fbb}0{{{f{Dl}}{f{Dl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dl}}{f{BhFh}}}Fj}{{{f{E`}}{f{BhFh}}}Fj}{cc{}}{{{f{E`}}}Dl}{{{f{Dl}}}E`}2{{{f{Dl}}{f{Bhc}}}bAEj}{{{f{E`}}{f{Bhc}}}bAEj}{{}Fb}0{ce{}{}}0````{{}Dl}{{}E`}``{{{f{AHh}}FbFb}AHh}0{{{f{c}}}e{}{}}0{c{{Gb{e}}}{}{}}000{{{f{c}}}Mj{}}066{{Dld}Dl}{{E`d}E`}101010{{E`c}E`{{G`{}{{B`{d}}}}}}{DlDl}{E`E`}`{AI`In}00{{}d}>>0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dj}}}d}{{{f{I`}}{f{I`}}}c{}}{{FfFf}c{}}{{{f{Ff}}{f{Ff}}}c{}}{{{f{Mf}}{f{Mf}}}c{}}{{MfMf}c{}}{{{f{Mf}}{f{Bf}}}c{}}{{EbEb}c{}}{{{f{Eb}}{f{{Db{D`}}}}}c{}}{{{f{Eb}}{f{Eb}}}c{}}{{{f{Gn}}{f{Gn}}}Gn}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIb}}}{}}000000{{{f{Mf}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ff}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dj}}{f{Aj}}}Ad}{{{f{Ff}}{f{Aj}}}Ad}{{{f{Mf}}{f{Aj}}}Ad}{{{f{Eb}}{f{Aj}}}Ad}{{{f{{ACb{c}}}}{f{Aj}}}AdHh}{{{f{Ff}}}d}{{{f{Ff}}}{{An{d}}}}{{{f{Dj}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dj}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dj}}c}Dj{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Ff}}c}Ff{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Mf}}c}Mf{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AId{Bf}}}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{AId{{Db{D`}}}}}}}}}}Cd}}{{{f{{ACb{c}}}}e}{{ACb{c}}}Hh{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dj}}c}Dj{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dj}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AIf}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AIh}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Ff}}{f{Cb}}}Ff}{{{f{Mf}}{f{Cb}}}Mf}{{{f{Eb}}{f{Cb}}}Eb}{{{f{Ff}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mf}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eb}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mf}}c}Mf{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Eb}}c}Eb{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Mf}}c}Mf{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{Dj}}{f{Cb}}}{{Af{Dj}}}}{{{f{Dj}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Ff}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Mf}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eb}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{{Db{D`}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{ACb{c}}}}g{f{Bh{Db{e}}}}}bHh{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dj}}c}Dj{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Ff}}c}Ff{{Cb{d}{{C`{d}}}}Cd}}{{{f{Mf}}c}Mf{{Cb{{f{Bf}}}{{C`{{AId{Bf}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{f{{Db{D`}}}}}{{C`{{AId{{Db{D`}}}}}}}}Cd}}{{{f{{ACb{c}}}}e}{{ACb{c}}}Hh{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Ff}}Dl}Dn}{{{f{Mf}}Dl}Dn}{{{f{Eb}}Dl}Dn}{{{f{AHn}}Dl}Dn}{{{f{Ff}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Mf}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Eb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AHn}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Ff}}}{{Af{Dn}}}}{{{f{Mf}}}{{Af{Dn}}}}{{{f{Eb}}}{{Af{Dn}}}}{{{f{{ACb{c}}}}}{{Af{Dn}}}Hh}{eAIj{}{{G`{}{{B`{c}}}}}}0{{ABde}AIl{}{{G`{}{{B`{c}}}}}}0{{{f{Jj}}}Gn}{{{f{Mf}}}Eb}{{{f{Gn}}}Gn}{{{f{Df}}}{{f{Df}}}}{{{f{L`}}}{{f{Df}}}}{{{f{AIn}}}{{f{Df}}}}{{{f{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}}}{{An{{f{{Db{c}}}}}}}Od{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Dj}}{f{{l{c}}}}{f{{l{e}}}}g}DjBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{Ff}}{f{Ff}}}c{}}{{FfFf}c{}}1010{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Df{{A@l{Df}}}}{{{f{AJj}}{f{AJj}}c}{{Af{AJj}}}AJl}{{{f{AJn}}{f{Df}}}{{Af{Ad}}}}{{{f{I`}}{f{Df}}}{{Af{Ad}}}}{{{f{Dj}}{f{Df}}}{{Af{Ad}}}}{{{f{Ff}}{f{Df}}}{{Af{Ad}}}}{{{f{Mf}}{f{Df}}}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}}{{Af{Ad}}}}{{{f{AHn}}{f{Df}}}{{Af{Ad}}}}{{{f{Gn}}{f{Df}}}Gn}54321`{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIb}}}{}}0000{{{f{AIf}}{f{Ad}}}{{Af{Ad}}}}{{{f{AIh}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AK`{ce}}}}}{{AK`{ce}}}BnBn}{{{f{Jj}}}Jj}{{{f{AKb}}}AKb}{{{f{Gn}}}Gn}{{{f{AKd}}}AKd}{{{f{Df}}}Df}{{{f{L`}}}L`}{{{f{AKf}}}AKf}{{{f{AKh}}}AKh}{{{f{AKj}}}AKj}{{{f{Kf}}}Kf}{{{f{K`}}}K`}{{{f{AKl}}}AKl}{{{f{AKn}}}AKn}{{{f{Kn}}}Kn}{{{f{Kd}}}Kd}{{{f{Cl}}}Cl}{{{f{Cj}}}Cj}{{{f{AL`}}}AL`}{{{f{ALb}}}ALb}{{{f{Dd}}}Dd}{{{f{Cn}}}Cn}{{{f{ALd}}}ALd}{{{f{Al}}}Al}{{{f{ALf}}}ALf}{{{f{ALh}}}ALh}{{{f{ALj}}}ALj}{{{f{ALl}}}ALl}{{{f{ABd}}}ABd}{{{f{ALn}}}ALn}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{BhL`}}Df}b}{AM`e{}{{AIj{c}}AGl}}0{{AM`ABd}e{}{{AIl{c}}AGl}}0{{{f{Df}}}d}00{AMbDf}{{{f{L`}}}{{f{Df}}}}{{}Gn}{{}AKd}{{}Df}{{}ABd}{{{f{{AK`{ce}}}}}{{f{g}}}BnBn{}}{Fb{{f{c}}}{}}0000000000000000000000000000000000{Fb{{f{Bhc}}}{}}{{{f{Bh{AK`{ce}}}}}{{f{Bhg}}}BnBn{}}1111111111111111111111111111111111{{{f{I`}}{f{I`}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIb}}}{}}000000{Fbb}0000000000000000000000000000000000{{{f{AJn}}}{{f{Df}}}}{{{f{I`}}}{{f{Df}}}}{{{f{Jj}}}{{f{Df}}}}{{{f{Gn}}}Df}`{{{f{Gn}}{f{Gn}}}d}{{{f{AKd}}{f{AKd}}}d}{{{f{Df}}{f{Df}}}d}{{{f{Df}}{f{ABd}}}d}{{{f{L`}}{f{L`}}}d}{{{f{AKf}}{f{AKf}}}d}{{{f{ABd}}{f{ABd}}}d}{{{f{ALn}}{f{ALn}}}d}{{{f{Gn}}{f{Gn}}d}d}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Mf}}{f{Bf}}}Ff}{{{f{Mf}}{f{Mf}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}543210{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dj}}}{{Af{{Gh{Ad{ADn{In}}}}}}}}{{{f{{AK`{ce}}}}}L`BnBn}{{{f{Ff}}d}{{Af{Ff}}}}{{{f{Eb}}{f{{Db{D`}}}}}{{Af{Eb}}}}{{{f{Dj}}{f{Ff}}}{{Af{Dj}}}}{{{f{Ff}}{f{Ff}}}{{Af{{l{Al}}}}}}{{{f{Mf}}{f{Ff}}}{{Af{{l{Dd}}}}}}{{{f{Eb}}{f{Ff}}}{{Af{{l{Cn}}}}}}{{{f{AHn}}{f{Ff}}}{{Af{AHn}}}}{{{f{{ACb{c}}}}{f{Ff}}}{{Af{{l{{Hd{c}}}}}}}Hh}{{AJl{f{AMd}}{f{AMd}}}{{Af{AMd}}}}{{{f{Dj}}{f{BhFh}}}Fj}{{{f{Mf}}{f{BhFh}}}Fj}{{{f{Eb}}{f{BhFh}}}Fj}{{{f{{ACb{c}}}}{f{BhFh}}}FjHh}{{{f{AKb}}{f{BhFh}}}Fj}{{{f{Gn}}{f{BhFh}}}Fj}0{{{f{AKd}}{f{BhFh}}}Fj}{{{f{Df}}{f{BhFh}}}Fj}0{{{f{L`}}{f{BhFh}}}Fj}{{{f{AKf}}{f{BhFh}}}Fj}0{{{f{ABd}}{f{BhFh}}}{{Gb{bAMf}}}}{{{f{ALn}}{f{BhFh}}}{{Gb{bAMf}}}}{{{f{Dj}}c}b{{Ch{{An{Cf}}}}}}{cc{}}0000000{{{f{Bf}}}Gn}{{{f{{Db{D`}}}}}Gn}{dGn}{{{An{c}}}Gn{{AMh{Gn}}}}{cGnAMj}555{{{f{ABd}}}Df}{{{f{Gn}}}Df}{GnDf}{{{f{AMl}}}L`}9{{{f{Gn}}}L`}{{{f{ALn}}}AKf};;;;;;;;;;;;;;;;;;;;;{AMnABd}<{AN`ABd}={{{f{ABd}}d}Df}{cDj{{G`{}{{B`{{An{Ad}}}}}}}}{eDj{{ANb{Ad}}}{{G`{}{{B`{c}}}}}}{cDj{{G`{}{{B`{{An{{A@l{Fl}}}}}}}}}}{cFf{{G`{}{{B`{d}}}}}}{eMf{{Kb{Bf}}}{{G`{}{{B`{{An{c}}}}}}}}{eMf{{`{Bf}}}{{G`{}{{B`{c}}}}}}{eEb{{`{{Db{D`}}}}}{{G`{}{{B`{c}}}}}}{eEb{{Kb{{Db{D`}}}}}{{G`{}{{B`{{An{c}}}}}}}}{e{{ACb{c}}}Hh{{G`{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Mf{{Kb{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Eb{{Kb{{Db{D`}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{ACb{c}}}Hh{{Bd{}{{B`{{An{c}}}}}}}};<97865{eAHn{{`{{Db{D`}}}}}{{G`{}{{B`{c}}}}}}{eAHn{{Kb{{Db{D`}}}}}{{G`{}{{B`{{An{c}}}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Mf{{Kb{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Eb{{Kb{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{ACb{c}}}Hh{{Bd{}{{B`{c}}}}}}{{ANdDf}L`}{cDj{{Gj{}{{B`{{An{Ad}}}}}}}}{cFf{{Gj{}{{B`{{An{d}}}}}}}}{cFf{{Gj{}{{B`{d}}}}}}{eMf{{`{Bf}}IbIdANf}{{Gj{}{{B`{c}}}}}}{eMf{{Kb{Bf}}IbId}{{Gj{}{{B`{{An{c}}}}}}}}{eEb{{Kb{{Db{D`}}}}IbId}{{Gj{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}IbIdANf}{{Gj{}{{B`{c}}}}}}{{c{f{Bf}}Df}Dj{{Gj{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Db{d}}}}}Ff}{{{f{Bf}}{f{{Db{c}}}}}Mf{{Kb{Bf}}}}{{{f{Bf}}{f{{Db{c}}}}}Eb{{Kb{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{ACb{c}}}Hh}{{{f{Bf}}{f{{Db{{An{d}}}}}}}Ff}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Mf{{Kb{Bf}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Eb{{Kb{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}{{ACb{c}}}Hh}{cFf{{Gl{}{{B`{{An{d}}}}}}}}{{{El{c}}ABd}{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}Od{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{El{c}}ABd}{{AGl{}{{AJ`{e}}{AJb{c}}{AJd{g}}}}}{AJf{AJh{e}}}Od{{F`{}{{B`{e}}}}GlIbId}}{{FbcABd}{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}Od{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Bf}}{f{Ad}}Fb}Dj}{{{f{Bf}}dFb}Ff}{{{f{Bf}}{f{Bf}}Fb}Mf}{{{f{Bf}}{f{{Db{D`}}}}Fb}Eb}{{{f{Bf}}{f{{Db{D`}}}}Fb}AHn}{{{f{Bf}}cFb}{{ACb{c}}}Hh}{{FbABd}{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}Od{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Bf}}Fb}Dj}{{{f{Bf}}Fb}Ff}{{{f{Bf}}Fb}Mf}{{{f{Bf}}Fb}Eb}{{{f{Bf}}Fb}AHn}{{{f{Bf}}Fb}{{ACb{c}}}Hh}{{{f{Bf}}Fb{f{Df}}}Dj}{{{f{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}}Fb}{{An{c}}}Od{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{I`}}Fb}{{Af{Gn}}}}{{{f{AJn}}Fb}{{Af{Gn}}}}0{{{f{Dj}}Fb}{{Af{Gn}}}}{{{f{Ff}}Fb}{{Af{Gn}}}}{{{f{Mf}}Fb}{{Af{Gn}}}}{{{f{Eb}}Fb}{{Af{Gn}}}}{{{f{AHn}}Fb}{{Af{Gn}}}}{{{f{{ACb{c}}}}Fb}{{Af{Gn}}}Hh}{{{f{I`}}Fb}Gn}{{{f{AJn}}Fb}Gn}0{{{f{Dj}}Fb}Gn}{{{f{Ff}}Fb}Gn}{{{f{Mf}}Fb}Gn}{{{f{Eb}}Fb}Gn}{{{f{AHn}}Fb}Gn}{{{f{{ACb{c}}}}Fb}GnHh}{{{f{Dj}}Fb}{{An{Ad}}}}{{}Df}00000000000000000000000{{{f{Dj}}}Ad}{{{f{{ACb{c}}}}Fb}{{An{{f{Hf}}}}}Hh}0{{{f{Gn}}}{{An{{f{Bf}}}}}}{{{f{ANh}}Fb}Gn}{{{f{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}}Fb}{{An{c}}}Od{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Dj}}}Fb}{{{f{Mf}}}Fb}{{{f{AHn}}}Fb}{{{f{Dj}}dd}{{Af{Aj}}}}{{{f{Ff}}dd}{{Af{Aj}}}}{{{f{Mf}}dd}{{Af{Aj}}}}{{{f{Eb}}dd}{{Af{Aj}}}}{{{f{AHn}}dd}{{Af{Aj}}}}{{{f{{ACb{c}}}}dd}{{Af{Aj}}}Hh}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Mf}}{f{Mf}}}Ff}{{{f{Mf}}{f{Bf}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}543201{{{f{Gn}}{f{Bhc}}}bAEj}{{{f{AKd}}{f{Bhc}}}bAEj}{{{f{Df}}{f{Bhc}}}bAEj}{{{f{L`}}{f{Bhc}}}bAEj}{{{f{AKf}}{f{Bhc}}}bAEj}{{{f{ABd}}{f{Bhc}}}bAEj}{{{f{ALn}}{f{Bhc}}}bAEj}{{{f{Gn}}{f{Bhc}}d}bAEj}{{}Fb}0000000000000000000000000000000000{{{f{Dj}}}Df}{{{f{Df}}}{{An{{f{Df}}}}}}{{{f{ABd}}}{{An{{f{ABd}}}}}}{ce{}{}}0000000000000000000000000000000000{{ANj{An{Fb}}Fb}{{Af{I`}}}}{{ANj{An{Fb}}Fb}I`}{{{f{Dj}}}c{}}{{{f{Ff}}}c{}}{{{f{Mf}}}c{}}{{{f{Eb}}}c{}}{{{f{AHn}}}c{}}{{{f{{ACb{c}}}}}eHh{}}{I`Ad}{ANjAd}{{Jj{f{Bf}}}Ad}{Gn{{Af{Gn}}}}{{{f{Df}}}d}00{{{f{Gn}}}d}111010111110101011110111101{{{f{ABd}}}d}{{{f{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}}}{{ABn{cgABl}}}Od{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Dj}}}{{`{{Bd{}{{B`{In}}}}}}}}{{{f{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}}}{{An{c}}}Od{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Df}}}{{f{Df}}}}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Mf}}{f{Mf}}}Ff}{{{f{Mf}}{f{Bf}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}543210{{{f{AJj}}{f{AJj}}}{{Af{{Gh{AJjAJj}}}}}}{{DjDj}{{Af{{Gh{DjDj}}}}}}{{{f{Df}}{f{Df}}}{{Af{d}}}}{{{f{Ff}}}{{An{d}}}}{{{f{Ff}}}Jj}{{{f{Mf}}}Jj}{{{f{Eb}}}Jj}{{{f{Ff}}}{{An{Jl}}}}{{{f{AIf}}}{{An{Hj}}}}{{{f{AIh}}}{{An{Jl}}}}{{{f{AIf}}}Jj}{{{f{AIh}}}Jj}{{{f{Df}}{f{Df}}}{{Af{Df}}}}9876{{{f{Bf}}{f{{Db{D`}}}}FbFb}Ff}{{{f{I`}}{f{I`}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIb}}}{}}000000{{{f{Mf}}}{{Af{Fb}}}}{{{f{Eb}}}{{Af{Fb}}}}{{{f{L`}}}{{f{ANd}}}}`{{}c{}}00{{{f{Bf}}c}Mf{{Kb{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Mf{{Kb{{Db{{AId{Bf}}}}}}}}{{{f{Bf}}c}Mf{{Kb{{Db{{An{{AId{Bf}}}}}}}}}}{{{f{Bf}}c}Mf{{Kb{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{An{{AId{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{AId{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{ACb{c}}}Hh}{{{f{Bf}}e}{{ACb{c}}}Hh{{Kb{{Db{{An{c}}}}}}}}{{DfGn}Jj}{{{f{Bf}}Df}L`}{{{f{Bf}}}{{ACb{c}}}Hh}{{{f{Dj}}FbFb}Dj}{{{f{Ff}}FbFb}Ff}{{{f{Mf}}FbFb}Mf}{{{f{Eb}}FbFb}Eb}{{{f{AHn}}FbFb}AHn}{{{f{{ACb{c}}}}FbFb}{{ACb{c}}}Hh}{{{f{Bf}}{El{c}}}{{ACb{c}}}Hh}{{{f{Bf}}{El{c}}Gf}{{ACb{c}}}Hh}{Ffc{}}{{{f{Ff}}}c{}}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Mf}}{f{Mf}}}Ff}{{{f{Mf}}{f{Bf}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}542310{{{f{Dj}}}{{Af{{ADn{In}}}}}}{{{f{Dj}}}{{`{{Lb{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mf}}}{{`{{Lb{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDj}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mf}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Gn}}{f{Gn}}}{{An{ANl}}}}{{{f{AKf}}{f{AKf}}}{{An{ANl}}}}{{{f{I`}}}{{An{Fb}}}}{{{f{{AK`{ALfHn}}}}}{{An{Fb}}}}{{{f{AIf}}JlLf}{{Af{{An{Hj}}}}}}{{{f{AIh}}JlLf}{{Af{{An{Jl}}}}}}{{{f{AIf}}JlLf}{{Af{Jj}}}}{{{f{AIh}}JlLf}{{Af{Jj}}}}{{{f{Bf}}FbJl}{{Af{Ff}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIb}}}{}}000000{{{f{Dj}}}Dj}{{{f{Ff}}}Ff}{{{f{Mf}}}Mf}{{{f{Eb}}}Eb}{{{f{AHn}}}AHn}{{{f{{ACb{c}}}}}{{ACb{c}}}Hh}`{{{f{I`}}}Fb}{{{f{{AK`{ALfHn}}}}}Fb}{{{f{Ff}}c{An{d}}}{{Af{Ff}}}{{G`{}{{B`{H`}}}}}}{{{f{Mf}}c{An{{f{Bf}}}}}{{Af{Mf}}}{{G`{}{{B`{H`}}}}}}{{{f{Eb}}c{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}{{G`{}{{B`{H`}}}}}}{{{f{Ff}}ce}{{Af{Ff}}}{{G`{}{{B`{H`}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Mf}}ce}{{Af{Mf}}}{{G`{}{{B`{H`}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{Dh}}}}}}}}{{{f{Eb}}ce}{{Af{Eb}}}{{G`{}{{B`{H`}}}}}{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{El{D`}}}}}}}}}}{{{f{Ff}}{f{Ff}}{An{d}}}{{Af{Ff}}}}{{{f{Mf}}{f{Ff}}{An{{f{Bf}}}}}{{Af{Mf}}}}{{{f{Eb}}{f{Ff}}{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}}{{{f{BhDj}}}b}{{{f{BhDj}}Df}b}{{{f{BhL`}}ANd}b}{{{f{Dj}}In}Dj}{{{f{Ff}}In}Ff}{{{f{Mf}}In}Mf}{{{f{Eb}}In}Eb}{{{f{AHn}}In}AHn}{{{f{{ACb{c}}}}In}{{ACb{c}}}Hh}{{{f{Dj}}In{An{{f{Ad}}}}}Dj}{{{f{Ff}}In{An{d}}}Ff}{{{f{Mf}}In{An{{f{Bf}}}}}Mf}{{{f{Eb}}In{An{{f{{Db{D`}}}}}}}Eb}{{{f{AHn}}In{An{{f{{Db{D`}}}}}}}AHn}{{{f{{ACb{c}}}}In{An{{Hd{c}}}}}{{l{{Hd{c}}}}}Hh}{{{f{Ff}}d}Ff}{{{f{Mf}}d}Mf}{{{f{Eb}}d}{{l{Cn}}}}{{{f{AHn}}d}AHn}{{{f{Ff}}Dl}{{l{Al}}}}{{{f{Mf}}Dl}{{l{Dd}}}}{{{f{Eb}}Dl}{{l{Cn}}}}{{{f{AHn}}Dl}AHn}{{{f{AIf}}D`}Jj}{{{f{AIh}}D`}Jj}{{{f{Gn}}{f{Df}}}{{An{Gn}}}}`{{{f{I`}}{f{I`}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIb}}}{}}000000{{{f{Ff}}}{{An{H`}}}}{{{f{Ff}}}Jj}{{{f{Eb}}}Jj}{{{f{Mf}}{f{c}}}Mf{{Kb{{Db{H`}}}}Lj}}{{{f{Mf}}{f{Dn}}}Mf}{{{f{Eb}}{f{c}}}Eb{{Kb{{Db{H`}}}}Lj}}{{{f{Eb}}{f{Dn}}}Eb}{{{f{Df}}d}ABd}{{{f{L`}}d}AMl}{AKfALn}{{{f{Df}}{f{Bf}}d}AMl}{AKf{{f{Bf}}}}{{{f{Mf}}Fb}{{Af{Ad}}}}{{{f{BhDj}}Df}b}{{{f{ABd}}}{{f{ABd}}}}{{{f{Dj}}}{{Af{Mb}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Df}}}Df}{{{f{ABd}}}ANn}{{{f{c}}}Dh{}}00{{{f{Eb}}}Mf}{{{f{Gn}}{f{Gn}}}d}{{{f{Dj}}c}{{Af{Dj}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dj}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gb{AIje}}}{}{}{{G`{}{{B`{{Gb{ce}}}}}}}}0{{ABdg}{{Gb{AIle}}}{}{}{{G`{}{{B`{{Gb{ce}}}}}}}}0{AM`{{Gb{eg}}}{}{{AIj{c}}AGl}{}}0{{AM`ABd}{{Gb{eg}}}{}{{AIl{c}}AGl}{}}0{{{f{Gn}}}{{Af{c}}}Jh}{c{{Gb{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Gn}}{f{Df}}}{{Af{Gn}}}}{{{f{Df}}d}{{Af{ABd}}}}{{{f{Dj}}{f{{l{c}}}}e}{{Af{Dj}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Mj{}}0000000000000000000000000000000000{{{f{ABd}}}ABd}{{{f{Ff}}}{{Af{Ff}}}}{{{f{Mf}}}{{Af{Mf}}}}{{{f{Eb}}}{{Af{Eb}}}}{{{f{{ACb{c}}}}}{{Af{{l{{Hd{c}}}}}}}Hh}{{{f{BhJj}}Gn}b}{{{f{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}}Fb}cOd{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Jj}}}{{f{Gn}}}}1{{{f{Df}}Gn}d}{{{f{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}}}gOd{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{AIf}}D`}Jj}{{{f{AIh}}D`}Jj}{{{f{Ff}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AO`}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AOb}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AMd}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AOd}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AOf}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AOh}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AOj}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AOl}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{ANj}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AIf}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AIh}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{Mf}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{Eb}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AHn}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{{ACb{c}}}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}Hh}{{{f{Ff}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AO`}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AOb}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AMd}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AOd}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AOf}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AOh}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AOj}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AOl}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{ANj}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AIf}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AIh}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{Mf}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{Eb}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AHn}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{{ACb{c}}}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}Hh}{ce{}{}}0000000000000000000000000000000000{Fbc{}}0{Fb{{AOn{ce}}}{}{}}{{{f{{Db{Ml}}}}e}c{}{{Mn{{f{Dn}}}{{C`{c}}}}}}{{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}{An{Gf}}}{{AGl{}{{AJ`{c}}{AJb{e}}{AJd{g}}}}}Od{AJf{AJh{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Df}}}Gn}{{{f{Dj}}{f{{l{c}}}}e}DjBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AJj}}}d}{{AJjd}AJj}{{{f{BhB@`}}{An{{f{Bf}}}}}b}{{{f{BhAJj}}{f{AJj}}}{{Af{b}}}}{{{f{BhB@`}}}b}{{{f{BhB@`}}{f{Bf}}}b}{{{f{AJj}}Dl}Dn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{AJj}}{f{AJj}}c}{{Af{AJj}}}AJl}{{{f{AJj}}{f{Df}}}{{Af{Ad}}}}{{{f{AJj}}}AJj}{{{f{c}}{f{Bhe}}}b{}{}}{{}B@b}{Fb{{f{c}}}{}}000{Fb{{f{Bhc}}}{}}000{{B@`c}AJj{{G`{}{{B`{{An{{f{Bf}}}}}}}}}}{Fbb}000{{{f{AJj}}}{{f{Df}}}}{{{f{AJj}}{f{AJj}}}c{}}{{{f{AJj}}{f{Bf}}}c{}}{{{f{AJj}}{f{Mf}}}c{}}102{{AJl{f{AMd}}{f{AMd}}}{{Af{AMd}}}}{B@`AJj}{B@b{{Jn{B@d}}}}{cc{}}000{{AMd{Jn{B@d}}dB@f}AJj}{{AMdB@f}AJj}{{{f{Mf}}{f{AMb}}B@f}{{Af{AJj}}}}{{{f{Bf}}dFbB@f}AJj}{{{f{AJj}}Fb}{{Af{Gn}}}}{{{f{AJj}}Fb}Gn}{{{f{AJj}}}{{f{{Jn{B@d}}}}}}<;=<=;{{}Fb}000{ce{}{}}0000{AJjAd}{{{f{AJj}}}d}0{{{f{AJj}}}B@h}{{{f{AJj}}}Fb}{{{f{AJj}}{f{AJj}}}c{}}{{{f{AJj}}{f{Mf}}}c{}}{{{f{AJj}}{f{Bf}}}c{}}201{{{f{AJj}}{f{AJj}}}{{Af{{Gh{AJjAJj}}}}}}{{DjDj}{{Af{{Gh{DjDj}}}}}}{{{f{AJj}}}Jj}{{{f{BhB@b}}{f{{Jn{B@d}}}}}{{Af{b}}}}1{{{f{AJj}}}{{Af{Fb}}}}{{{f{AJj}}}{{f{Bf}}}}{{{f{Bf}}FbB@f}B@`}{{{Jn{B@d}}}B@b}{{{f{BhB@h}}}{{An{c}}}{}};:9;9:<{{{f{AJj}}}{{f{AMd}}}}{{{f{BhB@`}}{f{Bf}}}{{Gh{Khd}}}}`{{{f{B@h}}}{{Gh{Fb{An{Fb}}}}}}{{{f{AJj}}d}AJj}{{{f{AJj}}Dl}AJj}`{{{f{AJj}}dd}Ej}{{{f{AJj}}{f{AMb}}B@j}AJj}{{{f{AJj}}}{{Af{AJj}}}}{{{f{AJj}}}AJj}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0000000{{{f{c}}}Mj{}}0004{{{f{AJj}}}d}{{{f{AJj}}}{{Af{B@l}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AMbB@d}{{{f{B@f}}}B@f}{{{f{B@d}}}B@d}{{{f{c}}{f{Bhe}}}b{}{}}0{{}B@f}{{}B@d}{Fb{{f{c}}}{}}0{Fb{{f{Bhc}}}{}}0{Fbb}0{{{f{B@f}}{f{B@f}}}d}{{{f{B@d}}{f{Bf}}}{{An{Kh}}}}{{{f{B@f}}{f{BhFh}}}Fj}{{{f{B@d}}{f{BhFh}}}Fj}{cc{}}0{{{f{B@d}}Kh}{{f{Bf}}}}{{{f{B@d}}}{{f{AMb}}}}{{{f{B@d}}Kh}{{An{{f{Bf}}}}}}{{}Fb}0{ce{}{}}0{{{f{B@d}}}d}0{{{f{B@d}}}Fb}{{{f{B@d}}{f{B@d}}}d}{{{f{c}}}e{}{}}0{c{{Gb{e}}}{}{}}000{{{f{c}}}Mj{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}B@n}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{{}b}{Fbb}{{{f{BhB@n}}}b}2{cc{}}6{{}Fb}{ce{}{}}<<;{{}d}1```````660````````````````````{{{f{BA`}}}{{f{Bf}}}}<<;;`99{{{f{BA`}}}f}9977`{{{f{BAb}}{f{BhFh}}}{{Gb{bAMf}}}}{{{f{BA`}}{f{BhFh}}}{{Gb{bAMf}}}}077{cBA`{{AMh{{AId{Bf}}}}}}{{}{{Jb{{f{Bf}}BAb}{{C`{b}}}}}}8877{cAIbAH`}````{{{Jb{{f{Bf}}BAb}{{C`{b}}}}}b}{cAIbBAd}{{{f{c}}}Dh{}}{c{{Gb{e}}}{}{}}000{{{f{c}}}Mj{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BAf}}}BAf}{{{f{c}}{f{Bhe}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{BhFh}}BAhFb}Fj}{cc{}}{{}BAj}{{}BAf}{{}{{An{Fb}}}}{{}Dh}{{}d}{{}Fb}{ce{}{}}{{{An{BAj}}}b}{BAfb}{{{An{Fb}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}7```````````{{{f{c}}h}b{}}00{{{f{BhB@l}}{El{Ad}}{f{BAl}}}{{Af{b}}}}{{{f{B@l}}{f{Cb}}}{{El{Ad}}}}0{{{f{B@l}}{f{Ff}}}{{Af{B@l}}}}{{{f{B@l}}{f{{Db{ANd}}}}}{{Af{B@l}}}}0{{{f{B@l}}InFb}B@l}{{{f{B@l}}{f{Ad}}}c{}}{{B@l{f{Ad}}}c{}}{{{f{B@l}}{f{B@l}}}c{}}{{{f{BhB@l}}}{{f{BhB@l}}}}{{{f{BhB@l}}{f{Bf}}e}{{Af{{f{BhB@l}}}}}BAn{{Mn{{f{Ad}}}{{C`{c}}}}}}{{{f{BhB@l}}Fbe}{{Af{{f{BhB@l}}}}}BAn{{Mn{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{B@l}}}B@l}{{{f{BB`}}}BB`}{{{f{BBb}}}BBb}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{B@l}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{B@l}}e}{{Af{{El{{f{Ad}}}}}}}{{Kb{Bf}}}{{G`{}{{B`{c}}}}}}{{}BBb}{{}B@l}{Fb{{f{c}}}{}}0000{Fb{{f{Bhc}}}{}}0000?{{{f{B@l}}{f{Ad}}}c{}}{{B@l{f{Ad}}}c{}}{Fbb}000{{{f{B@l}}{f{Bf}}}{{Af{B@l}}}}1{{{f{BhB@l}}{f{Bf}}}{{Af{Ad}}}}{{{f{B@l}}{f{{Db{c}}}}}B@l{{Kb{Bf}}}}{{{f{B@l}}{f{{BBd{{f{Bf}}}}}}}B@l}{{{f{B@l}}{An{{f{{Db{c}}}}}}}{{Af{B@l}}}{{Kb{Bf}}}}{{{f{B@l}}}{{El{Df}}}};{{{f{BBb}}{f{BBb}}}d}{{{f{B@l}}{f{B@l}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@l}}}Fb}`{{{f{B@l}}e}{{Af{B@l}}}{{Kb{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{B@l}}{El{Ad}}}{{Af{B@l}}}}{{{f{BhB@l}}{f{B@l}}}{{Af{b}}}}{{{f{B@l}}}{{El{L`}}}}{{{f{B@l}}ADh}{{Af{B@l}}}}{{{f{B@l}}{f{Ff}}}{{Af{B@l}}}}{{{f{BB`}}{f{BhFh}}}Fj}{{{f{BBb}}{f{BhFh}}}Fj}{{{f{B@l}}{f{BhFh}}}Fj}0{cc{}}000{{{f{BBf}}}B@l}{{{f{BAl}}}B@l}2{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{cB@l{{G`{}{{B`{Ad}}}}}}{{{f{{Db{BBh}}}}}{{Af{B@l}}}}{{{f{{Db{BBh}}}}{f{BAl}}}{{Af{B@l}}}}{{c{f{BAl}}}{{Af{B@l}}}{{Bd{}{{B`{{f{BBh}}}}}}}}{{{f{B@l}}Fb}{{An{{El{Gn}}}}}}{{{f{B@l}}{f{Bf}}}{{An{Fb}}}}{{{f{B@l}}}{{El{{f{Bf}}}}}}{{{f{B@l}}}{{El{ANd}}}}{{{f{B@l}}}{{f{{Db{Ad}}}}}}{{{f{BhB@l}}}{{f{Bh{El{Ad}}}}}}{{{f{B@l}}Fb}{{Af{BBh}}}}{{{f{B@l}}Fb{f{BhBBh}}}{{Af{b}}}}{{{f{B@l}}Fb{f{BhBBh}}}b}{{{f{B@l}}}{{An{{Af{Df}}}}}}`{{{f{B@l}}e}{{Af{BBj}}}{{Kb{Bf}}}{{G`{}{{B`{c}}}}}}0{{{f{B@l}}{El{Ad}}dd}{{Af{BBj}}}}{{{f{BBb}}{f{Bhc}}}bAEj}{{{f{BhB@l}}{An{Ln}}}{{Af{AOd}}}}{{{f{B@l}}{An{Fb}}}B@l}{{{f{B@l}}}Fb}{{{f{B@l}}{f{{Db{Ad}}}}}{{Af{B@l}}}}{{{f{BhB@l}}{f{{Db{Ad}}}}}{{Af{{f{BhB@l}}}}}}{{{f{BhB@l}}{f{{Db{Ad}}}}}{{f{BhB@l}}}}{{{f{B@l}}Fb}{{f{c}}}{}}{{{f{B@l}}{Kl{Fb}}}{{f{c}}}{}}{{{f{B@l}}BBl}{{f{c}}}{}}{{{f{B@l}}{BBn{Fb}}}{{f{c}}}{}}{{{f{B@l}}{BC`{Fb}}}{{f{c}}}{}}{{{f{B@l}}{BCb{Fb}}}{{f{c}}}{}}{{{f{B@l}}{BCd{Fb}}}{{f{c}}}{}}{{{f{B@l}}{f{Bf}}}{{f{c}}}{}}{{}Fb}0000{{{f{BhB@l}}Fbc}{{Af{{f{BhB@l}}}}}BAn}{ce{}{}}000000{{{f{B@l}}}{{Af{Ff}}}}{{{f{B@l}}}d}1{{{f{B@l}}}{{J`{Ad}}}}{{{f{B@l}}d}BCf}{{{f{B@l}}}BCh}{{{f{B@l}}}{{Af{{An{Ad}}}}}}{{{f{B@l}}BB`}{{Af{{An{Ad}}}}}}{{{f{B@l}}ce}{{Af{B@l}}}{{BCj{ANd}}}{{BCj{ANd}}}}{{{f{B@l}}BCl}{{Af{B@l}}}}3{{{f{B@l}}{f{Ad}}}c{}}{{B@l{f{Ad}}}c{}}{{{f{B@l}}{f{B@l}}}c{}}{{{f{B@l}}}Fb}{{{El{c}}}{{Af{B@l}}}BAn}{{{El{Ad}}}B@l}{{{El{Ad}}}{{Af{B@l}}}}{{{f{BhBCf}}}{{An{c}}}{}}{{{f{BhBCh}}}{{An{c}}}{}}{{{f{B@l}}}B@l}{{{f{B@l}}cd}{{Af{{El{B@l}}}}}{{BCj{Dh}}}}0{{B@le}{{Af{c}}}{}{{Cb{B@l}{{C`{{Af{c}}}}}}}}{{{f{BhB@l}}e}{{Af{c}}}{}{{Cb{{f{BhB@l}}}{{C`{{Af{c}}}}}}}}{{B@lgc}{{Af{e}}}{}{}{{Cb{B@lc}{{C`{{Af{e}}}}}}}}{{{f{BhB@l}}}{{An{Ad}}}}{{{f{B@l}}{f{B@l}}}d}=?>{{{f{BhB@l}}{f{Bf}}{f{Bf}}}{{Af{{f{BhB@l}}}}}}{{{f{BhB@l}}{f{Bf}}c}{{Af{{f{BhB@l}}}}}BAn}{{{f{BhB@l}}Fbc}{{Af{{f{BhB@l}}}}}BAn}19`{{{f{B@l}}{f{Ad}}dd{An{Hl}}}{{Af{B@l}}}}0{{{f{B@l}}Fbdd{An{Hl}}}{{Af{B@l}}}}{{{f{B@l}}}BAl}{{{f{B@l}}{f{B@l}}}{{Af{b}}}}{{{f{B@l}}e}{{Af{B@l}}}{{Kb{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{B@l}}Fb}{{An{{f{Ad}}}}}}{{{f{B@l}}c}{{Af{B@l}}}{{BCn{Fb}}}}2{{{f{B@l}}c}{{Af{{El{Ad}}}}}{{BCj{ANd}}}}{{{f{B@l}}e{f{BD`}}}{{Af{B@l}}}{{Kb{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{B@l}}e{f{BAl}}}{{Af{B@l}}}{{Kb{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{BhB@l}}{f{{Db{c}}}}}{{Af{b}}}{{Kb{Bf}}}}{{{f{B@l}}}{{Gh{FbFb}}}}{{{f{B@l}}In}B@l}{{{f{B@l}}}d}{{{f{BhB@l}}}b}{{{f{BCf}}}{{Gh{Fb{An{Fb}}}}}}{{{f{BCh}}}{{Gh{Fb{An{Fb}}}}}}{{{f{B@l}}InFb}B@l}0{{{f{B@l}}cE`}{{Af{B@l}}}{{BCj{ANd}}}}{{{f{BhB@l}}cE`}{{Af{{f{BhB@l}}}}}{{BCj{ANd}}}}{{{f{BhB@l}}}{{`{{Bd{}{{B`{B@l}}}}}}}}{{B@lFbd}{{El{B@l}}}}{{B@l{f{Ad}}}c{}}{{{f{B@l}}{f{B@l}}}c{}}{{{f{B@l}}{f{Ad}}}c{}}{{{f{B@l}}BB`}{{Af{{An{Ad}}}}}}{{{f{B@l}}{An{Fb}}}B@l}{{{f{B@l}}{f{Dn}}}{{Af{B@l}}}}{{{f{B@l}}{f{Dn}}}B@l}{{{f{B@l}}{f{Dn}}d}B@l}{{{f{B@l}}BDb}{{Af{Mb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dh{}}{{{f{B@l}}FbcE`}{{Af{B@l}}}{{BCj{ANd}}}}{{{f{BhB@l}}{An{{f{Bf}}}}{An{{Mh{Dh{El{Dh}}}}}}}{{Af{B@l}}}}{{{f{BhB@l}}{f{Bf}}e}{{Af{{f{BhB@l}}}}}BAn{{Mn{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhB@l}}Fbe}{{Af{{f{BhB@l}}}}}BAn{{Mn{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gb{e}}}{}{}}000{BDd{{Af{B@l}}}}{{{Gh{BDf{f{{Db{AMl}}}}}}}{{Af{B@l}}}}2{{c{f{BAl}}}{{Af{B@l}}}{{Bd{}{{B`{{Af{{f{BBh}}}}}}}}}}{{{f{B@l}}{f{Bf}}}{{Af{Fb}}}}44444{{{f{c}}}Mj{}}0000{{{f{B@l}}{An{{f{{Db{Dh}}}}}}BBb{An{{Gh{InFb}}}}}{{Af{B@l}}}}{{{f{B@l}}d{An{{f{{Db{Dh}}}}}}BBb{An{{Gh{InFb}}}}}{{Af{B@l}}}}1{{{f{B@l}}{f{B@l}}}{{Af{B@l}}}}{{{f{BhB@l}}{f{B@l}}}{{Af{{f{BhB@l}}}}}}{ce{}{}}0000{{{f{B@l}}}Fb}{{{f{BhB@l}}c}{{Af{{f{BhB@l}}}}}BAn}{{{f{BhB@l}}c{f{BAl}}}{{Af{{f{BhB@l}}}}}BAn}{{{f{BhB@l}}Ad}{{f{BhB@l}}}}{{{f{B@l}}{f{Bf}}{An{H`}}}{{Af{B@l}}}}{{{f{BhB@l}}{f{Bf}}{An{H`}}}{{f{BhB@l}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCl}}}BCl}{{{f{c}}{f{Bhe}}}b{}{}}{{}BCl}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{BCl}}{f{BCl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCl}}{f{BhFh}}}Fj}{cc{}}{{{f{BCl}}{f{Bhc}}}bAEj}`{{}Fb}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBj}}}{{Af{B@l}}}}`{{{f{BDh}}}{{f{{Db{BDj}}}}}}{{{f{BBj}}c}{{Af{B@l}}}{{Ch{B@l}{{C`{{Af{B@l}}}}}}IbId}}{{{f{Aj}}}Dj}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BDh}}}BDh}{{{f{Aj}}}Aj}{{{f{BBj}}}BBj}{{{f{BDl}}}BDl}{{{f{c}}{f{Bhe}}}b{}{}}000:{{}BDh}{{}Aj}{Fb{{f{c}}}{}}00{{{f{BDn}}}{{f{c}}}{}}11111{Fb{{f{Bhc}}}{}}0000000`{{BE`e}{}{}{{BEb{c}}}}{Fbb}0000{{{f{BhBDh}}}b}111{{{f{BDh}}{f{BDh}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BEd}}}H`}{{{f{BDh}}}{{f{{Db{H`}}}}}}{{{f{BBj}}}{{Af{B@l}}}}{{{f{BhBDh}}}{{f{Bh{El{H`}}}}}}{{{f{BDh}}{f{BhFh}}}Fj}{{{f{Aj}}{f{BhFh}}}Fj}{{{f{BBj}}{f{BhFh}}}Fj}{{{f{BDl}}{f{BhFh}}}Fj}0{{{f{Bf}}BDl}Dh}{cc{}}000{{{El{{El{BEf}}}}}BDh}{{{El{BEf}}}BDh}{{{El{{Gh{{El{H`}}{El{BDj}}}}}}}BDh}33{BDhAj}44{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{cBDh{{G`{}{{B`{BEf}}}}}}{cBDh{{Gj{}{{B`{BEf}}}}}}{{{f{Aj}}Fb}BEd}{{{f{BBj}}}{{f{Aj}}}}{{{f{BhBBj}}}{{f{BhAj}}}}{{{f{Aj}}}Dn}{{{f{BEh}}dd}{{Af{Aj}}}}0{{{f{BBj}}}{{Af{B@l}}}}{{{f{BhAj}}}{{f{BhBDh}}}}{{}Fb}0000000{ce{}{}}0000000{AjBDh}1{{{f{BDh}}}c{}}{BDhc{}}310{{{f{BEd}}}d}{{{f{Aj}}}d}{{{f{BDh}}}d}{{{f{BDh}}}{{BEl{{BEj{{J`{H`}}}}{J`{BDj}}}}}}{{{f{Aj}}}BEn}{{{f{BBj}}}{{El{Ad}}}}{{{f{BBj}}{An{{Gh{InFb}}}}}{{El{Ad}}}}={{{f{BEd}}}Fb}{{{f{Aj}}}Fb}?????{{{El{H`}}{El{BDj}}d}BDh}{{{f{B@l}}{El{Ad}}Aj{An{{El{Dh}}}}}BBj}{{{f{BhBEn}}}{{An{c}}}{}}{{{f{BhBEn}}Fb}{{An{c}}}{}}{{{f{BBj}}c}{{Af{B@l}}}{{Cb{B@l}{{C`{{Af{B@l}}}}}}IbId}}{{{f{c}}}{}{}}{{{f{Aj}}}BE`}{{{f{BBj}}JlLf}{{Af{B@l}}}}{{BBje}BBj{{Kb{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{Aj}}InFb}BDn}{{{f{BhBDh}}}b}{{{f{BhAj}}}b}{{{f{BBj}}D`}{{Af{B@l}}}}{{{f{BBj}}}{{Af{B@l}}}}{Aj{{El{H`}}}}0{BBjAj}{{{f{BhBBj}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dh{}}{c{{Gb{e}}}{}{}}000000000000000{{{f{c}}}Mj{}}0000000{AjAj}{{{f{Aj}}}{{f{BDh}}}}{{{f{Aj}}}{{f{BF`}}}};{ce{}{}}0000000`````{{{f{BDh}}c}Ad{{Cb{{Gh{H`{f{BDj}}}}}{{C`{An}}}}IbId}}{{{f{BDh}}c}Ad{{Cb{{Gh{H`{f{BDj}}}}}{{C`{}}}}IbId}}{{{f{{Db{{BFb{H`}}}}}}c}Ad{{Cb{{BFb{H`}}}{{C`{An}}}}IbId}}{{{f{{Db{{BFb{H`}}}}}}c}Ad{{Cb{{BFb{H`}}}{{C`{}}}}IbId}}{{{f{{Db{c}}}}eBFd}{{AHd{c}}}{BFfBFh}{{Bd{}{{B`{{Gh{H`H`}}}}}}Gl}}{{{f{{Db{c}}}}{f{Gf}}eBFd}{{AHd{c}}}{BFfBFh}{{Bd{}{{B`{{Gh{H`H`}}}}}}Gl}}{{{f{{l{c}}}}H`H`}{{l{c}}}Bn}{{{f{BF`}}{f{{Db{Ej}}}}}d}{{{f{BFj}}{f{Aj}}}Ad}{{BFlBFl}BFl}0`{{{f{BFn}}{f{B@l}}{f{Aj}}}{{Af{Ad}}}}{{{f{BFn}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBG`}}Gn}{{An{b}}}}{{{f{BhBGb}}{f{Gn}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BG`}}}BG`}{{{f{BGb}}}BGb}{{{f{BBh}}}BBh}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{{Db{c}}}}}Df{{ANb{Df}}}}{{}BBh}{Fb{{f{c}}}{}}00{Fb{{f{Bhc}}}{}}00{Fbb}00{{{f{BBh}}{f{BBh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBh}}{f{BhFh}}}Fj}{cc{}}{{{Gh{{f{Df}}Fb}}}BG`}1{{{Gh{{f{Df}}Fb}}}BGb}2{{eFb}BAl{{AMh{Df}}}{{Bd{}{{B`{{El{{Gh{Dhc}}}}}}}}}}{{}Fb}00{ce{}{}}00{BG`Ad}{BGbAd}{{{f{Df}}Fb}BG`}{{{f{Df}}Fb}BGb}{{{El{Gn}}}BBh}{{{f{BhBG`}}Fb}Ad}{{{f{BhBGb}}Fb}Ad}{{{f{{Db{BBh}}}}{An{Fb}}}{{Af{BAl}}}}0{{{f{{Db{BBh}}}}{An{Fb}}}{{Af{{El{Df}}}}}}{{{f{c}}}e{}{}}00{c{{Gb{e}}}{}{}}00000{{{f{c}}}Mj{}}00<<<{{{f{{Db{B@l}}}}}{{Af{B@l}}}}0`````{{HlHl}Hl}{{{f{{Db{B@l}}}}{An{Ln}}}{{Af{{Gh{{El{AOd}}Ln}}}}}}{{{f{{BGd{In}}}}Ln{f{Bh{El{Hl}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BGf}{Fb{{f{c}}}{}}0{Fb{{f{Bhc}}}{}}0{Fbb}0{{{f{BGf}}}Hl}{{{f{BGh}}{f{BhFh}}}Fj}{cc{}}0{{{f{BGh}}{f{Bhc}}}bAEj}``{{}Fb}0{ce{}{}}0{{{f{Bh{BGj{BGhce}}}}H`Hl{f{B@l}}gi}b{}BGl{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gb{e}}}{}{}}000{{{f{c}}}Mj{}}0{{{f{BGn}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}0{{{f{BGn}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}055{{{f{BhBGf}}{f{{Db{D`}}}}}b}{{{f{BhBGf}}Kj}b}{{{f{BhBGf}}In}b}{{{f{BhBGf}}Kh}b}{{{f{BhBGf}}Hl}b}`````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{Jn{ce}}}}}{{f{e}}}{}BH`}{{{f{{Jn{c}}}}}BHb{BHdLj}}{{{f{{Jn{ce}}}}}{}LjBH`}{{{f{{Jn{c}}}}}KjBHf}{{{f{{Jn{ce}}}}}{{f{c}}}LjBH`}{{{Jn{{Db{{BHh{c}}}}e}}}{{Jn{{Db{c}}e}}}{}BH`}{{{Jn{{BHh{c}}e}}}{{Jn{ce}}}{}BH`}{{{f{c}}}{{f{e}}}{}{}}0030000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{AJj}}{f{AJj}}c}{{Af{AJj}}}AJl}{{{f{{Jn{c}}}}}{{An{{f{AH`}}}}}{AH`Lj}}`{{{f{BHj}}{f{Ad}}}{{Af{Ad}}}}{{{f{BHj}}c}{{Af{Ad}}}Ab}{{{f{Ml}}}Ml}{{{f{BHl}}}BHl}{{{f{{Jn{ce}}}}}{{Jn{ce}}}Lj{BH`Od}}{{{f{Lh}}}Lh}{{{f{BDb}}}BDb}{{{f{AMl}}}AMl}{{{f{BBf}}}BBf}{{{f{Lf}}}Lf}{{{f{BHn}}}BHn}{{{f{BI`}}}BI`}{{{f{BIb}}}BIb}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}ANl{BIdLj}BH`}{AM`e{}{{AIj{c}}AGl}}0{{AM`ABd}e{}{{AIl{c}}AGl}}0{{{f{c}}{f{e}}}ANl{}{}}{{AIbBA`}AIb}{AIbAIb}{{{f{Fl}}{f{ABd}}}{{A@l{Fl}}}}{{{f{AMl}}}{{f{ABd}}}}```{{}b}{cbBH`}{{}{{Jn{c}}}BIf}{{}Lh}{{}BDb}{{}AMl}{{}BBf}{{}Lf}`{Fb{{f{c}}}{}}00{{{f{{Jn{ce}}}}}{{f{c}}}LjBH`}1111111111{Fb{{f{Bhc}}}{}}000000000000{{{f{{Jn{c}}}}}{{f{Bf}}}{AH`Lj}}`{{{Jn{ABfc}}}{{Gb{{Jn{ec}}{Jn{ABfc}}}}}BH`{ABfIbId}}{{{Jn{ABfc}}}{{Jn{ec}}}BH`{ABfIbId}}{{{f{{Jn{ce}}}}}{{BIh{ce}}}Lj{OdBH`}}{Fbb}00{{{f{Bh{Jn{ce}}}}}bLjBH`}1111111111{{{f{Ml}}{f{Ml}}}d}{{{f{{Jn{BIj}}}}{f{BIj}}}d}{{{f{{Jn{Fl}}}}{f{Fl}}}d}{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}d{BIlLj}BH`}{{{f{Lh}}{f{Lh}}}d}{{{f{BDb}}{f{BDb}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{BBf}}{f{BBf}}}d}{{{f{Lf}}{f{Lf}}}d}{{{f{BIb}}{f{BIb}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BHl{{Gh{KhKh}}}}`{{BBfc}BBf{{Cb{Fb{f{AMl}}}{{C`{d}}}}}}{{AJl{f{AMd}}{f{AMd}}}{{Af{AMd}}}}{{{f{Bh{Jn{BIn}}}}}{{Gb{bBJ`}}}}{{{f{AIb}}{f{BhFh}}}{{Gb{bAMf}}}}0{{{f{Ml}}{f{BhFh}}}{{Gb{bAMf}}}}{{{f{BHl}}{f{BhFh}}}{{Gb{bAMf}}}}{{{f{{Jn{ce}}}}{f{BhFh}}}{{Gb{bAMf}}}{BAdLj}BH`}{{{f{{Jn{ce}}}}{f{BhFh}}}{{Gb{bAMf}}}LjBH`}{{{f{{Jn{ce}}}}{f{BhFh}}}{{Gb{bAMf}}}{ABhLj}BH`}{{{f{Lh}}{f{BhFh}}}Fj}{{{f{BDb}}{f{BhFh}}}Fj}{{{f{AMl}}{f{BhFh}}}{{Gb{bAMf}}}}{{{f{BBf}}{f{BhFh}}}{{Gb{bAMf}}}}{{{f{Lf}}{f{BhFh}}}{{Gb{bAMf}}}}{{{f{BHn}}{f{BhFh}}}{{Gb{bAMf}}}}{{{f{BI`}}{f{BhFh}}}{{Gb{bAMf}}}}{{{f{BIb}}{f{BhFh}}}{{Gb{bAMf}}}}`{BJ`AIb}{BJbAIb}{BJdAIb}{cc{}}{BJfAIb}{KhMl}22{{{f{BJh}}}{{Jn{BJh}}}}{{{f{BJj}}}{{Jn{BJj}}}}{c{{Jn{c}}}{}}{Dh{{Jn{Bf}}}}{BJlc{}}{BJn{{Jn{BJj}}}}{{{El{ce}}}{{Jn{{Db{c}}e}}}{}{BH`Od}}{{{f{Bf}}}{{Jn{Bf}}}}{{{Jn{Bf}}}{{Jn{{Db{D`}}}}}}{{{A@l{ce}}}{{Jn{ce}}}LjBH`}{BK`{{Jn{BJh}}}}{{{f{BKb}}}{{Jn{BKb}}}}{{{f{{Db{c}}}}}{{Jn{{Db{c}}}}}Od}{{{BFb{c}}}{{Jn{{Db{c}}}}}{}}{BKd{{Jn{BKb}}}}{{{AId{c}}}{{Jn{c}}}{BKfLj}}{cc{}}00000{{{El{AMl}}}BBf}1111{{c{An{Gf}}}BKh{}}{{{BKj{In}}{BKj{D`}}{An{Gf}}}BKl}{{{BKj{In}}{BKj{D`}}{An{Gf}}}BKn}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{e{{Jn{{Db{c}}}}}{}{{G`{}{{B`{c}}}}}}{{gFb}{{BL`{In}}}Kb{{G`{}{{B`{{An{c}}}}}}}{{G`{}{{B`{{An{e}}}}}}}}0{e{{BL`{In}}}{{G`{}{{B`{{An{d}}}}}}}{{G`{}{{B`{{An{c}}}}}}}}{{gABd}{{BL`{In}}}BFh{{G`{}{{B`{{An{c}}}}}}}{{G`{}{{B`{{An{e}}}}}}}}2{e{{Jn{{Db{c}}}}}Ib{{Gj{}{{B`{c}}}}}}{{}{{Jn{c}}}Lj}{c{{Jn{ec}}}BH`Lj}{{{f{Bf}}}{{Gb{BLb}}}}{{{f{Bf}}c}BLd{}}{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}d{BLfLj}BH`}{{{f{Bh{Jn{ce}}}}}{{An{{f{Bhc}}}}}LjBH`}{{{f{Bh{Jn{ce}}}}}{{f{Bhc}}}LjBH`}{{{f{BBf}}}{{El{{f{Bf}}}}}}{{{f{Ej}}Fb}Gn}4{{{f{BLh}}}d}{{{f{{Jn{ce}}}}{f{Bhg}}}b{BLjLj}BH`AEj}{{{f{BDb}}{f{Bhc}}}bAEj}{{{f{AMl}}{f{Bhc}}}bAEj}{{{f{Lf}}{f{Bhc}}}bAEj}{{{f{BIb}}{f{Bhc}}}bAEj}{{{f{Ml}}}Kh}{{}b}{cb{OdBH`}}{{{f{BBf}}{f{Bf}}}{{An{Fb}}}}{{{f{{Db{Kh}}}}}{{`{{Bd{}{{B`{Fb}}}}}}}}{{}Fb}000000000000`{{{f{BhBHl}}}{{f{BhHl}}}}`{ce{}{}}000000000000{{{Jn{ce}}}{{An{c}}}{}BH`}{{{Jn{ce}}}{}LjBH`}{{{Jn{BLl}}}Ad}{{{f{BBf}}}d}{{{f{BHl}}}d}{{{f{Ml}}}d}`{{{f{{Jn{BIn}}}}}d}{{{f{c}}}d{}}1{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}d{BLfLj}BH`}{{{f{BBf}}}Fb}`1{{{f{AJj}}{f{AJj}}}{{Af{{Gh{AJjAJj}}}}}}{{DjDj}{{Af{{Gh{DjDj}}}}}}{{{f{Bh{Jn{ce}}}}}{{f{Bhc}}}Od{BH`Od}}{{{f{BLn}}}Jj}0{{{f{BM`}}}Jj}```11`{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}d{BIlLj}BH`}{{BMbFb}{{An{Fb}}}}{{{f{Bf}}c}BMd{}}{c{{Jn{c}}}{}}{{cABdd}AMl{{AMh{Dh}}}}{e{{Jn{c}}}{}{{Mn{{f{{BIh{c}}}}}{{C`{c}}}}}}{{ce}{{Jn{ce}}}{}BH`}{{}{{Jn{{BHh{c}}}}}{}}{c{{Jn{{BHh{e}}c}}}BH`{}}{Fb{{Jn{{Db{{BHh{c}}}}}}}{}}{{Fbc}{{Jn{{Db{{BHh{e}}}}c}}}BH`{}}3210`{{}Ml}{{}BHl}{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}{{An{ANl}}}{BLfLj}BH`}{c{{BMf{{Jn{c}}}}}{}}{{ce}{{BMf{{Jn{ce}}}}}{}BH`}`````{{{f{BLn}}}Jj}0{{{f{{Jn{c}}}}{f{BhBMh}}}b{AH`Lj}}{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}dLjBH`}{{{f{BM`}}JlLf}{{Af{Jj}}}}{{{f{Bh{Jn{BIn}}}}{f{Bh{Db{D`}}}}}{{Gb{FbBJ`}}}}{{{f{Bh{Jn{BIn}}}}BMj}{{Gb{bBJ`}}}}{{{f{Bh{Jn{BIn}}}}{f{Bh{El{D`}}}}}{{Gb{FbBJ`}}}}{{{f{Bh{Jn{BIn}}}}{f{BhDh}}}{{Gb{FbBJ`}}}}{{{f{Bh{Jn{BIn}}}}{f{Bh{Db{BMl}}}}}{{Gb{FbBJ`}}}}`{{{f{Bh{Jn{BIn}}}}BMn}{{Gb{HlBJ`}}}}`{{{f{AHh}}FbFb}AHh}0{{{f{{Jn{c}}}}}{{An{{f{AH`}}}}}{AH`Lj}}{{{f{BN`}}D`}Jj}{{KhKh}BHl}`{{{f{{Jn{ce}}}}}FbLjBH`}>>{{{f{Ml}}}{{An{Kh}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dh{}}0{AM`{{Gb{eg}}}{}{{AIj{c}}AGl}{}}0{{AM`ABd}{{Gb{eg}}}{}{{AIl{c}}AGl}{}}0{c{{Gb{e}}}{}{}}00{{{Jn{{Db{c}}e}}}{{Gb{{Jn{{BFb{c}}e}}}}}{}BH`}11111111111111111111111{{BMbFb}{{Gb{FbAIb}}}}{c{{Gb{{Jn{c}}BNb}}}{}}{{ce}{{Gb{{Jn{ce}}BNb}}}{}BH`}{{}{{Gb{{Jn{{BHh{c}}}}BNb}}}{}}{c{{Gb{{Jn{{BHh{e}}c}}BNb}}}BH`{}}10{c{{Gb{{BMf{{Jn{c}}}}BNb}}}{}}{{ce}{{Gb{{BMf{{Jn{ce}}}}BNb}}}{}BH`}{{{Jn{ce}}}{{Gb{c{Jn{ce}}}}}{}BH`}{{{f{c}}}Mj{}}000000000000{{{Jn{ce}}}cOdBH`}`{{{f{BN`}}D`}Jj}{ce{}{}}000000000000{{{f{{Jn{ce}}}}}FbLjBH`}``{{AMl{BNd{DhDh}}}AMl}{{BBf{BNd{DhDh}}}BBf}{{{f{Bh{Jn{BIn}}}}{f{{Db{D`}}}}}{{Gb{FbBJ`}}}}{{{f{Bh{Jn{BIn}}}}{f{{Db{BNf}}}}}{{Gb{FbBJ`}}}}```````{{c{An{Gf}}}BKh{}}{{{BKj{In}}{BKj{D`}}{An{Gf}}}BKl}{{{BKj{In}}{BKj{D`}}{An{Gf}}}BKn}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{BNh{An{{f{ABd}}}}}{{Gb{{BL`{In}}AIb}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BNh}}}d}{FbBNh}{{{f{BNh}}}{{f{{Db{In}}}}}}{{{f{BhBNh}}{f{Fl}}}b}{{{f{BhBNh}}}b}{{{f{BhBNh}}{f{{Db{{A@l{Fl}}}}}}}b}1{{{f{BhBNh}}{An{{f{Fl}}}}}b}{BNh{{BNj{In}}}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}:`{{{f{c}}h}b{}}{{{f{BNl}}}{{f{ABf}}}}{{{f{BhBNl}}}{{A@l{Fl}}}}{{{f{BhBNl}}}{{f{BhABf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BNl}}}BNl}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BNl}}}{{f{ABd}}}}{{}BNl}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{BhBNl}}Fb}b}{{{f{BNl}}{f{BhFh}}}{{Gb{bAMf}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BNl}}}Fb}{FbBNl}{{{f{BhBNl}}}b}70{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}{{{f{BNl}}}{{An{{f{BNn}}}}}}7```````{{{f{AHh}}FbFb}AHh}0`{{}b}0{{}d}``{{eFbFb}{{BO`{In}}}{{Kb{Bf}}}{{Bd{}{{B`{c}}}}}}{{eFbFb}{{BGd{In}}}{{Kb{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{Hlb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BAl}}}BAl}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BAl}}{f{Bf}}}d}{{}BAl}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{BAl}}{f{BAl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BAl}}{f{BhFh}}}Fj}{{{f{BBh}}}BAl}{{{f{{Db{Ad}}}}}BAl}{{{f{BBf}}}BAl}{BObBAl}{BBfBAl}{{{f{BOb}}}BAl}{cc{}}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{eBAl{{AMh{L`}}}{{G`{}{{B`{c}}}}}}{{{f{BAl}}{f{Bf}}}{{An{{f{Df}}}}}}{{{f{BAl}}Fb}{{An{{Gh{{f{ANd}}{f{Df}}}}}}}}{{{f{BhBAl}}Fb}{{An{{Gh{{f{BhANd}}{f{BhDf}}}}}}}}{{{f{BAl}}{f{Bf}}}{{An{L`}}}}{{{f{BAl}}{f{Bf}}}{{An{{Gh{Fb{f{ANd}}{f{Df}}}}}}}}{{{f{BOd}}}{{El{{f{Bf}}}}}}{{{f{BAl}}}{{El{{f{Bf}}}}}}{{{f{BAl}}{f{Bhc}}}bAEj}{{{f{BOd}}{f{Bf}}}{{An{Fb}}}}{{{f{BAl}}{f{Bf}}}{{An{Fb}}}}{{}Fb}{{{f{BhBAl}}FbANdDf}{{Af{{An{Df}}}}}}{ce{}{}}{BAlc{}}{{{f{BAl}}}d}{{{f{BAl}}}{{`{{Bd{}{{B`{{Gh{{f{ANd}}{f{Df}}}}}}}}}}}}{{{f{BAl}}}{{`{{If{}{{B`{{f{Df}}}}}}}}}}{{{f{BhBAl}}}{{`{{If{}{{B`{{f{BhDf}}}}}}}}}}{{{f{BAl}}}{{`{{If{}{{B`{L`}}}}}}}}{{{f{BAl}}}{{`{{If{}{{B`{{f{ANd}}}}}}}}}}{{{f{BAl}}}Fb}{{{f{BhBAl}}BAl}b}{{{f{BhBAl}}{f{BAl}}}b}{{}BAl}{{{f{BAl}}FbANdDf}{{Af{BAl}}}}{{{f{BhBAl}}{f{Bf}}}{{An{Df}}}}{{{f{BhBAl}}{f{Bf}}ANd}{{An{ANd}}}}{{{f{BhBAl}}Fb}b}{{{f{BhBAl}}{f{Bf}}Df}{{An{Df}}}}{{{f{BhBAl}}FbDf}{{An{Df}}}}4{{{f{BhBAl}}Fb}{{An{{Gh{ANdDf}}}}}}{{{f{BAl}}d}BBf}{{{f{c}}}e{}{}}{{{f{BhBAl}}{f{BAl}}}{{Af{d}}}}{c{{Gb{e}}}{}{}}{{{f{BAl}}{f{Bf}}}{{Af{{f{Df}}}}}}{{{f{BAl}}Fb}{{Af{{Gh{{f{ANd}}{f{Df}}}}}}}}{{{f{BAl}}{f{Bf}}}{{Af{L`}}}}{{{f{BAl}}{f{Bf}}}{{Af{{Gh{Fb{f{ANd}}{f{Df}}}}}}}}{{{f{BhBAl}}{f{Bf}}}{{Af{{f{BhDf}}}}}}{{{f{BOd}}{f{Bf}}}{{Af{Fb}}}}6{{{f{c}}}Mj{}}{ce{}{}}{FbBAl}{{{f{BhBAl}}ANdDf}{{An{Df}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bf}}{El{Ej}}{f{ABd}}}{{Af{Ad}}}}{{{f{Bf}}{El{Ej}}{f{ABd}}{An{{f{BOf}}}}}{{Af{Ad}}}}{{AdAd}c{}}{{Adc}e{A`Jh}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jh}{}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BLl}}Dl}Dn}0{{{f{BLl}}}{{Af{Dn}}}}0`{{{f{Ad}}Fb}{{f{Ej}}}}{{{f{BLl}}}{{f{ABf}}}}{{{f{BhBLl}}}{{f{BhABf}}}}0{{{f{Ad}}}Dj}{{{f{BhBLl}}}{{f{Bh{l{c}}}}}Bn}{{{f{BLl}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BLl}}}}{{{f{BhBLl}}}{{Af{Fb}}}}0{{{f{BhAd}}}{{Af{Fb}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}{{{f{Ad}}}{{Af{{f{AHn}}}}}}{{{f{BLl}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Ff}}}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BLl}}{f{Df}}}{{Af{Ad}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{{f{AJj}}}}}}66{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BLl}}}Eh}{{{f{BLl}}}{{f{{El{Ej}}}}}}{{{f{BhBLl}}}{{f{Bh{El{Ej}}}}}}{{{f{BhAd}}}{{f{Bh{El{Ej}}}}}}{{{f{Ad}}}Ad}{{{f{Ij}}}Ij}1{{{f{BLl}}}{{Jn{BLl}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{I`}}}}}}{{}Ad}{Fb{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}{Fb{{f{Bhc}}}{}}00{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jh}{}}{{{f{Ad}}c}e{A`Jh}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Jl}}}}{Fbb}00{{{f{BLl}}}Ad}0{{{f{BLl}}}{{f{Df}}}}0{{{f{Ij}}{f{Ij}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}c}{{Af{Ff}}}AMj}2{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}c}eAMj{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}Fb}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}GnFb}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AIf}}}}}}{{{f{Ad}}}{{Af{{f{AIh}}}}}}{{{f{BLl}}}{{AId{L`}}}}0{{{f{Ad}}ADh}{{Af{Ad}}}}{{{f{BLl}}{f{Ff}}}{{Af{Ad}}}}{{{f{Ad}}{f{Ff}}d}{{Af{Ad}}}}{{{f{Ij}}{f{BhFh}}}Fj}{{{f{Ad}}{f{BhFh}}}Fj}0{{{f{Ad}}}Dh}{cc{}}0{{{l{c}}}AdBn}1{{{f{Bf}}{f{{Db{Gn}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Db{Gn}}}}{f{Df}}d}{{Af{Ad}}}}{{{f{Bf}}Ej}{{Af{Ad}}}}{{{f{Bf}}{El{Ej}}{f{Df}}}Ad}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{cAd{{G`{}{{B`{{An{Hj}}}}}}}}{cAd{{G`{}{{B`{Dh}}}}}}{cAd{{G`{}{{B`{{f{Kj}}}}}}}}{cAd{{G`{}{{B`{{An{In}}}}}}}}{cAd{{G`{}{{B`{{An{Jl}}}}}}}}{cAd{{G`{}{{B`{{f{Jl}}}}}}}}{cAd{{G`{}{{B`{{An{d}}}}}}}}{cAd{{G`{}{{B`{{f{Bf}}}}}}}}{cAd{{G`{}{{B`{{An{Kh}}}}}}}}{cAd{{G`{}{{B`{{f{Hl}}}}}}}}{cAd{{G`{}{{B`{Hj}}}}}}{cAd{{G`{}{{B`{{f{In}}}}}}}}{cAd{{G`{}{{B`{d}}}}}}{cAd{{G`{}{{B`{In}}}}}}{cAd{{G`{}{{B`{{f{d}}}}}}}}{cAd{{G`{}{{B`{Jl}}}}}}{cAd{{G`{}{{B`{{An{Hl}}}}}}}}{cAd{{G`{}{{B`{{An{Kj}}}}}}}}{cAd{{G`{}{{B`{{f{Kh}}}}}}}}{cAd{{G`{}{{B`{Kh}}}}}}{cAd{{G`{}{{B`{Kj}}}}}}{cAd{{G`{}{{B`{{f{Hj}}}}}}}}{cAd{{G`{}{{B`{Hl}}}}}}{{{f{Bf}}{El{Hl}}}Ad}{{{f{Bf}}{El{Kh}}}Ad}{{{f{Bf}}{El{Jl}}}Ad}{{{f{Bf}}{El{Kj}}}Ad}{{{f{Bf}}{El{Hj}}}Ad}{{{f{Bf}}{El{In}}}Ad}{{{f{Bf}}Fb{f{Df}}}Ad}{{{f{Ad}}FbFb}Ad}{{{f{BLl}}Fb}{{Af{Gn}}}}{{{f{Ad}}}Fb}{{{f{Ad}}}Hb}{{{f{BLl}}Fb}{{An{{f{Hf}}}}}}0{{{f{BLl}}FbFb}{{An{{f{Hf}}}}}}0{{{f{BLl}}Fb}Gn}0{{{f{Ad}}c}{{Af{Ff}}}AMj}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}0{{{f{Ad}}{f{Bf}}}c{}}3{{{f{BLl}}}d}{{{f{Ij}}{f{Bhc}}}bAEj}{{{f{Ad}}{An{Fb}}}Ad}{{{f{Ad}}}{{Af{{f{AOh}}}}}}{{{f{Ad}}}{{Af{{f{AOj}}}}}}{{{f{Ad}}}{{Af{{f{AOl}}}}}}{{{f{Ad}}}{{Af{{f{AOf}}}}}}{{{f{Ad}}}{{Af{{f{Dn}}}}}}`{{}Fb}00{ce{}{}}00{AdB@l}1{BAnAd}{AdAd}<<{{{f{Ad}}}{{Af{Ff}}}}000{{{f{BLl}}}Ff}0{{}d}00{{{f{Ad}}}Ij}{{{f{Ad}}}BOh}{{{f{BLl}}}Fb}{{{f{BLl}}Fb}Ad}0{{{f{Ad}}}{{Af{{f{Dj}}}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}c}{{Af{Ff}}}AMj}012{{{f{Ad}}}{{Af{{An{c}}}}}Jh}{{{f{BLl}}}{{Af{Jj}}}}0{{{f{BLl}}}{{An{Jl}}}}0{{{f{Ad}}}Jj}1122322{{{f{Ad}}c}e{A`Jh}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jh}{}}=={{{f{BLl}}}{{Af{Fb}}}}0{{{f{BLl}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{AId{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Hl}}}}}}}}{{{f{Bf}}{Kl{Kj}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{{An{In}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{AId{{Db{D`}}}}}}}}}}{{{f{Bf}}{Kl{Hl}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{{An{d}}}}}}}}{{{f{Bf}}{Kl{Kh}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{AId{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Dh}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Ad}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Hj}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Kj}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{El{D`}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Kh}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Kj}}}}}}}}{{{f{Bf}}c}AdBAn}{{{f{Bf}}c}Ad{{Kb{{Db{d}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{Jl}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Hj}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Gn}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Kh}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{El{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{In}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Jl}}}}}}}}{{{f{Bf}}{Kl{In}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{Hl}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{AId{Bf}}}}}}}}}}{{{f{Bf}}{f{Df}}}Ad}{{{f{BLl}}FbFb}Ad}{{{f{Bf}}Fb}Ad}{{{f{BhBOh}}}{{An{c}}}{}}{{{f{Ad}}c}{{Af{Ff}}}AMj}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}0{{{f{Ad}}c}eAMj{}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BLl}}}Fb}`{{{f{Ad}}}BOj}{{{f{Ad}}}{{Af{Jj}}}}{{{f{BLl}}JlLf}{{Af{Jj}}}}0{{{f{BLl}}}Ad}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jh}{}}{{Adc}e{A`Jh}{}}{{{f{BhBLl}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}5{IjIj}{{{f{BLl}}{f{Cb}}Lh}{{Af{Ad}}}}0{{{f{Ad}}Jldd{An{Hl}}}{{Af{Ad}}}}{{{f{Ad}}Fbdd{An{Hl}}}{{Af{Ad}}}}{{{f{Ad}}Fb}Ad}{{{f{BhAd}}Ij}b}{{{f{BLl}}In}Ad}{{{f{BhBLl}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Hl}}}Ad}{{{f{BOh}}}{{Gh{Fb{An{Fb}}}}}}{{{f{BLl}}InFb}Ad}{{{f{Ad}}Dl}{{Af{Ad}}}}{{{f{BLl}}Dl}{{Af{Ad}}}}0{{{f{BLl}}D`}{{An{Jl}}}}0{{{f{BLl}}D`}{{Af{Jj}}}}0{{{f{Ad}}}{{Af{{f{Mf}}}}}}{{{f{Ad}}Fb}{{Af{{AId{Bf}}}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}{{AdAd}c{}}{{{f{Ad}}c}e{A`Jh}{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jh}{}}{{{f{Ad}}}{{Af{c}}}Jh}{{{f{BLl}}}{{Af{Jj}}}}0{{{f{Ad}}}{{Af{Jj}}}}{{{f{Ad}}{An{Fb}}}Ad}{{{f{BLl}}{f{Dn}}}{{Af{Ad}}}}{{{f{BLl}}{f{{Db{H`}}}}}{{Af{Ad}}}}{{{f{BLl}}{f{{Db{H`}}}}}Ad}{{{f{Ad}}{f{{Db{H`}}}}d}Ad}{{{f{Ad}}{f{Dn}}d}{{Af{Ad}}}}{{{f{BLl}}{f{Dn}}}Ad}{{{f{Ad}}{f{{Db{H`}}}}}Ad}{{{f{Ad}}{f{Dn}}d}Ad}{{{f{Ad}}Fbd}Ej}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AId{Ad}}}}{{{f{c}}}Dh{}}{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{c{{Gb{e}}}{}{}}0{{{Gh{{f{AMl}}{El{Ej}}}}}{{Af{Ad}}}}{{{Gh{{f{Bf}}{El{Ej}}}}}{{Af{Ad}}}}2{{{Gh{{f{Bf}}Ej}}}{{Af{Ad}}}}{{{Gh{{f{AMl}}Ej}}}{{Af{Ad}}}}444{{{f{BhAd}}{Fd{c}}}dBn}{{{f{c}}}Mj{}}00{{{f{Ad}}}{{Af{{f{AOb}}}}}}{{{f{Ad}}}{{Af{{f{AMd}}}}}}{{{f{Ad}}}{{Af{{f{AOd}}}}}}{{{f{Ad}}}{{Af{{f{AO`}}}}}}{{{f{BLl}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BLl}}}{{Af{{f{{l{c}}}}}}}Bn}`{{{f{BLl}}D`}{{An{Jl}}}}0{{{f{BLl}}D`}{{Af{Jj}}}}0{ce{}{}}00{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`Jh}}{{{f{Ad}}{f{Ff}}{f{Ad}}}{{Af{Ad}}}}````{{{BOl{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{BOn}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BHj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ef}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BHj}}c}{{Af{Ad}}}Ab}{{{f{{l{Ef}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{C@`}}}C@`}{{{f{c}}{f{Bhe}}}b{}{}}{{}C@`}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{C@`}}{f{C@`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{C@`}}{f{BhFh}}}Fj}{cc{}}{{{f{C@`}}{f{Bhc}}}bAEj}{{}Fb}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}3``{{{f{c}}h}b{}}{{{f{BhCf}}}{{f{BhAd}}}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{Cf}}}Ad}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{cc{}}{{}Fb}{ce{}{}}{{{f{BhAd}}}Cf}{{{f{BhCf}}{f{BhEj}}}b}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}5{{{f{BhCf}}{f{BhEj}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````````{{{f{c}}h}b{}}8{{{El{B@l}}}{{Af{B@l}}}}{c{{Af{B@l}}}{{G`{}{{B`{B@l}}}}}}{cB@l{{G`{}{{B`{B@l}}}}}}{c{{An{B@l}}}{{G`{}{{B`{B@l}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gh{{AId{{l{c}}}}{AId{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gh{{AId{{l{c}}}}{AId{{l{e}}}}{AId{{l{g}}}}}}}BnBnBn}{{{f{BhC@b}}}d}{c{{Af{Df}}}{{G`{}{{B`{{f{Gn}}}}}}}}{c{{Af{{Gh{DfFb}}}}}{{G`{}{{B`{{f{Gn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gf}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{{C@d{ec}}}}}{{C@d{ec}}}Od{Od{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gh{{AId{{l{c}}}}{AId{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gh{AdAd}}}}{C@be{}{{C@f{c}}}}{C@be{}{{C@h{c}}}}{c{{Af{B@l}}}{{G`{}{{B`{{f{B@l}}}}}}}}{cB@l{{G`{}{{B`{{f{B@l}}}}}}}}{{{f{BhC@b}}{f{c}}}dBIl}{{{f{{C@j{c}}}}}{{f{e}}}{}{}}{Fb{{f{c}}}{}}0{{{f{{AHj{c}}}}}{{f{e}}}{}{}}1{Fb{{f{Bhc}}}{}}0{{{f{Bh{AHj{c}}}}}{{f{Bhe}}}{}{}}1{Fbb}00{cBAl{{G`{}{{B`{Df}}}}}}{c{{Af{Df}}}{{G`{}{{B`{{f{Df}}}}}}}}{{{f{{C@j{Ad}}}}{f{{C@j{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BhC@b}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}00{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{c{{AHj{{l{e}}}}}{{G`{}{{B`{}}}}}n}{c{{AHj{Ff}}}{{G`{}{{B`{d}}}}}}{eC@h{}{{G`{}{{B`{c}}}}}}12{c{{AHj{{l{e}}}}}{{Gj{}{{B`{}}}}}n}{c{{AHj{{l{e}}}}}{{Gl{}{{B`{}}}}}n}{c{{AHj{Ff}}}{{Gl{}{{B`{d}}}}}}{{{f{Df}}{f{Df}}}{{An{Df}}}}{{{f{AKf}}{f{AKf}}}AKf}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{C@j{Ad}}}}{f{Bhc}}}bAEj}{{}Fb}00{ce{}{}}00{{{AHj{c}}}c{}}1{BCj{{El{c}}}{}}{c{{El{{C@n{C@l}}}}}{}}{c{{El{Dh}}}{}}{BAhGn}{c{{AHj{c}}}{}}{{eFb}{{C@d{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{C@d{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{C@d{ec}}}}}An{}{{Bd{}{{B`{c}}}}F`}}`{{{f{{C@d{ec}}}}}{{Gh{Fb{An{Fb}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{{Db{c}}}}InFb}{{f{{Db{c}}}}}{}}{{{f{{l{c}}}}Fb}{{Af{{El{{l{c}}}}}}}Bn}{{{f{B@l}}Fbd}{{El{B@l}}}}{{{f{c}}}e{}{}}{{C@bFb}{{C@d{C@bc}}}{}}{c{{Gb{e}}}{}{}}00{{{f{Df}}{f{Df}}}{{Af{Df}}}}111{{{f{c}}}Mj{}}00{ce{}{}}00{{{f{Df}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Db{{El{c}}}}}}}{{Gh{Fb{El{Fb}}}}}{}}{{{f{B@l}}}{{`{{Bd{}{{B`{B@l}}}}}}}}{{{f{{Db{c}}}}}{{AHd{H`}}}{{Kb{{Db{Ml}}}}IbId}}{{{f{{Db{e}}}}}{{El{c}}}{IbIdCd}{{Kb{{Db{c}}}}}}{{{f{Ad}}}{{El{Ad}}}}","D":"IMl","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5054],[5,"ListType",1349],[5,"ChunkedArray",39],[10,"PolarsNumericType",1349],[10,"Num",5055],[10,"ToPrimitive",5056],[5,"Series",4476],[8,"PolarsResult",3767,5057],[10,"NumOpsDispatchInner",4857,5058],[6,"GroupsProxy",3369,5059],[5,"BooleanType",1349],[6,"Option",5060],[17,"Item"],[8,"ArrayBox",4916],[10,"Iterator",5061],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1349],[10,"PolarsDataType",1349],[17,"Output"],[10,"Fn",5062],[10,"Copy",5063],[5,"UnstableSeries",4916],[10,"FnMut",5062],[5,"Float64Type",1349],[5,"Float32Type",1349],[5,"BinaryType",1349],[1,"u8"],[1,"slice"],[5,"StringType",1349],[6,"DataType",1349,5064],[5,"String",5065],[8,"ListChunked",1349],[5,"SortOptions",1267],[8,"IdxCa",1349,5066],[5,"SortMultipleOptions",1267],[8,"BinaryChunked",1349],[10,"PolarsIntegerType",1349],[10,"NumOpsDispatchCheckedInner",4882,5067],[8,"ChunkLenIter",39],[8,"ArrayRef",3767,5068],[5,"Vec",5069],[5,"MetadataProperties",771],[10,"DoubleEndedIterator",5070],[1,"usize"],[5,"Metadata",771],[8,"BooleanChunked",1349],[5,"Formatter",5071],[8,"Result",5071],[10,"Array",5068],[17,"Array"],[10,"IntoIterator",5072],[6,"Result",5073],[10,"FallibleIterator",5074],[5,"Bitmap",5075],[1,"tuple"],[10,"IntoParallelIterator",5076],[10,"TrustedLen",5077],[6,"AnyValue",1349,5078],[8,"IdxSize",3767,5079],[5,"MetadataFlags",771],[5,"ObjectType",1349],[10,"PolarsObjectSafe",940],[10,"PolarsObject",940],[1,"f32"],[1,"u64"],[5,"Int128Type",1349],[8,"DecimalChunked",1349,5080],[10,"Send",5063],[10,"Sync",5063],[10,"ExactSizeIterator",5081],[10,"PolarsFloatType",1349],[6,"IsSorted",4476,5082],[10,"PolarsIterator",732],[1,"i64"],[5,"Iter",5083],[1,"fn"],[5,"Map",5084],[6,"ChunkedArrayLayout",39],[10,"NumCast",5056],[5,"Scalar",1349,5078],[1,"f64"],[5,"Arc",3767,5085],[5,"UInt64Type",1349],[10,"AsRef",5086],[5,"Int64Type",1349],[5,"UInt32Type",1349],[1,"u32"],[1,"i32"],[5,"Range",5087],[5,"Int32Type",1349],[5,"Field",1349,5088],[10,"ParallelIterator",5076],[10,"IndexedParallelIterator",5076],[6,"QuantileInterpolOptions",3767,5089],[5,"RollingOptionsFixedWindow",3767,5090],[10,"Sized",5063],[17,"HasViews"],[5,"RandomState",5091],[5,"BytesHash",5092],[8,"Array2",5093],[8,"ArrayView1",5093],[8,"StringChunked",1349],[6,"Either",5094],[5,"TypeId",5095],[5,"NullableIdxSize",3767,5079],[10,"FnOnce",5062],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",426,5096],[10,"ChunkedBuilder",454],[5,"BinViewChunkedBuilder",454,5097],[10,"ViewType",5098],[5,"BooleanChunkedBuilder",454,5099],[5,"NullChunkedBuilder",454,5100],[5,"PrimitiveChunkedBuilder",454,5101],[10,"Clone",5102],[8,"StringChunkedBuilder",454,5097],[8,"BinaryChunkedBuilder",454,5097],[10,"NewChunkedArray",454],[5,"AnonymousListBuilder",558,5103],[5,"AnonymousOwnedListBuilder",558,5103],[5,"ListBooleanChunkedBuilder",558,5104],[5,"ListPrimitiveChunkedBuilder",558,5105],[10,"ListBuilderTrait",558],[5,"ListStringChunkedBuilder",558,5106],[5,"ListBinaryChunkedBuilder",558,5106],[5,"ListNullChunkedBuilder",558,5107],[5,"Box",5108],[10,"ChunkedCollectInferIterExt",712],[10,"ChunkedCollectIterExt",712],[10,"Canonical",726],[10,"ChunkedCollectParIterExt",728],[10,"FromParIterWithDtype",728],[5,"BooleanArray",5109],[5,"BoolIterNoNull",732],[5,"SomeIterator",732],[5,"Iter",5110],[5,"IterNames",5110],[5,"ObjectArray",940],[6,"ArrowDataType",1349,5111],[10,"Any",5095],[10,"Debug",5071],[8,"ObjectValueIter",940],[5,"BitmapIter",5112],[6,"ZipValidity",5113],[5,"ObjectChunkedBuilder",1011],[8,"ObjectChunked",1349],[10,"AnonymousObjectBuilder",1034],[5,"ObjectRegistry",1034],[8,"ObjectConverter",1034],[8,"BuilderConstructor",1034],[17,"FuncRet"],[10,"ChunkApply",1062],[10,"ChunkApplyKernel",1062],[10,"ChunkSort",1062],[10,"ChunkUnique",1062],[10,"ChunkCast",1062],[6,"FillNullStrategy",1062],[10,"ChunkCompare",1062],[10,"ChunkExplode",1062],[5,"OffsetsBuffer",5114],[10,"ChunkFillNullValue",1062],[10,"ChunkFilter",1062],[10,"ChunkFull",1062],[10,"ChunkFullNull",1062],[10,"ChunkAnyValue",1062],[10,"Hasher",5115],[10,"IsFirstDistinct",1062],[10,"IsLastDistinct",1062],[10,"ChunkAgg",1062],[10,"ChunkQuantile",1062],[10,"ChunkExpandAtIndex",1062],[10,"ChunkReverse",1062],[10,"ChunkRollApply",1062],[10,"ChunkSet",1062],[10,"ChunkShift",1062],[10,"ChunkShiftFill",1062],[10,"ChunkVar",1062],[10,"ChunkTake",1062],[10,"ChunkTakeUnchecked",1062],[10,"ChunkBytes",1062],[10,"ChunkZip",1062],[10,"BinaryFnMut",1183],[10,"StaticArray",1349,5116],[10,"TernaryFnMut",1183],[10,"Error",5117],[10,"UnaryFnMut",1183],[5,"PrimitiveArray",5118],[6,"SearchSortedSide",1223],[10,"SlicedArray",3767,5119],[5,"NoNull",4940],[5,"RowsEncoded",5120],[8,"BinaryOffsetChunked",1349],[5,"NaiveDateTime",5121],[6,"PolarsError",3767,5057],[6,"Cow",5122],[8,"Float32Chunked",1349],[8,"Float64Chunked",1349],[10,"ArrayFromIter",1349,5123],[10,"ArrayFromIterDtype",1349,5123],[10,"AsRefDataType",1349,5064],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5124],[10,"From",5086],[5,"CategoricalChunked",2751,5125],[10,"CategoricalMergeOperation",2751,5126],[10,"LogicalType",1349,5127],[5,"Logical",1349,5127],[5,"OwnedObject",1349,5078],[6,"UnknownKind",1349,5064],[6,"TimeUnit",1349,5128],[5,"UInt8Type",1349],[5,"UInt16Type",1349],[5,"Int8Type",1349],[5,"Int16Type",1349],[5,"DateType",1349],[5,"TimeType",1349],[5,"BinaryOffsetType",1349],[5,"DecimalType",1349],[5,"DatetimeType",1349],[5,"DurationType",1349],[5,"CategoricalType",1349],[6,"ArrowTimeUnit",1349],[10,"ArrayCollectIterExt",3767,5123],[8,"Utf8ViewArray",5098],[8,"UInt32Chunked",1349],[5,"Error",5071],[10,"Into",5086],[10,"NumericNative",1349],[5,"ArrowField",3767],[6,"PrimitiveType",5129],[6,"IntegerType",5130],[10,"Borrow",5131],[8,"String",5132],[10,"NoOption",5133],[10,"GetAnyValue",1349,5078],[8,"Int128Chunked",1349],[6,"Ordering",5134],[6,"PhysicalType",5130],[8,"UInt8Chunked",1349],[8,"UInt16Chunked",1349],[8,"UInt64Chunked",1349],[8,"Int8Chunked",1349],[8,"Int16Chunked",1349],[8,"Int32Chunked",1349],[8,"Int64Chunked",1349],[8,"PlIdHashMap",1349,5066],[5,"CategoricalChunkedBuilder",2751,5135],[5,"GlobalRevMapMerger",2751,5126],[6,"RevMapping",2891,5136],[6,"CategoricalOrdering",2891,5136],[5,"CatIter",2751,5125],[1,"u128"],[5,"DataFrame",3078],[5,"StringCacheHolder",2943,5137],[5,"ErrString",2972,5057],[6,"PolarsWarning",2972,5138],[10,"Display",5071],[6,"FloatFmt",3048],[1,"i128"],[1,"char"],[5,"Schema",4402],[10,"IntoSeries",4476,5139],[6,"NullStrategy",3078],[6,"UniqueKeepStrategy",3078],[8,"PlHashSet",1349,5140],[5,"ArrowSchema",3767,5141],[5,"Row",3623],[5,"GroupBy",3369],[5,"RangeFull",5087],[5,"RangeToInclusive",5087],[5,"RangeTo",5087],[5,"RangeFrom",5087],[5,"RangeInclusive",5087],[5,"RecordBatchIter",3078],[5,"PhysRecordBatchIter",3078],[10,"IntoVec",4940],[5,"MeltArgs",3340],[10,"RangeBounds",5087],[8,"SchemaRef",4402],[6,"IndexOrder",3767,5142],[5,"StructArray",5143],[8,"RecordBatch",5144],[5,"GroupsIdx",3369,5059],[8,"IdxVec",5145],[6,"GroupByMethod",3369],[5,"SlicedGroups",3369,5059],[5,"GroupsProxyParIter",3369,5059],[10,"UnindexedConsumer",5146],[6,"GroupsIndicator",3369,5059],[8,"IdxItem",3369,5059],[10,"IntoGroupsProxy",3369,5147],[5,"Copied",5148],[5,"Zip",5149],[5,"GroupsProxyIter",3369,5059],[8,"GroupsSlice",3369,5059],[1,"array"],[8,"DynArgs",3767,5150],[10,"IsFloat",5151],[10,"NativeType",5152],[10,"AggList",3607,5153],[10,"TakeExtremum",3607],[10,"PhysicalAggExpr",3620],[6,"AnyValueBuffer",3623,5154],[6,"AnyValueBufferTrusted",3623,5154],[5,"BinaryArray",5155],[5,"IdHasher",3719,5156],[5,"IdxHash",3719,5156],[5,"HashMap",5157],[10,"BuildHasher",5115],[10,"VecHash",3719,5158],[10,"Allocator",5159],[5,"BorrowedFd",5160],[10,"AsFd",5160],[10,"AsRawFd",5161],[20,"MaybeUninit",5162],[10,"NumOpsDispatchChecked",3767,5067],[5,"ChunkId",3767,5079],[5,"RollingVarParams",3767,5150],[5,"RollingQuantileParams",3767,5150],[6,"NonExistent",3767,5163],[10,"Ord",5134],[10,"Default",5164],[5,"Weak",5085],[10,"Scalar",5165],[10,"PartialEq",5134],[5,"File",5166],[5,"Error",5167],[5,"Utf8Error",5168],[5,"TryReserveError",5169],[6,"Error",5170],[5,"OsStr",5171],[5,"CStr",5172],[1,"never"],[5,"CString",5173],[5,"OsString",5171],[5,"Path",5174],[5,"PathBuf",5174],[10,"ToOwned",5122],[10,"FromData",4325,5175],[5,"Buffer",5176],[10,"FromDataUtf8",4325,5175],[10,"FromDataBinary",4325,5175],[5,"ListArray",5177],[6,"Ambiguous",3767,5163],[10,"NamedFromOwned",3767,5178],[10,"PartialOrd",5134],[10,"PolarsArray",3767,5179],[10,"Hash",5115],[10,"SeriesTrait",4476,5082],[10,"ChunkAggSeries",3767,5180],[10,"QuantileAggSeries",3767,5181],[10,"IndexToUsize",3767,5182],[10,"NamedFrom",3767,5178],[5,"Pin",5183],[5,"Request",5117],[5,"BorrowedCursor",5184],[5,"IoSliceMut",5185],[6,"SeekFrom",5185],[10,"VarAggSeries",3767,5186],[5,"AllocError",5159],[5,"BTreeMap",5187],[5,"IoSlice",5185],[5,"AnonymousBuilder",4331,5188],[5,"Offsets",5114],[5,"MutableNullArray",4354,5189],[5,"MutableBitmap",5190],[5,"Utf8Array",5191],[8,"ArrowSchemaRef",5141],[10,"IndexOfSchema",4402],[8,"Metadata",5111],[5,"SeriesIter",4476,5192],[8,"SeriesPhysIter",4476,5192],[10,"LhsNumOps",4857,5058],[10,"NumOpsDispatch",4857,5058],[6,"NullBehavior",4890],[10,"CustomIterTools",4940,5193],[5,"TrustMyLength",4940,5077],[10,"FromIteratorReversed",5194],[10,"FromTrustedLenIterator",4940,5193],[5,"Wrap",4940],[5,"LazyCompact",5195],[5,"SmartString",5196],[10,"InitHashMaps",1349],[10,"InitHashMaps2",1349],[5,"TrueT",1349],[15,"IO",3033],[15,"Context",3033],[15,"Count",3604],[15,"Slice",3605],[10,"ListFromIter",3767],[10,"Utf8FromIter",4397],[10,"BinaryFromIter",4397]],"r":[[0,5156],[4,5137],[13,5137],[16,5137],[31,5137],[426,5096],[454,5097],[455,5097],[456,5099],[459,5100],[460,5101],[461,5097],[558,5103],[559,5103],[560,5106],[561,5104],[563,5107],[564,5105],[565,5106],[1252,5119],[1267,5119],[1350,5078],[1352,5123],[1353,5123],[1354,5123],[1355,5111],[1357,5064],[1373,5125],[1376,5125],[1377,5135],[1378,5126],[1379,5136],[1381,5064],[1382,5064],[1383,5064],[1394,5080],[1404,5088],[1405,5088],[1420,5078],[1422,5126],[1426,5066],[1427,5182],[1428,5066],[1429,5066],[1430,5140],[1431,5066],[1467,5127],[1468,5127],[1486,5078],[1490,5140],[1491,5140],[1492,5066],[1493,5140],[1494,5140],[1500,5136],[1501,5078],[1503,5116],[1515,5128],[1516,5064],[1543,5064],[1742,5126],[1756,5127],[1832,5064],[2350,5126],[2351,5126],[2362,5064],[2445,5125],[2483,5125],[2751,5125],[2752,5125],[2753,5135],[2754,5126],[2755,5136],[2757,5126],[2761,5136],[2778,5126],[2843,5126],[2844,5126],[2862,5125],[2866,5125],[2891,5136],[2896,5136],[2943,5137],[2949,5137],[2952,5137],[2960,5137],[2962,5136],[2967,5136],[2968,5137],[2969,5137],[2970,5137],[2971,5137],[2977,5057],[2983,5057],[2984,5057],[2985,5138],[2997,5057],[3005,5057],[3012,5138],[3017,5057],[3018,5057],[3019,5057],[3020,5057],[3021,5057],[3022,5138],[3023,5057],[3037,5197],[3038,5197],[3039,5197],[3040,3719],[3369,5059],[3375,5059],[3376,5059],[3377,5059],[3378,5059],[3379,5059],[3380,5059],[3383,5059],[3385,5147],[3397,5059],[3607,5153],[3625,5154],[3626,5154],[3719,5156],[3720,5156],[3721,5156],[3722,5158],[3725,5158],[3726,5158],[3767,5163],[3768,5085],[3769,5096],[3770,5123],[3771,5068],[3773,5141],[3774,5097],[3775,5099],[3777,5125],[3778,5125],[3779,5135],[3780,5126],[3781,5136],[3782,5180],[3783,5079],[3784,39],[3785,454],[3786,712],[3787,712],[3791,3078],[3793,5150],[3796,5175],[3797,5175],[3798,5175],[3800,5126],[3803,5182],[3804,5079],[3805,5142],[3806,5182],[3807,5139],[3808,4940],[3810,5198],[3811,5198],[3812,5198],[3815,5058],[3817,5106],[3818,5104],[3819,558],[3820,5179],[3821,5105],[3822,5106],[3825,3340],[3827,5178],[3828,5178],[3830,454],[3832,5163],[3835,5079],[3836,5079],[3837,5058],[3838,5067],[3841,5179],[3842,5057],[3843,732],[3844,940],[3845,5057],[3846,5101],[3847,5181],[3848,5089],[3851,5136],[3852,5090],[3853,5150],[3854,5150],[3857,4476],[3858,5082],[3860,5119],[3861,5137],[3863,5097],[3865,3078],[3866,5186],[3867,5158],[3913,5126],[3948,5179],[3951,0],[3961,5179],[3990,0],[4126,5182],[4168,5179],[4170,5126],[4171,5126],[4197,5179],[4203,5057],[4204,5057],[4205,5057],[4206,5057],[4218,5125],[4220,5179],[4226,5125],[4299,5179],[4325,5175],[4326,5175],[4327,5175],[4331,5188],[4354,5189],[4384,5136],[4389,5136],[4390,5119],[4393,5137],[4394,5137],[4395,5137],[4396,5137],[4397,5199],[4398,5199],[4478,1062],[4481,5139],[4482,5082],[4483,5082],[4487,5192],[4488,5192],[4489,5082],[4857,5058],[4858,5058],[4859,5058],[4865,5058],[4882,5067],[4883,5067],[4941,5193],[4942,5193],[4943,5193],[4946,5077],[4957,5200],[4958,5200],[4988,5201],[4989,5202],[5008,5202],[5010,5203],[5023,5202],[5038,5202],[5048,5203]],"b":[[48,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[49,"impl-Add-for-%26ChunkedArray%3CT%3E"],[50,"impl-Add-for-ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[64,"impl-ChunkedArray%3CFloat64Type%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CBinaryType%3E"],[71,"impl-ChunkedArray%3CT%3E"],[72,"impl-ChunkedArray%3CStringType%3E"],[118,"impl-Div-for-ChunkedArray%3CT%3E"],[119,"impl-Div-for-%26ChunkedArray%3CT%3E"],[120,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[121,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[128,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[129,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[130,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[131,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[137,"impl-Debug-for-ChunkedArray%3CT%3E"],[138,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[149,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[150,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[151,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[154,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[182,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[183,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[184,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[185,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[215,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[216,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[217,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[218,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[219,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[220,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[226,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[227,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[228,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[229,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[230,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkedArray%3CBooleanType%3E"],[233,"impl-ChunkedArray%3CBooleanType%3E"],[234,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[242,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[243,"impl-ChunkedArray%3CBooleanType%3E"],[246,"impl-ChunkedArray%3CT%3E"],[247,"impl-ChunkedArray%3CBooleanType%3E"],[248,"impl-Mul-for-ChunkedArray%3CT%3E"],[249,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[250,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[251,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[255,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[256,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[257,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[258,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[259,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[260,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[261,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[262,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[263,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[264,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[265,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[266,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[267,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[268,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[269,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[270,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[271,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[272,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[273,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[274,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[275,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[285,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[286,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[287,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[288,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[292,"impl-ChunkedArray%3CStringType%3E"],[293,"impl-ChunkedArray%3CListType%3E"],[294,"impl-ChunkedArray%3CStringType%3E"],[295,"impl-ChunkedArray%3CListType%3E"],[306,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[307,"impl-Rem-for-ChunkedArray%3CT%3E"],[308,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[309,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[333,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[334,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[335,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[336,"impl-Sub-for-ChunkedArray%3CT%3E"],[338,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[339,"impl-ChunkedArray%3CBooleanType%3E"],[342,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[343,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[344,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[345,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[351,"impl-ChunkedArray%3CListType%3E"],[352,"impl-ChunkedArray%3CT%3E"],[357,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[358,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[359,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[360,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[361,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[362,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[388,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[389,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[390,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[391,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[392,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[393,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[394,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[395,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[396,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[397,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[398,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[399,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[400,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[401,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[506,"impl-BinViewChunkedBuilder%3Cstr%3E"],[507,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[796,"impl-Flags-for-MetadataProperties"],[797,"impl-MetadataProperties"],[798,"impl-Flags-for-MetadataFlags"],[799,"impl-MetadataFlags"],[841,"impl-UpperHex-for-MetadataProperties"],[842,"impl-LowerHex-for-MetadataProperties"],[843,"impl-Octal-for-MetadataProperties"],[844,"impl-Binary-for-MetadataProperties"],[845,"impl-Debug-for-MetadataProperties"],[846,"impl-LowerHex-for-MetadataFlags"],[847,"impl-Debug-for-MetadataFlags"],[848,"impl-UpperHex-for-MetadataFlags"],[849,"impl-Binary-for-MetadataFlags"],[850,"impl-Octal-for-MetadataFlags"],[856,"impl-MetadataProperties"],[857,"impl-Flags-for-MetadataProperties"],[858,"impl-Flags-for-MetadataFlags"],[859,"impl-MetadataFlags"],[945,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[946,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[978,"impl-ObjectArray%3CT%3E"],[979,"impl-StaticArray-for-ObjectArray%3CT%3E"],[991,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[992,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1002,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1003,"impl-ObjectArray%3CT%3E"],[1005,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1006,"impl-ObjectArray%3CT%3E"],[1008,"impl-Array-for-ObjectArray%3CT%3E"],[1009,"impl-ObjectArray%3CT%3E"],[1012,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1013,"impl-ObjectChunkedBuilder%3CT%3E"],[1015,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1016,"impl-ObjectChunkedBuilder%3CT%3E"],[1582,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1583,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1584,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1585,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1586,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1587,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1588,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1589,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1665,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1666,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1667,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1668,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1669,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1670,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1960,"impl-PartialEq-for-DataType"],[1961,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[1969,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1970,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1971,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1972,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[1975,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[1976,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[1977,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[1978,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2016,"impl-Display-for-AnyValue%3C\'_%3E"],[2017,"impl-Debug-for-AnyValue%3C\'a%3E"],[2019,"impl-Display-for-DataType"],[2020,"impl-Debug-for-DataType"],[2022,"impl-Display-for-TimeUnit"],[2023,"impl-Debug-for-TimeUnit"],[2035,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2036,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2037,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2038,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2039,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2043,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2044,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2045,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2046,"impl-From%3C%26Field%3E-for-Field"],[2048,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2071,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2073,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2076,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2077,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2078,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2080,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2081,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2082,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2083,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2089,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2090,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2092,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2093,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2094,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2095,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2096,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2097,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2105,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2106,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2107,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2108,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2109,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2110,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2199,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2200,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2201,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2202,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2205,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2206,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2207,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2208,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2340,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2341,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2342,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2343,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2346,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2347,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2348,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2349,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2383,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2384,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2385,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2386,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2387,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2388,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2389,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2390,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2391,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2392,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2404,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2405,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2408,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2409,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2410,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2411,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2414,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2415,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2416,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2417,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2495,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2496,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2497,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2498,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2797,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2798,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2799,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2800,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2801,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2802,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2817,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2818,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2819,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2820,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2821,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2822,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2837,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2838,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2839,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2840,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2841,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2842,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2853,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2854,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2855,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2856,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2857,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2858,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3007,"impl-Display-for-ErrString"],[3008,"impl-Debug-for-ErrString"],[3099,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3100,"impl-Add%3C%26Series%3E-for-DataFrame"],[3101,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3138,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3139,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3140,"impl-Div%3C%26Series%3E-for-DataFrame"],[3170,"impl-Display-for-DataFrame"],[3171,"impl-Debug-for-DataFrame"],[3176,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3177,"impl-From%3C%26Schema%3E-for-DataFrame"],[3205,"impl-Index%3Cusize%3E-for-DataFrame"],[3206,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3207,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3208,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3209,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3210,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3211,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3212,"impl-Index%3C%26str%3E-for-DataFrame"],[3237,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3238,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3239,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3254,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3255,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3256,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3288,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3289,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3290,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3309,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3310,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3481,"impl-Display-for-GroupByMethod"],[3482,"impl-Debug-for-GroupByMethod"],[3488,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3489,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3490,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3525,"impl-IntoIterator-for-%26GroupsIdx"],[3526,"impl-IntoIterator-for-GroupsIdx"],[3528,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3529,"impl-IntoParallelIterator-for-GroupsIdx"],[3884,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3885,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4009,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4010,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4011,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4044,"impl-Debug-for-PolarsError"],[4045,"impl-Display-for-PolarsError"],[4048,"impl-Display-for-Arc%3CT,+A%3E"],[4049,"impl-Pointer-for-Arc%3CT,+A%3E"],[4050,"impl-Debug-for-Arc%3CT,+A%3E"],[4060,"impl-From%3CError%3E-for-PolarsError"],[4061,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4062,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4064,"impl-From%3CError%3E-for-PolarsError"],[4068,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4069,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4070,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4071,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4073,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4074,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4075,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4076,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4077,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4078,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4079,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4080,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4081,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4082,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4083,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4420,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4421,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4422,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4423,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4424,"impl-From%3CArrowSchema%3E-for-Schema"],[4425,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4494,"impl-Add-for-Series"],[4495,"impl-Add%3CT%3E-for-Series"],[4496,"impl-Add-for-%26Series"],[4497,"impl-Add%3CT%3E-for-%26Series"],[4558,"impl-Div-for-%26Series"],[4559,"impl-Div%3CT%3E-for-Series"],[4560,"impl-Div%3CT%3E-for-%26Series"],[4561,"impl-Div-for-Series"],[4572,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4573,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4574,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4575,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4576,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4577,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4595,"impl-Display-for-Series"],[4596,"impl-Debug-for-Series"],[4607,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4608,"impl-FromIterator%3CString%3E-for-Series"],[4609,"impl-FromIterator%3C%26i32%3E-for-Series"],[4610,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4611,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4612,"impl-FromIterator%3C%26f64%3E-for-Series"],[4613,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4614,"impl-FromIterator%3C%26str%3E-for-Series"],[4615,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4616,"impl-FromIterator%3C%26u64%3E-for-Series"],[4617,"impl-FromIterator%3Cf32%3E-for-Series"],[4618,"impl-FromIterator%3C%26i64%3E-for-Series"],[4619,"impl-FromIterator%3Cbool%3E-for-Series"],[4620,"impl-FromIterator%3Ci64%3E-for-Series"],[4621,"impl-FromIterator%3C%26bool%3E-for-Series"],[4622,"impl-FromIterator%3Cf64%3E-for-Series"],[4623,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4624,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4625,"impl-FromIterator%3C%26u32%3E-for-Series"],[4626,"impl-FromIterator%3Cu32%3E-for-Series"],[4627,"impl-FromIterator%3Ci32%3E-for-Series"],[4628,"impl-FromIterator%3C%26f32%3E-for-Series"],[4629,"impl-FromIterator%3Cu64%3E-for-Series"],[4630,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4631,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4632,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4633,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4634,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4635,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4647,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4648,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4649,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4650,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4651,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4652,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4689,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4690,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4691,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4692,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4693,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4694,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4708,"impl-Mul%3CT%3E-for-%26Series"],[4709,"impl-Mul-for-Series"],[4710,"impl-Mul-for-%26Series"],[4711,"impl-Mul%3CT%3E-for-Series"],[4717,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4718,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4719,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4720,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4721,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4722,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4723,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4724,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4725,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4726,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4727,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4728,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4729,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4730,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4731,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4732,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4733,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4734,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4735,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4736,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4737,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4738,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4739,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4740,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4741,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4742,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4743,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4744,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4745,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4746,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4747,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4748,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4749,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4750,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4751,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4756,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4757,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4758,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4759,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4760,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4761,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4770,"impl-Rem-for-%26Series"],[4771,"impl-Rem%3CT%3E-for-%26Series"],[4772,"impl-Rem%3CT%3E-for-Series"],[4800,"impl-Sub-for-Series"],[4801,"impl-Sub%3CT%3E-for-%26Series"],[4802,"impl-Sub-for-%26Series"],[4803,"impl-Sub%3CT%3E-for-Series"],[4826,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4827,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4829,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4830,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5000,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5001,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5003,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5004,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5006,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5007,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAE4NlQ3SDdUN1g3XDdgN2Q3eDeEN5g3nDQwO","e":"OzAAAAEAANAO5wEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoADAA+AAAAQQACAEUABABNAAMAUgAAAFQACwBhAAAAYwACAGkAAgBtAAAAcgAMAIEAAwCGAAEAiQAFAJEAAQCVAAYAngADAKQAAwCpAAUAsAABALUABQC9AAIAwwAEAMkAAwDQAAEA1AABANcABgDjAAsA8wADAPkABQAAARkAHgEDACMBAAAlAQQAKwEBADEBAAAzAQQAOQEAAD4BBQBGAQEASgELAFwBAQBiAQAAZgEIAHABCAB6AQAAfAEEAIMBAACFASMAqgEpANgBAgDeASMACAIFABICAAAUAiYAPQJMAJECDAClAjcA4AIJAOwCAQDwAgEA8wIfAB0DAAAfAwAAJQMLADUDCABAAwIARQMBAEkDCgBaAwEAXwMBAGUDCQB4AwEAfgMCAIsDCACaAwIAnwMIAKoDBACxAxMAxgMHAM8DAADRAwAA1AMCANkDDgDpAwAA6wMAAO4DAwDzAwIA9wMBAPoDBwADBAAABQQFAA0EAQAQBAAAEgQBABUEAwAaBAMAHwQCACMEAwApBAAALAQAADQEAAA5BAAAPAQBAEEEAQBEBAAARwQAAE8EAABYBAIAXQQFAGUEAgBqBAEAbQQAAG8EAQB1BAEAeAQBAH8EAQCFBAAAiAQAAIsEAACNBAAAjwQAAJEEAACWBAQAnQQBAKAEBwCpBAIArwQAALEEAwC2BAEAuQQFAMUEFQDcBAEA4AQEAOYEAwDtBAYA9wQPAAkFCwAWBQEAGQUDACkFCQA+BQ0ATgUCAFIFBQBaBQAAXAUMAGwFAABuBQAAcwUBAHYFAAB4BQIAfAUAAH4FAACBBQAAhAUAAIYFAQCJBQAAiwUCAI8FDACdBQAAnwUBAKIFAACkBQEApwUAAKkFAQCsBQAArgUBALEFAAC1BQAAuQUBAL0FAADABQAAwgUAAMQFAwDJBQAAzAUIANYFAQDZBQUA4AUBAOQFAADmBQAA6wUCAO8FAQDyBQAA9AUBAPcFAAD5BQEA/AUAAP4FAQABBgAAAwYBAAYGAAAIBgAACwY7AE0GBABUBgkAYAYEAGYGCABwBgAAcgauACIHBwArB3YAowcBAKYHRQD0BwQA/AcDAAEIAQAYCAAAGggAABwIFwA4CCQAXwgGAGgIHgCNCD8AzwgAAPMICgAACQAAAgkBAAUJAQAICQAADQkFABQJAAAXCQIAHAkDACEJAAAjCRwAQQkJAEwJDgBcCRsAeQkGAIEJGgCdCRUAtAkLAMEJAADGCQAAyAkAAM0JHQDtCQIA8QlRAEQKLAByCkwAwAoEAMYKAQDJCgIAzQoEANMKIwD+CgIAAgsJABALAwAVCxcALwsBADILBAA4Cw0ARwsFAE4LAABQCxUAZwsBAG0LAgByCwEAdgsJAIELBACHCwEAjAsAAI4LAgCSCwEAlQsAAJcLAQCdCxgAtwsKAMQLAwDKCwQA0AskAPYLBQD9CwkACgwAAA0MCgAZDAUAJAwQADcMEgBLDAAAUgwBAFYMAgBaDAAAXAwAAGEMAwBpDAEAbAwAAHsMAAB+DAEAhgwMAJkMAQCmDAIArQwBALcMAgC/DAAAwgwAAMgMAADRDAEA1AwAANcMBADiDAQA6gwGAPMMCQD+DAAAAg0EAA4NDQAdDQIAIg0KAC4NAQAxDQMANg0DADsNCQBGDQcATw0BAFINGABsDSgAlg0GAKENAgCmDQAAqQ0DAK8NAAC0DQcAxA0NANMNAQDaDQMA3w0BAOMNAgDoDQAA6g0fAA0ODAAcDgUAIw4HACwOFgBFDgsAUg4OAGIOAABkDgAAZg4DAG0OBgB3Dg4AiA4BAIsOEQCfDgQApw4FAK8OCQC6DgIAvw4HAMgODwDZDhYA8Q4jABcPEAApDwAAKw8BAC8PHABODwIAUg8SAGYPBgBwDwEAdQ8iAJsPAgCfDwwArQ8bAMsPFADhDwEA6Q8AAPsPAAAAEAAAAxAAAAoQAAANEAAAEhABABUQBgAeEBEAPxADAEQQAgBIEAEASxABAGYQAgBsEAQAcxAAAHYQBwCAEAAAghABAIcQLQC+EAwAzBAAAM4QDADgEAkA7BAGAPQQAAD2EBwAFBEAABYRCwAjEQAAJREBAC4RBAA1EQUAPBEOAEwRAQBUEQEAVxEBAFsRAQBvEQAAcREAAHMRAAB3EQMAfREEAIMRAwCIEQQAjxEDAJgRAACeEQIAphEFAK0RBgC3EQMAvxECAMMRAQDHEQ8A2xEBAN4RAQDhEQEA5RECAPMRAwD5EQAA/REAAP8RHgAhEgAAKBIBACwSAQAvEgAANRIEAD0SAwBJEgMAUxIDAF0SAABlEgMAbhIZAIkSBwCTEgMAmRIBAJ0SAQCjEgIAqRIAAK0SAgC0EgEAuBIBAL8SAADBEgMA1BIBANcSCwDkEgIA7hIBAPQSAgD4EgAA+hIaABgTAgAdEw4ALRMBADATBQA3EwoAQxMAAEUTAABHEwQATRMEAFMTBABaEwAAXRMAAGATCQBrEwIAcBMMAH8TBQCIEwgAkhMFAJsTDQCqEwAArBMCALATCAC6EwQA"}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode_and_compress","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_writer","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","maintain_order","new","row_group_size","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[80,"polars_io::avro"],[146,"polars_io::cloud"],[216,"polars_io::cloud::options"],[395,"polars_io::csv"],[397,"polars_io::csv::read"],[651,"polars_io::csv::read::schema_inference"],[675,"polars_io::csv::write"],[815,"polars_io::ipc"],[1068,"polars_io::json"],[1164,"polars_io::mmap"],[1186,"polars_io::ndjson"],[1188,"polars_io::ndjson::core"],[1268,"polars_io::parquet"],[1271,"polars_io::parquet::metadata"],[1323,"polars_io::parquet::read"],[1459,"polars_io::parquet::write"],[1641,"polars_io::partition"],[1657,"polars_io::pl_async"],[1678,"polars_io::predicates"],[1732,"polars_io::prelude"],[1742,"polars_io::utils"],[1754,"dyn_clone::sealed"],[1755,"polars_io::options"],[1756,"polars_io::shared"],[1757,"alloc::boxed"],[1758,"std::io"],[1759,"core::result"],[1760,"serde::de"],[1761,"std::path"],[1762,"polars_core::frame"],[1763,"polars_error"],[1764,"core::fmt"],[1765,"core::hash"],[1766,"polars_arrow::record_batch"],[1767,"core::option"],[1768,"serde::ser"],[1769,"core::any"],[1770,"polars_io::avro::read"],[1771,"polars_arrow::datatypes::schema"],[1772,"polars_io::avro::write"],[1773,"polars_core::schema"],[1774,"alloc::string"],[1775,"alloc::vec"],[1776,"polars_io::cloud::glob"],[1777,"object_store"],[1778,"alloc::sync"],[1779,"polars_io::cloud::polars_object_store"],[1780,"polars_io::cloud::adaptors"],[1781,"std::io::error"],[1782,"crossterm::command"],[1783,"url"],[1784,"object_store::path"],[1785,"bytes::bytes"],[1786,"core::ops::range"],[1787,"core::ops::function"],[1788,"parquet_format_safe::thrift::varint::decode"],[1789,"object_store::aws::builder"],[1790,"object_store::azure::builder"],[1791,"object_store::gcp::builder"],[1792,"core::convert"],[1793,"core::iter::traits::collect"],[1794,"polars_io::csv::read::reader"],[1795,"polars_io::csv::read::read_impl::batched"],[1796,"polars_io::csv::read::options"],[1797,"std::fs"],[1798,"polars_core::datatypes::dtype"],[1799,"polars_io::csv::write::writer"],[1800,"polars_io::csv::write::options"],[1801,"core::num::nonzero"],[1802,"polars_io::ipc::ipc_stream"],[1803,"polars_io::ipc::write"],[1804,"futures_io::if_std"],[1805,"core::marker"],[1806,"polars_io::ipc::ipc_file"],[1807,"polars_io::ipc::ipc_reader_async"],[1808,"polars_arrow::io::ipc::read::file"],[1809,"polars_arrow::array::struct_"],[1810,"polars_arrow::array"],[1811,"polars_arrow::datatypes"],[1812,"polars_arrow::datatypes::field"],[1813,"polars_arrow::array::growable::structure"],[1814,"polars_arrow::array::struct_::mutable"],[1815,"polars_arrow::bitmap::immutable"],[1816,"polars_arrow::scalar"],[1817,"polars_arrow::array::struct_::iterator"],[1818,"polars_arrow::bitmap::utils::iterator"],[1819,"polars_arrow::bitmap::utils::zip_validity"],[1820,"polars_parquet::parquet::metadata::file_metadata"],[1821,"polars_parquet::parquet::metadata::column_order"],[1822,"polars_parquet::parquet::metadata::row_metadata"],[1823,"polars_parquet::arrow::read::statistics"],[1824,"parquet_format_safe::parquet_format"],[1825,"polars_parquet::parquet::metadata::schema_descriptor"],[1826,"polars_parquet::parquet::error"],[1827,"polars_io::parquet::read::reader"],[1828,"polars_io::parquet::read::read_impl"],[1829,"polars_io::parquet::read::options"],[1830,"polars_core::series"],[1831,"polars_io::parquet::write::writer"],[1832,"polars_io::parquet::write::batched_writer"],[1833,"polars_io::parquet::write::options"],[1834,"polars_parquet::parquet::write"],[1835,"core::iter::traits::iterator"],[1836,"polars_parquet::arrow::write::file"],[1837,"std::sync::mutex"],[1838,"core::future::future"],[1839,"tokio::runtime::task::join"],[1840,"polars_core::datatypes::field"],[1841,"avro_schema::file"],[1842,"polars_io::cloud::object_store_setup"],[1843,"polars_io::csv::read::parser"],[1844,"polars_io::csv::read::utils"],[1845,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,16,8,5,6,5,6,5,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,44,39,43,44,39,43,39,0,43,43,39,44,39,43,44,39,43,44,44,39,43,39,44,39,44,39,43,44,39,43,39,43,43,43,0,43,44,39,43,44,39,43,44,39,43,44,0,39,44,39,44,43,44,39,43,44,39,43,44,39,43,44,39,43,44,44,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,38,58,59,60,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,38,58,59,60,38,58,59,60,38,38,61,58,59,60,38,61,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,58,58,58,59,59,59,60,60,60,38,58,59,60,38,61,58,59,60,61,58,59,60,38,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,58,59,60,38,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,61,58,59,60,38,38,38,0,0,76,76,0,0,0,0,0,0,74,75,76,0,0,75,74,72,73,74,75,76,66,66,66,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,72,73,74,75,76,72,73,74,75,76,72,73,0,73,72,73,74,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,73,72,73,74,75,76,72,72,72,73,73,73,74,74,74,75,75,75,76,76,76,66,72,73,74,75,76,71,70,66,72,73,74,75,75,76,72,72,72,73,74,75,76,72,0,72,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,0,72,72,73,72,72,66,75,75,75,71,70,73,72,72,72,73,72,72,72,72,72,0,72,73,72,73,74,75,76,72,72,72,73,74,75,76,73,71,70,66,72,73,74,75,76,71,70,66,72,73,74,75,76,72,73,71,70,66,72,73,74,75,76,72,71,70,66,72,73,74,75,76,72,72,73,73,72,73,73,72,72,72,72,73,72,72,73,72,72,72,73,72,72,72,72,72,72,73,72,72,73,73,0,79,79,79,79,79,79,79,79,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,86,0,0,0,86,86,86,0,0,84,85,86,84,82,82,83,84,85,86,82,83,84,85,86,84,85,86,84,85,86,85,85,84,85,86,82,83,84,85,86,82,83,84,85,86,84,85,86,82,83,84,85,86,84,85,86,84,84,84,85,85,85,86,86,86,82,83,85,84,85,86,82,83,84,85,86,84,85,86,82,84,82,84,82,83,84,85,86,82,83,84,85,86,85,84,82,82,85,85,85,85,84,85,86,84,85,84,85,86,82,83,84,85,86,82,83,84,85,86,82,83,84,85,86,82,83,84,85,86,82,82,82,82,82,82,82,82,82,82,83,0,0,0,0,0,0,0,0,0,0,0,0,97,97,94,95,96,97,88,89,89,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,95,96,97,94,95,96,97,96,98,101,102,98,101,102,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,94,96,97,96,96,96,97,97,97,101,102,103,88,104,89,90,103,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,98,94,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,96,94,103,98,103,88,104,101,89,102,89,103,88,94,96,97,103,88,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,98,88,104,101,89,90,102,94,95,96,97,103,88,104,101,89,102,101,102,103,88,104,89,95,103,88,95,103,88,95,95,90,0,110,0,110,0,0,0,106,110,107,109,108,106,110,107,109,108,106,106,106,106,110,107,109,108,106,110,107,109,108,106,106,110,107,109,108,106,106,106,106,106,107,108,106,110,107,109,108,106,106,108,110,107,109,108,106,110,107,109,108,106,106,107,109,108,106,108,106,110,107,109,108,106,110,107,109,108,106,110,107,109,108,106,110,107,109,108,106,108,108,107,108,108,108,108,109,81,81,0,81,0,81,81,81,81,81,81,81,81,81,81,68,68,0,81,81,81,81,0,0,0,0,113,113,113,113,118,113,118,113,113,113,113,113,118,113,118,113,118,113,113,113,113,118,113,118,113,113,113,118,113,118,118,113,118,113,113,113,113,113,118,118,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,118,113,118,113,113,118,113,113,113,113,113,118,113,118,118,118,118,118,118,118,118,113,113,0,0,0,0,0,0,127,130,127,130,127,127,127,127,127,127,130,127,130,127,0,130,130,127,130,130,127,130,130,127,130,127,130,127,127,127,127,130,130,130,127,127,127,127,127,130,127,127,130,127,130,127,127,130,127,140,0,140,140,0,0,0,0,140,139,140,136,138,137,136,138,139,140,137,136,138,139,140,139,140,139,140,140,137,136,138,139,140,137,136,138,139,140,139,140,137,136,138,139,140,139,140,139,139,139,140,140,140,136,138,137,139,140,137,136,138,139,140,138,136,138,139,140,137,136,138,139,140,137,136,138,139,140,137,137,137,139,0,137,136,137,136,138,139,136,138,137,136,138,139,140,136,136,138,139,140,137,136,138,139,140,137,136,138,139,140,137,136,138,139,140,136,138,139,137,136,138,139,140,136,136,138,136,138,136,138,136,138,136,138,136,0,146,0,146,0,146,146,0,0,0,0,146,146,146,0,145,146,147,148,149,143,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,146,147,148,149,145,146,147,148,149,145,145,145,146,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,146,147,148,149,144,143,145,146,147,148,149,144,145,146,147,148,149,145,145,145,146,146,146,147,147,147,148,148,148,149,149,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,144,145,146,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,145,143,145,145,146,147,148,149,143,145,145,146,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,147,148,149,144,143,145,146,147,148,149,144,143,145,146,147,148,149,143,143,143,143,144,144,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,159,159,159,159,159,159,159,159,0,159,159,161,159,159,159,0,159,159,0,0,0,0,0,0,67,165,164,165,164,164,165,164,165,164,165,164,165,164,165,67,165,164,165,164,165,165,165,165,165,164,165,164,165,164,165,164,165,164,164,165,164,163,165,165,165,165,164,165,164,165,164,165,164,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}{{{b{hEh}}}f}11{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hEh}}}{{En{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{F`}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{Ff{Af}}}{{Bd{Fd}}}}{{{b{Ef}}{b{Fb}}{b{{Fh{{Ff{Af}}}}}}}{{Bd{{Dh{Fd}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Fb}}}{{Bd{Fj}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Eh}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Fb}{{Bd{Eh}}}}``{{{b{hc}}e}{{Ah{{b{hg}}Ej}}}{}El{}}`{{{b{hc}}i}{{Ah{gEj}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEh}}{b{{Fh{G`}}}}}{{En{Af}}}}{{{b{hc}}e}{{Ah{AfEj}}}{}Gb}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Dj}}}}{{{b{Gf}}}{{b{Dj}}}}{{{b{Gh}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Dl}}}Dl}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Dl}}}Aj}{c{{Ah{Gd}}}Aj}{c{{Ah{Gf}}}Aj}{c{{Ah{Gh}}}Aj}{Aff}0000{{{b{Dl}}{b{Dl}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gd}}{b{Gd}}}Al}{{{b{Gf}}{b{Gf}}}Al}{{{b{Gh}}{b{Gh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gd}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gf}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gjc}}}{}}{{{b{Dj}}}{{Ah{Gd}}}}{{{b{Dj}}}{{Ah{Gf}}}}{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{Gl{Dj}}}{{Gn{Df}}}{{Hb{}{{H`{{Ed{ce}}}}}}}}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gd}}{b{hc}}}fBj}{{{b{Gf}}{b{hc}}}fBj}{{{b{Gh}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Dl}}c}AhCd}{{{b{Gd}}c}AhCd}{{{b{Gf}}c}AhCd}{{{b{Gh}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gdc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Gfc}}}}}}}}{{Dle}Dl{{Gn{Df}}}{{Hb{}{{H`{{Ed{Ghc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Cb{{Eb{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Ab{Hh}}}}{Cb{Hj}}}{{Bd{Hl}}}}{{{b{h{Hd{c}}}}}{{Bd{Hn}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{c}}{b{he}}}f{}{}}0000``{{{b{An}}G`{Cb{G`}}{Cb{{b{If}}}}G`Al}{{Bd{Af}}}}`{{}I`}{{}Ib}{{}Id}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{I`}}}Aj}{c{{Ah{Ib}}}Aj}{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{Aff}0000000```{{{b{I`}}{b{I`}}}Al}{{{b{Ib}}{b{Ib}}}Al}{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hd{c}}}{{Bd{Bb}}}Hh}{{{b{I`}}{b{hBf}}}Bh}{{{b{Ib}}{b{hBf}}}Bh}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{cc{}}00000{{{b{Dj}}}If}11{{{b{I`}}}{{Eb{Ib}}}}`{{{b{I`}}{b{hc}}}fBj}{{{b{Ib}}{b{hc}}}fBj}{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}```{{}Af}0000000{ce{}{}}0000000{{I`c}{{Hd{c}}}Hh}{{{b{{Fh{G`}}}}}Al}`{{I`c}I`{{Ij{Ib}{{Fl{Ib}}}}}}```{c{{Hd{c}}}Hh}<{DfIf}{G`If}{{{b{hHn}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hHl}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}`````````````{{{b{I`}}c}AhCd}{{{b{Ib}}c}AhCd}{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{I`{Cb{An}}}{{Bd{{Hd{Il}}}}}}`{{{b{c}}}Cf{}}0000000{{{b{hI`}}{b{In}}}f}{ce{}{}}0000000{{I`Af}I`}{{I`{Cb{{Eb{{Dh{Df}}}}}}}I`}{{Ib{Cb{c}}}Ib{{Gn{If}}}}{{IbAl}Ib}{{I`{Cb{{Eb{{Dh{J`}}}}}}}I`}{{IbId}Ib}{{IbG`}Ib}{{I`Al}I`}0{{I`{Cb{Af}}}I`}1500{{Ib{Cb{Ih}}}Ib}{{I`Ib}I`}{{I`{Cb{c}}}I`{{Gn{An}}}}{{I`{Cb{{Eb{{Dh{Af}}}}}}}I`}{{Ib{Cb{G`}}}Ib}66{{I`{Cb{j}}}I`}>{{I`{Cb{Hj}}}I`}09??<<`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{In}}}In}{{{b{c}}{b{he}}}f{}{}}{{}In}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{In}}{b{hBf}}}Bh}{cc{}}{{{b{In}}}Af}{{{b{In}}}Hj}{{{b{Jb}}G`{Cb{Af}}Al{Cb{{b{Dd}}}}AfAf{Cb{{b{If}}}}{Cb{G`}}G`{Cb{{b{Ih}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}{{}Af}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}{{{b{Jb}}{b{I`}}}{{Bd{In}}}}1{{{b{c}}}Cf{}}4{{InHj}In}`````````{{{b{c}}d}f{}}00`{{{Jd{c}}{b{Dd}}}{{Bd{{Jf{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{{b{Jl}}}Jl}{{{b{c}}{b{he}}}f{}{}}00``{{}Jh}{{}Jj}{{}Jl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jh}}}Aj}{c{{Ah{Jj}}}Aj}{c{{Ah{Jl}}}Aj}{Aff}0000{{{b{Jh}}{b{Jh}}}Al}{{{b{Jj}}{b{Jj}}}Al}{{{b{Jl}}{b{Jl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jd{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jf{c}}}}}{{Bd{f}}}Ad}`{{{b{Jh}}{b{hBf}}}Bh}{{{b{Jj}}{b{hBf}}}Bh}{{{b{Jl}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jh}}{b{hc}}}fBj}{{{b{Jj}}{b{hc}}}fBj}{{{b{Jl}}{b{hc}}}fBj}{{{Jd{c}}Al}{{Jd{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jd{c}}Af}{{Jd{c}}}Ad}{c{{Jd{c}}}Ad}````{{{b{Jh}}c}AhCd}{{{b{Jj}}c}AhCd}{{{b{Jl}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jd{c}}Jn}{{Jd{c}}}Ad}{{{Jd{c}}{Cb{Df}}}{{Jd{c}}}Ad}0{{{Jd{c}}{Cb{Af}}}{{Jd{c}}}Ad}{{{Jd{c}}Df}{{Jd{c}}}Ad}0{{{Jd{c}}G`}{{Jd{c}}}Ad}{{{Jd{c}}Jl}{{Jd{c}}}Ad}14{{{b{h{Jf{c}}}}{b{Bb}}}{{Bd{f}}}Ad}``````````````{{{b{c}}d}f{}}000{{{b{h{K`{c}}}}}{{Bd{Cj}}}Bl}{{{Kb{c}}{b{Dd}}}{{Bd{{Kd{c}}}}}Ad}{{{Kb{c}}{b{Dd}}}{{Bd{{`{c}}}}}{KfKhKj}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{Kl}}}Kl}{{{b{Kn}}}Kn}{{{b{L`}}}L`}{{{b{Lb}}}Lb}{{{b{c}}{b{he}}}f{}{}}000`{{{b{Ld}}{Cb{{b{Lf}}}}}{{Bd{Lh}}}}{{{b{Lj}}c}{{Ab{A`}}}Ad}{{{b{Ll}}c}{{Ab{A`}}}Ad}{{{b{Ld}}{Cb{{b{Lf}}}}KnAl}{{Bd{Bb}}}}{{}Lj}{{}Ll}{{}Kn}{{}L`}{{}Lb}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{Kl}}}Aj}{c{{Ah{L`}}}Aj}{c{{Ah{Lb}}}Aj}{Aff}00000000000{{{b{Kl}}{b{Kl}}}Al}{{{b{L`}}{b{L`}}}Al}{{{b{Lb}}{b{Lb}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{Lj}}}An}{{{b{Ll}}}An}{{{Ln{c}}}{{Bd{Bb}}}Hh}{{{K`{c}}}{{Bd{Bb}}}Bl}{{{b{h{M`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kb{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kd{c}}}}}{{Bd{f}}}Ad}{{{Ln{c}}{Cb{{Eb{Hf}}}}Al}{{Bd{Bb}}}Hh}{{{b{Kl}}{b{hBf}}}Bh}{{{b{L`}}{b{hBf}}}Bh}{{{b{Lb}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Ld}}}}{{{b{Kl}}{b{hc}}}fBj}{{{b{L`}}{b{hc}}}fBj}{{{b{Lb}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Ln{c}}{Cb{An}}}{{Ln{c}}}Hh}{{{b{Ld}}}{{Bd{Lf}}}}{c{{Ln{c}}}Hh}{c{{K`{c}}}Bl}{c{{M`{c}}}Ad}{{}Lj}{c{{Kb{c}}}Ad}{{}Ll}{c{{Kb{c}}}{KfKhKj}}{{{b{h{Ln{c}}}}}{{Bd{Mb}}}Hh}{{{b{h{K`{c}}}}}{{Bd{Dd}}}Bl}{{{b{Kl}}c}AhCd}{{{b{L`}}c}AhCd}{{{b{Lb}}c}AhCd}{{{Ln{c}}Al}{{Ln{c}}}Hh}{{{K`{c}}Al}{{K`{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Ln{c}}{Cb{{Dh{Df}}}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{{Dh{Df}}}}}{{K`{c}}}Bl}{{{M`{c}}{Cb{Lb}}}{{M`{c}}}{}}{{Lj{Cb{Lb}}}Lj}{{{Kb{c}}{Cb{Lb}}}{{Kb{c}}}Ad}{{Ll{Cb{Lb}}}Ll}{{LjAn}Lj}{{LlAn}Ll}{{{Ln{c}}{Cb{Af}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{Af}}}{{K`{c}}}Bl}{{{M`{c}}Al}{{M`{c}}}{}}{{{Kb{c}}Al}{{Kb{c}}}Ad}{{Knc}Kn{{Gn{{Cb{{Eb{Hf}}}}}}}}{{{Ln{c}}{Cb{{Dh{Af}}}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{{Dh{Af}}}}}{{K`{c}}}Bl}{{Knc}Kn{{Gn{{Cb{{Dh{Df}}}}}}}}{{{Ln{c}}{Cb{j}}}{{Ln{c}}}Hh}{{{K`{c}}{Cb{j}}}{{K`{c}}}Bl}{{Knc}Kn{{Gn{{Cb{j}}}}}}{{Knc}Kn{{Gn{{Cb{Af}}}}}}{{{b{h{Kd{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Md}}}Md}{{{b{c}}{b{he}}}f{}{}}{{}Md}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Md}}}Aj}{Aff}0000{{{b{Md}}{b{Md}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Mf{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Mh{c}}}{{Bd{Bb}}}Hh}{{{b{Md}}{b{hBf}}}Bh}{cc{}}0000{{{b{Md}}{b{hc}}}fBj}{{{Mh{c}}{Cb{Af}}}{{Mh{c}}}Hh}{{}Af}0000{ce{}{}}0000`{c{{Mf{c}}}Ad}{c{{Mj{c}}}Ad}{c{{Mh{c}}}Hh}{{{b{Md}}c}AhCd}{{{Mh{c}}Al}{{Mh{c}}}Hh}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Mh{c}}Jn}{{Mh{c}}}Hh}4{{{Mf{c}}Ml}{{Mf{c}}}Ad}{{{Mh{c}}Ml}{{Mh{c}}}Hh}{{{Mh{c}}{Cb{{Dh{Df}}}}}{{Mh{c}}}Hh}{{{Mh{c}}Hj}{{Mh{c}}}Hh}{{{Mh{c}}{b{Dd}}}{{Mh{c}}}Hh}{{{b{h{Mj{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{{{b{Jb}}}{{b{{Fh{G`}}}}}}{Af{{b{hc}}}{}}{Aff}{{{b{c}}}JbHh}{cc{}}{{}Af}{ce{}{}}{{{b{Hh}}}{{Cb{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Cb{{b{Il}}}}}}{{{b{Mn}}}{{Bd{Il}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Af}}}{{Bd{Dd}}}N`}``{{{b{c}}d}f{}}{Nb{{Eb{Nd}}}}{{{b{Nb}}}{{b{Nf}}}}{{{b{hNb}}}{{b{hNf}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nb{{Ab{Nd}}}}{{{b{Nb}}}Nb}{{{b{c}}{b{he}}}f{}{}}{{{b{Nb}}}{{b{Nh}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{Nb}}{b{Nb}}}Al}{{{b{Nb}}{b{{b{Nd}}}}}Al}{{{b{Nb}}}{{b{{Fh{Nj}}}}}}{{{Nl{c}}}{{Bd{Bb}}}Hh}{{{b{Nb}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{NnNb}{O`Nb}2{c{{Bd{{Nl{Il}}}}}{{Gn{An}}}}{{{b{Nh}}}{{b{{Fh{Nj}}}}}}{{{Nl{c}}{Cb{Af}}}{{Nl{c}}}Hh}{{}Af}0{ce{}{}}0{Nb{{Ed{{Dh{Nj}}{Dh{{Ab{Nd}}}}{Cb{Ob}}}}}}{{{b{Nb}}}}{{{b{Nb}}}{{Oj{{Dh{{Ab{Od}}}}OfOh}}}}{{{b{Nb}}}Af}{{{Nl{c}}Al}{{Nl{c}}}Hh}{c{{Nl{c}}}Hh}{{Nh{Dh{{Ab{Nd}}}}{Cb{Ob}}}Nb}{NhNb}{{NhAf}Nb}{{{b{hNb}}{Cb{Ob}}}f}{{{b{hNb}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{NbAfAf}Nb}0{{{b{hNb}}}{{Cb{Ob}}}}{{{b{Nb}}}{{Ab{Nd}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000{{Nh{Dh{{Ab{Nd}}}}{Cb{Ob}}}{{Ah{NbOl}}}}{{{b{c}}}Cf{}}0{{{b{Nb}}}{{Cb{{b{Ob}}}}}}0{{{b{Nb}}}{{b{{Fh{{Ab{Nd}}}}}}}}{{{b{Nb}}}Of}{ce{}{}}0{{{Nl{c}}{Cb{Jn}}}{{Nl{c}}}Hh}{{{Nl{c}}Al}{{Nl{c}}}Hh}{{{Nl{c}}{Cb{Af}}}{{Nl{c}}}Hh}0{{{Nl{c}}{Cb{e}}}{{Nl{c}}}Hh{{Gn{An}}}}2{{{Nl{c}}Hj}{{Nl{c}}}Hh}{{{Nl{c}}{b{Dd}}}{{Nl{c}}}Hh}{{{b{Nb}}{Cb{Ob}}}{{Ab{Nd}}}}{{Nb{Cb{Ob}}}Nb}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{On}}}On}{{{b{c}}{b{he}}}f{}{}}{{{b{On}}Af}A@`}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Nj}}{b{A@b}}}{{Ah{A@dOl}}}}`{Aff}0{{{b{A@d}}{b{A@d}}}Al}{{{b{A@d}}{b{hBf}}}{{Ah{fDb}}}}{{{b{On}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{A@fA@d}1{{}Af}0{ce{}{}}0{OnA@h}{{{b{On}}}{{b{{Cb{{Dh{A@j}}}}}}}}``````{{{b{On}}}{{b{A@l}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{A@h{{Ah{OnA@n}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{AA`{c}}Af}{{Bd{AAb}}}Hh}{{AAdAf}{{Bd{AAb}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAf}}}AAf}{{{b{AAh}}}AAh}{{{b{c}}{b{he}}}f{}{}}0{{}AAh}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAf}}}Aj}{c{{Ah{AAh}}}Aj}{Aff}0000{{{b{AAf}}{b{AAf}}}Al}{{{b{AAh}}{b{AAh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{AA`{c}}}{{Bd{Bb}}}Hh}{AAd{{Bd{Bb}}}}{{{b{AAb}}Af}Al}{{{b{AAf}}{b{hBf}}}Bh}{{{b{AAh}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{Mb}}{Cb{AAj}}}{{Bd{AAd}}}}{{{b{h{AA`{c}}}}}{{Bd{{b{AAj}}}}}Hh}{{{b{hAAd}}}{{Bd{{b{AAj}}}}}}{{{b{AAf}}{b{hc}}}fBj}{{{b{AAh}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AAb}}}Al}`0`{{{Cb{{b{{Fh{Af}}}}}}{b{Cj}}{Cb{{b{{Fh{AAl}}}}}}{Cb{{b{j}}}}}Bb}`{c{{AA`{c}}}Hh}{{{b{hAAb}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{AA`{c}}}}}{{Bd{Af}}}Hh}{{{b{hAAd}}}{{Bd{Af}}}}`{{{AA`{c}}AAh}{{AA`{c}}}Hh}{{AAdAAh}AAd}{{{b{AAb}}}{{b{Mb}}}}{{{b{h{AA`{c}}}}}{{Bd{Mb}}}Hh}{{{b{hAAd}}}{{Bd{Mb}}}}{{{b{AAf}}c}AhCd}{{{b{AAh}}c}AhCd}{{{AA`{c}}Al}{{AA`{c}}}Hh}0{{AAdAl}AAd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{AA`{c}}{Cb{{Dh{Df}}}}}{{AA`{c}}}Hh}{{{AA`{c}}{Cb{{Dh{AAl}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Dh{AAl}}}}}AAd}{{{AA`{c}}{Cb{Af}}}{{AA`{c}}}Hh}{{AAd{Cb{Af}}}AAd}{{{AA`{c}}{Cb{{Eb{Hf}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Eb{Hf}}}}}AAd}{{{AA`{c}}{Cb{{Dh{Af}}}}}{{AA`{c}}}Hh}{{AAd{Cb{{Dh{Af}}}}}AAd}{{{AA`{c}}{Cb{j}}}{{AA`{c}}}Hh}{{AAd{Cb{j}}}AAd}{{{AA`{c}}{Cb{Mb}}}{{AA`{c}}}Hh}```````````````{{{b{c}}d}f{}}0000{{{AAn{c}}{b{Dd}}}{{Bd{{AB`{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}000000{{{b{hc}}}{{b{he}}}{}{}}000000{{{b{ABb}}}ABb}{{{b{ABd}}}ABd}{{{b{ABf}}}ABf}{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{{b{c}}{b{he}}}f{}{}}0000``{{}ABb}{{}ABd}{Af{{b{c}}}{}}000000{Af{{b{hc}}}{}}000000{c{{Ah{ABb}}}Aj}{c{{Ah{ABd}}}Aj}{c{{Ah{ABf}}}Aj}{c{{Ah{ABh}}}Aj}{c{{Ah{ABj}}}Aj}{Aff}000000{{{b{{AB`{c}}}}{b{Bb}}}{{`{{ABn{}{{H`{{Bd{{ABl{Ol}}}}}}}}}}}Ad}{{{b{ABb}}{b{ABb}}}Al}{{{b{ABd}}{b{ABd}}}Al}{{{b{ABf}}{b{ABf}}}Al}{{{b{ABh}}{b{ABh}}}Al}{{{b{ABj}}{b{ABj}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{b{{AB`{c}}}}}{{Bd{AC`}}}Ad}{{{AAn{c}}{b{hBb}}}{{Bd{AC`}}}Ad}{{{b{ABb}}{b{hBf}}}Bh}{{{b{ABd}}{b{hBf}}}Bh}{{{b{ABf}}{b{hBf}}}Bh}{{{b{ABh}}{b{hBf}}}Bh}{{{b{ABj}}{b{hBf}}}Bh}{cc{}}000000{{{b{{AB`{c}}}}}{{b{{ACd{{ACb{c}}}}}}}Ad}{{{b{ABb}}{b{hc}}}fBj}{{{b{ABd}}{b{hc}}}fBj}{{{b{ABf}}{b{hc}}}fBj}{{{b{ABh}}{b{hc}}}fBj}{{{b{ABj}}{b{hc}}}fBj}{{}Af}000000{ce{}{}}000000`{c{{AAn{c}}}{AdAd}}`{{{b{ABb}}c}AhCd}{{{b{ABd}}c}AhCd}{{{b{ABf}}c}AhCd}{{{b{ABh}}c}AhCd}{{{b{ABj}}c}AhCd}{{{AAn{c}}Al}{{AAn{c}}}Ad}`{{{b{c}}}e{}{}}0000{c{{Ah{e}}}{}{}}0000000000000{G`{{Bd{ABf}}}}{ACf{{Bd{ABh}}}}{ACh{{Bd{ABj}}}}{{{b{c}}}Cf{}}000000======={{{AAn{c}}ABd}{{AAn{c}}}Ad}{{{AAn{c}}{Cb{Af}}}{{AAn{c}}}Ad}08{{{b{h{AB`{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{AB`{c}}}}{Dh{{ABl{Ol}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{ACj{c}}{b{Bb}}}{{Bd{f}}}{nKjACl}}{cc{}}{{}Af}{ce{}{}}{{cei}{{ACj{c}}}{nKjACl}{{Gn{An}}}{{Gl{Dj}}}{{Hb{}{{H`{g}}}}}}{c{{Ah{e}}}{}{}}0?2{{{ACj{c}}Al}{{ACj{c}}}{nKjACl}}``{{{b{ACn}}c}{}AD`}{{{b{ACn}}c}{}{AD`Kj}}=<;:97{{}{{b{ACn}}}}76{{{b{ADb}}}AC`}{{{b{ACn}}c}ADd{AD`Kj}}66{{ACfe}{}AD`{{Fn{}{{Fl{c}}}}}}{{{b{c}}}Cf{}}:1````{{{b{hBb}}{Cb{{b{Hf}}}}Al}{{Bd{f}}}}{{{b{Hf}}}{{Cb{{b{ADf}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{ADh}}}{{b{{Fh{ADj}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{ADj}}}Aj}{c{{Ah{ADh}}}Aj}{Aff}0{{{b{ADj}}}{{b{J`}}}}{{{b{Hf}}{b{Bb}}}{{Bd{AAl}}}}{{{b{ADj}}{b{hBf}}}Bh}{{{b{ADh}}{b{hBf}}}Bh}{cc{}}0{AAlADj}{ADlADj}{{{b{ADj}}}{{Cb{{b{AAl}}}}}}00{{{b{ADh}}{b{Dj}}}{{Bd{{b{ADj}}}}}}{{}Af}0{ce{}{}}0{{ADl{Cb{AAl}}{Cb{AAl}}{Cb{AAl}}}ADj}{{Hj{Dh{ADj}}{Cb{Af}}}ADh}{{{b{ADj}}}{{Cb{Af}}}}{{{b{ADh}}}{{Cb{Af}}}}{{{b{ADh}}}{{b{Hj}}}}{{{b{ADj}}c}AhCd}{{{b{ADh}}c}AhCd}{{{b{ADf}}{b{ADh}}}{{Bd{Al}}}};;{{{b{ADj}}}{{Cb{AAl}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fh{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Jb}}}{BlHhADn}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ABn{}{{H`{Af}}}}}}{cAl{{Gl{Mn}}}}{{{Cb{{b{{Fh{Df}}}}}}{b{Dd}}{Cb{{b{{Fh{AAl}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Mn}}}An}","D":"CJn","p":[[1,"reference"],[5,"Private",1754],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1755],[5,"HiveOptions",0,1755],[10,"WriterFactory",0,1756],[10,"SerWriter",1732,1756],[5,"Box",1757],[10,"Write",1758],[1,"usize"],[6,"Result",1759],[10,"Deserializer",1760],[1,"bool"],[5,"PathBuf",1761],[10,"SerReader",1732,1756],[5,"DataFrame",1762],[8,"PolarsResult",1763],[5,"Formatter",1764],[8,"Result",1764],[10,"Hasher",1765],[10,"Read",1758],[10,"ArrowReader",0,1756],[8,"RecordBatch",1766],[6,"Option",1767],[10,"Serializer",1768],[5,"TypeId",1769],[5,"AvroReader",80,1770],[5,"ArrowSchema",1771],[10,"Seek",1758],[6,"AvroCompression",80],[5,"AvroWriter",80,1772],[5,"Error",1764],[5,"Schema",1773],[5,"String",1774],[5,"Vec",1775],[1,"str"],[5,"CloudOptions",216],[5,"CloudLocation",146,1776],[10,"ObjectStore",1777],[5,"Arc",1778],[1,"tuple"],[5,"PolarsObjectStore",146,1779],[5,"CloudWriter",146,1780],[5,"Error",1781],[10,"Command",1782],[8,"Result",1781],[5,"Url",1783],[5,"Path",1784],[5,"Bytes",1785],[5,"Range",1786],[1,"slice"],[5,"ObjectMeta",1777],[17,"Output"],[10,"FnOnce",1787],[1,"u8"],[10,"VarInt",1788],[6,"AmazonS3ConfigKey",216,1789],[6,"AzureConfigKey",216,1790],[6,"GoogleConfigKey",216,1791],[6,"CloudType",216],[10,"AsRef",1792],[10,"Into",1792],[17,"Item"],[10,"IntoIterator",1793],[5,"CsvReader",397,1794],[10,"PhysicalIoExpr",1678],[10,"MmapBytesReader",1164],[8,"SchemaRef",1773],[5,"OwnedBatchedCsvReader",397,1795],[5,"BatchedCsvReader",397,1795],[5,"CsvReadOptions",397,1796],[5,"CsvParseOptions",397,1796],[6,"CsvEncoding",397,1796],[6,"CommentPrefix",397,1796],[6,"NullValues",397,1796],[10,"Fn",1787],[5,"File",1797],[5,"SchemaInferenceResult",651],[6,"DataType",1798],[6,"ReaderBytes",1164],[5,"CsvWriter",675,1799],[5,"BatchedWriter",675,1799],[5,"CsvWriterOptions",675,1800],[5,"SerializeOptions",675,1800],[6,"QuoteStyle",675,1800],[8,"NonZeroUsize",1801],[5,"IpcStreamReader",815,1802],[5,"IpcWriter",815,1803],[5,"BatchedWriter",815,1803],[10,"AsyncWrite",1804],[10,"Unpin",1805],[10,"Send",1805],[5,"IpcScanOptions",815,1806],[5,"IpcReadOptions",815,1807],[5,"IpcWriterOptions",815,1803],[6,"IpcCompression",815,1803],[5,"IpcReaderAsync",815,1807],[5,"FileMetadata",1808],[1,"i64"],[5,"IpcStreamWriterOption",815,1802],[5,"IpcWriterOption",815,1803],[5,"IpcReader",815,1806],[5,"IpcStreamWriter",815,1802],[8,"ArrowSchemaRef",1771],[5,"JsonWriterOptions",1068],[5,"JsonWriter",1068],[5,"JsonReader",1068],[5,"BatchedWriter",1068],[6,"JsonFormat",1068],[5,"Path",1761],[10,"BufRead",1758],[5,"StructArray",1188,1809],[10,"Array",1810],[10,"Any",1769],[6,"ArrowDataType",1811],[5,"Field",1812],[5,"JsonLineReader",1188],[5,"GrowableStruct",1813],[5,"MutableStructArray",1814],[5,"Bitmap",1815],[10,"Scalar",1816],[5,"StructValueIter",1817],[5,"BitmapIter",1818],[6,"ZipValidity",1819],[6,"PolarsError",1763],[5,"FileMetaData",1271,1820],[6,"ColumnOrder",1821],[5,"RowGroupMetaData",1822],[5,"ParquetStatistics",1271],[5,"MutableStatistics",1823],[5,"FileMetaData",1824],[5,"KeyValue",1824],[5,"SchemaDescriptor",1825],[6,"Error",1826],[5,"ParquetReader",1323,1827],[5,"BatchedParquetReader",1323,1828],[5,"ParquetAsyncReader",1323,1827],[5,"ParquetOptions",1323,1829],[6,"ParallelStrategy",1323,1829],[8,"FileMetaDataRef",1271],[5,"Series",1830],[5,"ParquetWriter",1459,1831],[5,"BatchedWriter",1459,1832],[5,"ParquetWriteOptions",1459,1833],[6,"ParquetCompression",1459,1833],[5,"GzipLevel",1459,1833],[5,"BrotliLevel",1459,1833],[5,"ZstdLevel",1459,1833],[8,"RowGroupIterColumns",1459,1834],[10,"Iterator",1835],[1,"u64"],[5,"FileWriter",1836],[5,"Mutex",1837],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1641],[10,"Sync",1805],[5,"RuntimeManager",1657],[10,"Future",1838],[10,"GetSize",1657],[5,"JoinHandle",1839],[10,"StatsEvaluator",1678],[5,"BatchStats",1678],[5,"ColumnStats",1678],[5,"Field",1840],[10,"Sized",1805]],"r":[[0,1756],[1,1755],[2,1755],[3,1756],[4,1756],[5,1756],[81,1770],[82,1772],[83,1841],[146,1776],[147,1780],[148,1779],[157,1842],[184,1776],[219,1789],[224,1790],[248,1791],[399,1795],[400,1796],[401,1796],[402,1796],[403,1796],[404,1794],[408,1796],[409,1795],[449,1843],[529,651],[548,1844],[676,1799],[677,1799],[678,1800],[682,1800],[683,1800],[815,1803],[816,1803],[817,1807],[818,1806],[819,1807],[820,1806],[821,1802],[822,1802],[823,1802],[824,1803],[825,1803],[826,1803],[1189,1809],[1271,1820],[1288,1823],[1324,1828],[1327,1829],[1328,1827],[1329,1829],[1330,1827],[1405,1845],[1459,1832],[1461,1833],[1463,1833],[1466,1833],[1467,1833],[1468,1831],[1469,1834],[1473,1833],[1732,1756],[1733,1756],[1734,0]],"b":[[1208,"impl-PartialEq-for-StructArray"],[1209,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1214,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1215,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1234,"impl-Array-for-StructArray"],[1235,"impl-StructArray"],[1238,"impl-Array-for-StructArray"],[1239,"impl-StructArray"],[1252,"impl-StructArray"],[1253,"impl-Array-for-StructArray"],[1266,"impl-Array-for-StructArray"],[1267,"impl-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAMFoQAAAAEAAwAPABQAAAAWABIAKgACAC8AAwA1AAAANwACADsAAgBAABAAWQAAAFsAFwB2AAMAfQABAIAADQCRAAAAlgAGAJ8ADQCvAAIAtQADALsAAgDDAAAAxQAAAMoADgDfAAEA6wAAAPcAAQD6AAAADwEQACMBMABZAQMAXgEIAGwBHACQAQQAmQEBAJ0BJADDATcA/AEEAAcCAAAKAhEAJgIAACgCAgAvAisAXAIIAGYCBwB+AgAAjAIKAJgCAQCbAgAAnQIGAKUCAACtAhQAxAIhAOgCAgDwAgIA9AIAAPYCBQACAwIACQMDAA4DFgAwAwAAMgMAADUDAAA4AwAAOgMBAD4DAwBDAyEAZgM+AKYDAwC2Aw8A0wMAANUDBwDfAzgAIgQCACcEAAAqBAEALQQAADMEIwBYBAAAXgQAAGAEBABsBBgAhwQBAI0EAQCQBAgAmgQAAJwEAQCfBAYApwQAAKkEBQCwBAoAvAQBAL8EAQDEBAIAygQAAMwEAADTBAAA1QQCANwEBQDjBAEA5gQAAOkEAQDtBAYA+QQAAPsEBgAFBQMACwUEABEFAAATBQEAIQUCACUFAwAqBQEALQUAADAFAAAyBQAANQUwAGsFCQB6BQAAfAUDAIEFAACDBQEAhgUBAIkFAgCNBRIAogUFAKkFAQCsBQIAsAUAALIFAAC0BQEAtwUAALkFAQC8BQAAvgUDAMMFHQDjBTAAFgYEACIGDAA5BgQAQAYjAGkGAABrBgUAcgYAAHQGBAB6BgIAfgYEAIQGAQCHBgAAiQYFAJEGAgCVBgMAmgYHAKQGAQCuBgEAtwYCAL0GCgDJBgAAywYAAM8GAwDVBgEA2QYBAA=="}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPGKFPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPGPPPPPGPPPPPPPPPPGPPPPPPPPPPKPPPPPPPPFPPPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPFPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNONNMNNOOOONNNNNNNNOMNNMNNCOONOONMNNOONNNNOOMNNOOONNNNNNNNONNNNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHCCFKNNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNOOOONONNNONNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","DateOffset","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","DateOffset","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","Nanosecond","Negate","Not","NullCount","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","concat","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","schema_with_arenas","select","select_seq","semi_join","set_cached_arena","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1467,"polars_lazy::dsl::AggExpr"],[1474,"polars_lazy::dsl::BooleanFunction"],[1477,"polars_lazy::dsl::Expr"],[1511,"polars_lazy::dsl::FunctionExpr"],[1555,"polars_lazy::dsl::StringFunction"],[1575,"polars_lazy::dsl::TemporalFunction"],[1577,"polars_lazy::dsl::binary"],[1597,"polars_lazy::dsl::cat"],[1598,"polars_lazy::dsl::dt"],[1654,"polars_lazy::dsl::function_expr"],[1861,"polars_lazy::dsl::function_expr::BooleanFunction"],[1864,"polars_lazy::dsl::function_expr::FunctionExpr"],[1908,"polars_lazy::dsl::function_expr::StringFunction"],[1928,"polars_lazy::dsl::function_expr::TemporalFunction"],[1930,"polars_lazy::dsl::function_expr::cat"],[1932,"polars_lazy::dsl::function_expr::pow"],[1936,"polars_lazy::dsl::function_expr::rolling"],[1968,"polars_lazy::dsl::function_expr::rolling_by"],[1999,"polars_lazy::dsl::function_expr::trigonometry"],[2041,"polars_lazy::dsl::functions"],[2116,"polars_lazy::dsl::python_udf"],[2161,"polars_lazy::dsl::string"],[2222,"polars_lazy::dsl::udf"],[2228,"polars_lazy::frame"],[2666,"polars_lazy::frame::pivot"],[2668,"polars_lazy::physical_plan"],[2670,"polars_lazy::physical_plan::executors"],[2686,"polars_lazy::physical_plan::planner"],[2687,"polars_lazy::prelude"],[3276,"polars_lazy::prelude::DslPlan"],[3331,"polars_lazy::prelude::LiteralValue"],[3334,"dyn_clone::sealed"],[3335,"polars_plan::dsl::meta"],[3336,"polars_plan::dsl::expr"],[3337,"polars_error"],[3338,"core::result"],[3339,"polars_plan::dsl::array"],[3340,"polars_plan::dsl::list"],[3341,"core::convert"],[3342,"polars_plan::dsl::expr_dyn_fn"],[3343,"alloc::sync"],[3344,"polars_core::series"],[3345,"core::option"],[3346,"core::ops::function"],[3347,"core::marker"],[3348,"polars_plan::logical_plan::visitor"],[3349,"polars_plan::dsl::function_expr"],[3350,"polars_core::datatypes::dtype"],[3351,"polars_core::chunked_array::ops::sort::options"],[3352,"polars_plan::dsl::function_expr::schema"],[3353,"polars_core::datatypes::field"],[3354,"core::any"],[3355,"alloc::vec"],[3356,"polars_plan::dsl::binary"],[3357,"core::clone"],[3358,"alloc::string"],[3359,"polars_plan::dsl::udf"],[3360,"polars_plan::dsl::cat"],[3361,"polars_plan::dsl::arity"],[3362,"polars_plan::dsl::function_expr::boolean"],[3363,"polars_plan::dsl::function_expr::cat"],[3364,"polars_plan::dsl::function_expr::datetime"],[3365,"polars_plan::dsl::function_expr::pow"],[3366,"polars_plan::dsl::function_expr::strings"],[3367,"polars_plan::dsl::functions::temporal"],[3368,"polars_plan::dsl::options"],[3369,"polars_core::utils"],[3370,"polars_lazy::dsl::eval"],[3371,"polars_time::windows::duration"],[3372,"polars_time::windows::group_by"],[3373,"polars_core::datatypes::time_unit"],[3374,"serde::de"],[3375,"polars_plan::logical_plan"],[3376,"polars_core::series::ops"],[3377,"polars_plan::dsl::dt"],[3378,"polars_lazy::dsl::list"],[3379,"polars_arrow::legacy::kernels::ewm"],[3380,"polars_plan::dsl::struct_"],[3381,"polars_core::chunked_array::ops"],[3382,"core::fmt"],[3383,"polars_plan::logical_plan::apply"],[3384,"polars_plan::dsl::function_expr::struct_"],[3385,"polars_plan::dsl::function_expr::list"],[3386,"polars_plan::dsl::function_expr::array"],[3387,"polars_plan::dsl::function_expr::range"],[3388,"polars_plan::dsl::function_expr::business"],[3389,"polars_plan::dsl::function_expr::binary"],[3390,"polars_plan::logical_plan::options"],[3391,"polars_core::schema"],[3392,"core::hash"],[3393,"polars_ops::series::ops::interpolation::interpolate"],[3394,"polars_ops::series::ops::is_between"],[3395,"polars_plan::dsl::name"],[3396,"polars_plan::logical_plan::lit"],[3397,"polars_plan::dsl::python_udf"],[3398,"polars_utils::idx_vec"],[3399,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3400,"polars_ops::series::ops::rank"],[3401,"polars_time::group_by::dynamic"],[3402,"polars_core::chunked_array::ops::rolling_window"],[3403,"polars_core::datatypes"],[3404,"polars_core::chunked_array"],[3405,"polars_time::chunkedarray::rolling_window"],[3406,"polars_core::chunked_array::ops::search_sorted"],[3407,"serde::ser"],[3408,"polars_core::series::series_trait"],[3409,"polars_plan::dsl::string"],[3410,"polars_ops::chunked_array::list::to_struct"],[3411,"polars_ops::series::ops::business"],[3412,"polars_arrow::legacy::kernels::time"],[3413,"polars_plan::dsl::function_expr::rolling"],[3414,"polars_plan::dsl::function_expr::rolling_by"],[3415,"polars_plan::dsl::function_expr::trigonometry"],[3416,"polars_core::frame"],[3417,"rayon::iter"],[3418,"pyo3::types::any"],[3419,"pyo3::instance"],[3420,"polars_utils::arena"],[3421,"polars_plan::logical_plan::alp"],[3422,"polars_plan::logical_plan::aexpr"],[3423,"polars_lazy::scan::ndjson"],[3424,"polars_plan::logical_plan::anonymous_scan"],[3425,"polars_lazy::scan::anonymous_scan"],[3426,"polars_utils::index"],[3427,"polars_lazy::frame::exitable"],[3428,"polars_utils::aliases"],[3429,"polars_lazy::scan::csv"],[3430,"polars_lazy::scan::ipc"],[3431,"polars_lazy::scan::parquet"],[3432,"polars_plan::frame::opt_state"],[3433,"polars_lazy::scan::file_list_reader"],[3434,"polars_io::cloud::options"],[3435,"polars_ops::frame::join::args"],[3436,"core::iter::traits::collect"],[3437,"polars_core::frame::explode"],[3438,"std::path"],[3439,"polars_io::options"],[3440,"polars_io::csv::write::options"],[3441,"polars_io::ipc::write"],[3442,"polars_io::json"],[3443,"polars_io::parquet::write::options"],[3444,"smartstring::alias"],[3445,"core::num::nonzero"],[3446,"polars_io::csv::read::options"],[3447,"polars_lazy::physical_plan::executors::executor"],[3448,"polars_expr::state::execution_state"],[3449,"alloc::boxed"],[3450,"chrono_tz::timezones"],[3451,"core::cmp"],[3452,"polars_core::frame::group_by::proxy"],[3453,"polars_core::datatypes::any_value"],[3454,"chrono::naive::datetime"],[3455,"polars_plan::dsl::functions::selectors"],[3456,"polars_plan::dsl::functions::horizontal"],[3457,"polars_plan::dsl::functions::arity"],[3458,"polars_plan::dsl"],[3459,"polars_plan::dsl::functions::range"],[3460,"polars_plan::dsl::functions::index"],[3461,"polars_plan::dsl::functions::coerce"],[3462,"polars_plan::dsl::functions::syntactic_sugar"],[3463,"polars_plan::dsl::functions::business"],[3464,"polars_plan::dsl::functions::concat"],[3465,"polars_plan::dsl::functions::correlation"],[3466,"polars_plan::dsl::functions::repeat"],[3467,"polars_lazy::physical_plan::planner::lp"]],"i":[0,0,0,0,0,0,27,5,0,36,5,54,54,40,5,54,54,27,27,27,66,27,0,27,27,27,58,58,56,5,27,0,27,0,27,5,56,27,0,0,57,27,56,0,0,27,27,5,5,56,27,58,58,58,56,27,36,58,27,27,27,27,27,27,56,56,27,56,0,56,56,27,40,27,27,53,5,56,0,58,27,40,40,27,27,27,27,5,0,27,5,65,0,0,0,27,58,58,58,5,0,0,27,27,5,58,36,27,40,27,5,0,0,27,5,27,57,55,0,65,40,40,27,58,58,58,27,56,36,5,27,27,0,54,54,54,54,54,54,54,56,54,54,54,54,54,56,65,0,58,58,5,27,36,5,58,58,66,27,0,0,5,27,27,40,40,27,58,40,40,36,27,36,27,36,0,56,56,56,36,27,40,56,27,40,56,56,56,40,36,53,56,27,0,54,40,40,5,27,0,40,56,64,58,58,27,27,27,40,27,0,27,36,56,27,27,27,27,27,27,5,0,27,58,27,56,27,58,27,64,0,27,27,56,27,27,27,56,5,0,0,27,27,27,27,27,27,5,58,5,5,0,58,58,58,57,58,36,27,0,58,58,58,58,58,58,0,27,0,5,36,27,58,27,0,5,0,56,56,58,58,58,27,56,27,27,56,56,56,56,56,56,56,27,40,56,0,27,27,27,58,0,27,36,56,56,0,5,5,0,0,56,40,56,58,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,4,4,4,4,5,5,5,5,0,9,10,5,0,63,59,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,63,5,34,36,0,0,5,0,5,0,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,5,5,0,62,44,46,34,47,46,0,5,0,5,5,5,5,5,5,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,69,69,5,0,0,0,0,59,60,61,5,17,17,17,59,60,62,63,64,65,5,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,36,5,53,40,17,17,17,54,55,56,57,58,27,61,62,63,64,65,66,10,5,5,5,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,5,10,5,0,5,0,0,0,5,36,5,5,53,40,17,17,54,55,56,57,58,27,61,62,63,64,65,66,5,5,5,5,53,53,53,40,40,40,54,54,54,55,55,55,56,56,56,57,57,57,58,58,58,61,61,61,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,81,81,5,5,5,5,62,5,5,5,5,5,83,83,83,5,5,5,5,0,10,5,5,17,5,5,34,47,44,87,5,5,53,40,40,17,54,54,55,55,56,56,57,57,58,58,27,27,59,60,61,62,63,64,65,66,46,0,63,62,0,5,48,9,32,10,4,107,83,49,50,51,52,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,53,40,17,17,17,17,17,17,17,17,17,17,17,17,54,55,56,57,58,27,27,27,27,27,59,60,61,62,63,64,64,65,66,46,17,46,0,5,0,10,5,10,5,9,10,5,48,75,15,32,34,87,5,5,4,36,5,5,53,40,54,55,56,57,58,27,61,62,63,64,65,66,10,5,5,59,60,5,0,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,46,0,0,5,5,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,5,104,10,4,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,83,107,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,107,5,0,5,32,32,17,17,5,17,107,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,59,60,60,0,9,10,5,0,61,59,60,5,59,5,9,10,5,5,46,5,5,60,5,5,5,32,32,17,59,60,46,5,5,0,5,0,5,46,5,50,52,4,5,5,5,5,5,0,5,4,5,107,107,5,0,5,5,0,5,5,5,0,5,5,83,0,5,5,32,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,63,63,17,5,10,10,5,5,59,60,36,5,53,40,17,17,17,54,55,56,57,58,27,61,62,63,64,65,66,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,62,5,0,5,5,107,107,0,9,10,5,0,17,10,5,5,5,0,49,51,0,59,60,59,10,5,9,107,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,5,32,5,40,54,55,56,57,58,27,9,10,107,5,5,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,32,32,5,32,34,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,60,0,50,52,61,59,59,60,32,83,60,59,60,59,60,59,60,60,59,60,59,60,32,32,59,60,59,59,60,59,5,59,200,201,202,200,201,202,200,203,204,205,206,207,208,208,209,210,206,211,212,213,214,215,211,210,213,207,216,215,217,216,216,217,209,213,214,215,215,214,212,210,217,206,208,212,218,219,220,221,222,223,224,225,226,227,227,221,222,218,221,222,218,222,218,228,229,223,230,231,232,219,231,233,234,235,236,232,218,237,238,239,240,241,242,233,230,232,243,244,245,246,247,248,249,250,245,246,251,248,249,250,252,253,254,254,251,247,252,253,255,255,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,27,54,54,54,54,27,27,27,27,27,27,27,58,58,56,27,27,0,27,56,27,0,57,27,56,27,27,56,27,58,58,58,56,27,58,27,27,27,27,27,27,56,56,27,56,56,56,27,27,27,56,58,27,27,27,27,27,27,27,58,58,58,27,27,58,27,27,0,27,27,57,55,27,58,58,58,27,56,27,27,54,54,54,54,54,54,54,56,54,54,54,54,54,56,58,58,27,58,58,27,27,27,27,58,27,27,56,56,56,27,56,27,56,56,56,56,27,54,27,56,58,58,27,27,27,27,0,27,56,27,27,27,27,27,27,27,58,27,56,27,58,27,27,27,56,27,27,27,56,27,27,27,27,27,27,58,58,58,58,57,58,27,0,58,58,58,58,58,58,27,27,58,27,0,56,56,58,58,58,27,56,27,27,56,56,56,56,56,56,56,27,56,27,27,27,58,27,56,56,56,56,58,0,0,0,0,0,203,204,205,218,219,220,221,222,223,224,225,226,227,227,221,222,218,221,222,218,222,218,228,229,223,230,231,232,219,231,233,234,235,236,232,218,237,238,239,240,241,242,233,230,232,243,244,245,246,247,248,249,250,245,246,251,248,249,250,252,253,254,254,251,247,252,253,255,255,0,55,57,57,0,57,128,128,128,128,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,0,0,0,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,60,0,0,0,0,0,59,60,0,0,0,0,0,0,0,0,0,59,60,60,0,59,60,59,60,0,0,0,0,0,0,0,59,60,0,0,0,0,59,60,59,60,59,0,0,0,0,137,110,137,110,137,110,137,137,137,110,137,110,137,137,110,137,137,137,137,137,137,110,137,137,110,110,137,110,137,110,137,137,110,137,110,137,110,110,137,110,137,0,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,134,145,149,154,155,147,156,157,134,134,145,146,147,134,134,145,147,146,152,134,145,149,154,155,147,156,157,146,152,134,145,149,154,155,147,156,157,134,134,155,156,152,134,134,152,134,145,149,154,155,147,156,157,152,134,145,149,154,155,147,156,157,158,158,155,156,167,157,146,134,134,167,157,167,157,158,158,154,134,134,134,149,155,156,157,146,152,134,145,149,154,155,147,156,157,146,152,134,145,149,154,155,147,156,157,134,134,134,134,146,152,152,134,134,145,149,154,155,147,156,157,134,167,157,134,134,167,157,152,134,152,167,157,134,134,134,146,158,158,154,158,154,147,134,157,146,146,152,134,134,134,145,149,154,155,147,156,157,134,134,158,158,154,156,134,134,134,145,156,146,149,146,152,134,145,149,154,155,147,156,157,134,146,152,134,145,149,154,155,147,156,157,158,158,134,134,146,134,166,134,134,146,134,134,145,147,156,134,134,134,134,134,134,155,134,134,158,154,147,149,155,156,149,146,154,147,154,147,134,146,134,156,158,154,147,158,154,147,0,167,157,134,167,157,134,158,154,147,155,156,134,134,146,134,167,157,158,154,147,149,155,156,147,134,134,134,134,134,134,147,149,134,134,134,134,134,134,134,167,157,134,134,134,134,134,134,149,134,167,157,134,134,134,167,157,146,134,134,145,134,134,134,152,134,145,149,154,155,147,156,157,134,146,152,134,145,149,154,155,147,156,157,146,152,134,145,149,154,155,147,156,157,167,157,146,152,134,145,149,154,155,147,156,157,134,134,134,156,146,134,146,152,134,145,149,154,155,147,156,157,146,147,154,134,134,134,134,134,134,154,134,154,154,154,154,154,154,154,147,154,147,154,154,158,154,154,147,147,154,134,158,154,147,158,154,147,134,134,154,154,158,154,147,134,158,134,154,154,147,147,154,147,154,154,134,154,154,134,134,154,154,134,134,0,0,0,0,0,0,188,188,188,188,188,186,188,188,188,188,188,188,188,188,0,0,0,0,163,163,191,192,192,77,163,0,77,192,192,191,77,0,0,192,0,77,77,192,192,192,163,77,77,77,77,163,192,192,192,192,192,0,77,0,0,0,0,163,0,0,182,182,77,191,191,0,0,192,182,182,191,0,0,77,192,0,0,0,77,77,163,192,77,77,77,192,192,192,192,192,192,192,77,0,162,114,72,175,176,165,177,163,182,178,191,113,192,193,136,77,72,72,72,148,148,148,148,175,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,193,136,77,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,193,136,77,162,114,72,175,176,165,177,163,182,178,191,113,192,193,136,77,162,114,72,175,176,165,177,163,182,178,191,113,192,193,136,77,162,114,72,165,72,176,178,77,178,72,72,162,114,175,176,165,177,182,178,113,193,136,77,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,193,136,77,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,193,136,77,113,77,77,162,114,72,175,176,165,177,163,182,178,191,113,192,193,136,77,136,77,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,193,136,77,162,114,72,175,176,165,177,163,182,178,191,113,192,193,136,162,162,162,114,114,114,72,72,72,175,175,175,176,176,176,165,165,165,177,177,177,163,163,163,182,182,182,178,178,178,193,193,193,136,136,136,162,162,114,72,72,148,175,176,165,177,163,163,182,182,178,191,113,192,193,136,193,162,114,72,173,175,176,165,165,177,163,182,197,178,191,113,192,193,136,77,136,192,195,162,114,72,175,176,165,177,163,182,178,191,113,192,193,136,165,175,162,175,162,114,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,193,136,77,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,193,136,77,163,72,72,182,72,165,162,108,197,192,175,176,177,178,192,113,72,72,72,173,72,182,72,72,165,162,114,173,136,72,72,72,162,114,173,136,195,178,148,148,173,162,114,72,175,176,165,177,163,182,178,191,113,192,193,136,77,175,193,165,162,178,165,165,77,192,162,114,72,175,176,165,177,163,182,178,191,113,192,193,136,77,72,163,182,136,72,72,72,72,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,192,193,136,77,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,193,136,77,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,193,136,77,165,162,114,72,173,175,176,165,177,163,182,197,178,191,113,192,193,136,77,72,72,165,173,165,256,256,257,258,259,260,261,262,263,264,265,265,266,259,267,259,263,256,264,268,258,269,266,260,270,271,271,257,272,256,271,269,256,262,269,273,263,256,271,264,268,272,261,265,270,267,265,261,271,265,261,261,258,258,262,274,274,274],"f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}00000000000000000000000{hj}{{hj}{{n{jl}}}}00{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}000000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000000000000000000000000{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0`{jF`}{jj}0{{jjj}j}{{jj}j}0{{{b{Fb}}}Fb}{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fj}}}Fj}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Cf}}}Cf}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}00000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hf{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHh}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HjjHlAf}j}0{{j{Dj{Hn}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjI`Ib{Bh{Id}}{Bh{Ej}}}j}{Gfj}11```{{}j}{{}{{Bb{{B`{An}}}}}}{{}{{Bb{{B`{If}}}}}}{{}{{Bb{{B`{En}}}}}}{{}Gf}{{}Gh}{{}Gl}{{}Gn}{{}H`}{{}Hb}{jj}{Hl{{b{c}}}{}}00000000000000{{{b{{Bb{c}}}}}b{}}1111111111111111{Hl{{b{C`c}}}{}}000000000000000000000000000000{c{{n{Dh}}}Ih}{c{{n{j}}}Ih}{c{{n{Fj}}}Ih}{c{{n{E`}}}Ih}{c{{n{{Bb{{B`{Dd}}}}}}}Ih}{c{{n{{Bb{Bd}}}}}Ih}{c{{n{{Bb{{B`{Ij}}}}}}}Ih}{c{{n{Fl}}}Ih}{c{{n{Fn}}}Ih}{c{{n{G`}}}Ih}{c{{n{Gb}}}Ih}{c{{n{Gd}}}Ih}{c{{n{Cf}}}Ih}{c{{n{Gj}}}Ih}{c{{n{Gl}}}Ih}{c{{n{Gn}}}Ih}{c{{n{H`}}}Ih}{c{{n{Hb}}}Ih}{c{{n{Hd}}}Ih}{{AdChIl}j}{{jChIl}j}{{jj}}{{jc}j{{Al{j}}}}{Hlf}000000000000000000000000000000{jj}{Adj}1`{jIn}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Ghj}{{jHnAf}j}{{{b{Dh}}{b{Dh}}}Af}{{{b{j}}{b{j}}}Af}:{{{b{Fj}}{b{Fj}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfJ`}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gj}}{b{Gj}}}Af}{{{b{Gl}}{b{Gl}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{{b{Hd}}{b{Hd}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000000{{JbjAf}j}0{{jJd}j}{{jjI`}j}11`{{jc}j{{Hf{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JfCh}j}{{Jf{b{A`}}}j}{{Jf{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJh}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jj}}}{{n{fJl}}}}{{{b{En}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Eh}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Jn}}{b{C`Jj}}}{{n{fJl}}}}{{{b{j}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Fj}}{b{C`Jj}}}{{n{fJl}}}}{{{b{E`}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{{Bb{c}}}}{b{C`Jj}}}{{n{fJl}}}{}}{{{b{Fl}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Fn}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{G`}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Gb}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Gd}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Cf}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Gf}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Gh}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Gj}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Gl}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Gn}}{b{C`Jj}}}{{n{fJl}}}}{{{b{H`}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Hb}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Hd}}{b{C`Jj}}}{{n{fJl}}}}{{{b{El}}{b{C`Jj}}}{{n{fJl}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{Efj}{Afj}{Dhj}{K`j}{Kbj}{Kdj}{{{b{A`}}}j}{Kfj}{Chj}9{Hnj}{Hhj}{Khj}{Dlj}=={G`{{Bb{{B`{Dd}}}}}}{Fl{{Bb{{B`{Dd}}}}}}{Gd{{Bb{{B`{Dd}}}}}}{Cf{{Bb{{B`{Dd}}}}}}{Kj{{Bb{{B`{Dd}}}}}}{Kl{{Bb{{B`{Dd}}}}}}{Fn{{Bb{{B`{Dd}}}}}}{cc{}}{Kn{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{Ld{{Bb{{B`{Dd}}}}}}44444{LdCf}5{FnCf}{FlCf}{GdCf}88888{HbH`}9999{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lf}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHlHl}j}{{AbjAf}j}43{F`j}{{{b{If}}{b{Lh}}Lj{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lh}}Lj{b{{Ah{Db}}}}}Db}{{{b{D`}}}Hl}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Jn}}{b{Lh}}}{{n{{B`{Lh}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLl}{{{b{j}}{b{C`c}}}fLl}{{jDlDlDlDl}j}{{{b{Fj}}{b{C`c}}}fLl}{{{b{E`}}{b{C`c}}}fLl}{{{b{Fl}}{b{C`c}}}fLl}{{{b{Fn}}{b{C`c}}}fLl}{{{b{G`}}{b{C`c}}}fLl}{{{b{Gb}}{b{C`c}}}fLl}{{{b{Gd}}{b{C`c}}}fLl}{{{b{Cf}}{b{C`c}}}fLl}{{{b{Gj}}{b{C`c}}}fLl}{{{b{Gl}}{b{C`c}}}fLl}{{{b{Gn}}{b{C`c}}}fLl}{{{b{H`}}{b{C`c}}}fLl}{{{b{Hb}}{b{C`c}}}fLl}{{{b{Hd}}{b{C`c}}}fLl}{{Adj}j}{{j{Bh{Hl}}}j}{{j{Bh{j}}{Bh{Hl}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hl}000000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jLn}j}{{jj}j}{ce{}{}}000000000000000000000000000000{{{b{j}}}}{M`Ad}{AdAd}{h{{n{{`{Mb}}l}}}}{{jccMd}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}>>>{{jc}j{{Al{j}}}}????????22?{{AbjAf}j}{{AdjAf}j}{Jfj}{Mfj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMh}{{jHn}j}3;;3;;{{Mfc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{Cj}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{Cj}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{Db}}}}BlBn}}{{Mf{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{Db}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMlAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMf}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gf}{{}Gh}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{Mn{{b{j}}}}}}}f}{{j{b{C`{Mn{j}}}}}f}=={Chj}>`8{{Fdc}j{{Al{j}}}}{{Fhc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jeHb}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHh}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mf{b{A`}}}j}05`{{j{Dj{Hn}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jHl{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jN`}j}{{jjN`}j}9{{jNb{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jf{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{j{b{{Ah{Ch}}}}Hd}j}`{Abj}{Adj}{jj}00{{jNd}j}{{jjGj}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nf}j}{{jHlc}j{{Cd{{b{C`{Nj{Nh}}}}}{{Bf{{Bh{Hn}}}}}}BlBnNl}}{{jNf}j}{{jjNn}j}101010{{jN`HnNf}j}{{jjN`HnNn}j}{{jHlAf}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKd}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcO`}j{{Al{j}}}}``{{{b{Dh}}c}nOb}{{{b{j}}c}nOb}{{{b{Fj}}c}nOb}{{{b{E`}}c}nOb}{{{b{{Bb{Bd}}}}c}nOb}{{{b{{Bb{{B`{Ij}}}}}}c}nOb}{{{b{{Bb{{B`{Dd}}}}}}c}nOb}{{{b{Fl}}c}nOb}{{{b{Fn}}c}nOb}{{{b{G`}}c}nOb}{{{b{Gb}}c}nOb}{{{b{Gd}}c}nOb}{{{b{Cf}}c}nOb}{{{b{Gj}}c}nOb}{{{b{Gl}}c}nOb}{{{b{Gn}}c}nOb}{{{b{H`}}c}nOb}{{{b{Hb}}c}nOb}{{{b{Hd}}c}nOb}{{Adc}j{{Al{j}}}}0{{jOd}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHhAf}j}8{{AbHh}j}{{AdHh}j}{{jHh}j}{jOf}`{{jCj}j}`{jJf}{{jj}}{{Mf{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hl}}}j}44{{jjj}j}{{Fbc}Fd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{jjI`Ib}j}```{{AdHl}j}{{{b{j}}{b{Lh}}Lj}{{n{Dbl}}}}<{Mfj}{{{b{c}}}e{}{}}00000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}0000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOh{Bh{{B`{Bj}}}}Hl}j}5{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hh}}}}}{{n{fl}}}}{{{b{c}}}Oj{}}000000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEj}j}{{AbHh}j}{{AdHh}j}{{jHh}j}{ce{}{}}000000000000000000000000000000`{cFb{{Al{j}}}}{{Fdc}Ff{{Al{j}}}}{{Fhc}Ff{{Al{j}}}}`{{Gfj}Gf}0{{Ghj}Gh}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jf{Dj{j}}}j}{{Ghjjj}Gh}{{Gfjjj}Gf}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GfId}Gf}{{Gf{Bh{Ej}}}Gf}89{{jc}j{{Al{j}}}}````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{Hlf}3{cc{}}87{{}Hl}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}2``{{Inj{Ed{Af}}{Dj{Ef}}Ol}j}{Inj}<;{{InId}j}1{{InjId}j}{{InEj}j}333<;:393873333333333{{Inj}j}44{{In{Bh{Ej}}jOn}j}{{Injc}j{{Aj{A`}}}}6{{In{b{A`}}}j}7607777777{{InjEj}j};;:<8878```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@`}}}A@`}{{{b{c}}{b{C`e}}}f{}{}}{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{c{{n{A@`}}}Ih}{Hlf}{{{b{A@`}}{b{A@`}}}Af}{{{b{A@`}}{b{C`Jj}}}{{n{fJl}}}}0{cc{}}{{{b{A@`}}{b{C`c}}}fLl}{{}Hl}{ce{}{}}{{{b{A@`}}c}nOb}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@b}}}A@b}{{{b{c}}{b{C`e}}}f{}{}}{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{c{{n{A@b}}}Ih}{Hlf}{{{b{A@b}}{b{A@b}}}Af}{{{b{A@b}}{b{C`Jj}}}{{n{fJl}}}}0{cc{}}{{{b{A@b}}{b{C`c}}}fLl}{{}Hl}{ce{}{}}{{{b{A@b}}c}nOb}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{c{{n{A@d}}}Ih}{Hlf}{{{b{A@d}}{b{A@d}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@d}}{b{C`Jj}}}{{n{fJl}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLl}{{}Hl}{ce{}{}}{{{b{A@d}}c}nOb}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@h{{Dj{A@f}}}}}{{A@n{}{{A@j{A@l}}}}}}{cj{{Hf{Ej}}}}{{cAA`}{{A@h{A@l}}}{{Aj{{Ah{A@l}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHh}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjI`Ib{Bh{Id}}{Bh{Ej}}}j}0{Gfj}11``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Ghj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2?{{{b{A`}}jN`}j}>{{cj}j{{Al{j}}}}{{jjGj}j}0``{{jjHhAf}j}4{{jjI`Ib}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Ml}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAb}}A@f}{{n{A@fl}}}}{{{b{AAb}}}AAb}{{{b{c}}{b{C`e}}}f{}{}}{Hl{{b{c}}}{}}0{Hl{{b{C`c}}}{}}0{c{{n{AAb}}}Ih}{Hlf}0{{{b{AAb}}{b{AAb}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAb}}{b{C`Jj}}}{{n{fJl}}}}{cc{}}{{{AAf{AAd}}}AAb}1{{{b{Ml}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hl}0{ce{}{}}0{{{AAf{AAd}}{Bh{Cj}}AfAf}Ml}{{{b{AAb}}c}nOb}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Ml}}{b{C`{Dj{Hh}}}}}{{n{fl}}}}{{{b{c}}}Oj{}}066`{{OfAf}j}{Ofj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Of{b{A`}}Af}j}{{OfjAf}j}{{Ofj}j}1{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{Hlf}3{{OfjHl}j}4{{Of{b{A`}}}{{n{jl}}}}65{cc{}}6<;{{}Hl}{ce{}{}}{{Of{Bh{Cj}}{Bh{Hl}}}j}9>>{{OfHlAAh}j}0{{OfjjAf}j}0{{OfjjAfCh}j}{Ofj}{{Ofjj}j}>::>:>>>>>>{{OfCjGlj}j}?{{OfGl}j}{{Of{Bh{Id}}{Bh{Ej}}Glj}j}{{OfHl}j}{{OfjAf}j}6366{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}={{Ofj}j}````````````````````{{{b{c}}d}f{}}00000000{{A@lc}{{A@h{A@f}}}{{Bj{AAj{b{C`{AAn{AAl}}}}{b{C`{AAn{AB`}}}}}{{Bf{{A@h{f}}}}}}}}{{A@lAf}A@l}{{ABbc}A@l{{Aj{{Ah{j}}}}}}{{ABdAf}ABd}{{{b{ABf}}}Af}{{{B`{ABh}}ABj}{{A@h{A@l}}}}{{A@lA@lcc}A@l{{Al{j}}}}{{ABbcABl}A@l{{Bj{A@f}{{Bf{{A@h{A@f}}}}}}BlBn}}{{{b{ABf}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{A@lABncCn}A@l{{Aj{{Ah{j}}}}}}{A@lA@l}``{{{b{AC`}}}f}{{A@l{ACb{{b{A`}}Cj}}Af}A@l}{{A@lCjAf}A@l}{{{b{AC`}}}AC`}{{{b{A@l}}}A@l}{{{b{ABb}}}ABb}{{{b{ABj}}}ABj}{{{b{ACd}}}ACd}{{{b{ACf}}}ACf}{{{b{ABf}}}ABf}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{ACl}}}{{Bh{{b{ACn}}}}}}0````{{ABdAD`}ABd}{A@l{{A@h{A@f}}}}{A@l{{A@h{AC`}}}}````{{{b{ACl}}{Dj{A@l}}}{{A@h{A@l}}}}0{{{b{ACd}}{Dj{A@l}}}{{A@h{A@l}}}}{A@lA@l}{{A@lA@l{Bh{Ej}}}A@l}{{}A@l}{{}ABj}{{}ACf}{{}ACh}{{}ACj}{Hl{{b{c}}}{}}000000000{Hl{{b{C`c}}}{}}000000000{{{b{A@l}}}{{A@h{Ej}}}}000{Hlf}{{{b{C`AC`}}}f}11{{A@le}A@l{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}}2222222{{A@l{Bh{{Dj{j}}}}}A@l}``{{{b{A@l}}Af}{{A@h{Ej}}}}{{A@le}A@l{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{AC`}}}{{Bh{{A@h{A@f}}}}}}{{A@lHl}{{A@h{A@f}}}}{{{b{AC`}}}{{A@h{A@f}}}}``{{A@lc}A@l{{Al{j}}}}0{{A@lj}A@l}{ABdA@l}{ACl{{A@h{A@l}}}}0{ACd{{A@h{A@l}}}}10{ABf{{A@h{A@l}}}}{A@lA@l}{{{b{ACj}}{b{C`Jj}}}{{n{fJl}}}}{{ABdAf}ABd}{cc{}}0{IjA@l}{ABbA@l}22222222{{A@lA@lcc}A@l{{Al{j}}}}{{{b{A@l}}}ACj}{{{b{ACl}}}Af}0{{{b{ACd}}}Af}`{{A@le}ABb{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{A@ljcADd}ABb{{Aj{{Ah{j}}}}}}1{{ABb{Bh{Hl}}}A@l}`{{ABdADf}ABd}`{{}Hl}0000000008{ce{}{}}000000000{{{b{ACl}}}{{A@h{{Bh{ADh}}}}}}0{{A@lA@lccADj}A@l{{Aj{{Ah{j}}}}}}{A@lABd}{{ABdAf}ABd}{A@lA@l}{ADlA@l}1?{{ABdc}ABd{{Aj{{Ah{j}}}}}}{{A@lABn}A@l}``{{ABfAf}ABf}`{{A@lcADn{Bh{{B`{Jn}}}}{Bh{{b{A`}}}}}A@l{{Bj{A@f}{{Bf{{A@h{A@f}}}}}}BlBn}}{{A@lAAbADn{Bh{ABl}}Af}A@l}666{{A@lAE`}A@l}`{{A@lA@l{b{A`}}}{{A@h{A@l}}}}8{{{b{ACl}}}{{Bh{Hl}}}}{{{b{ACd}}}{{Bh{Hl}}}}{{{b{ABf}}}{{Bh{Hl}}}}````={cACd{{Aj{AEb}}}}{cABf{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}}ACd}{{{B`{{Ah{AEd}}}}}ABf}?={{A@l{b{C`{AAn{AAl}}}}{b{C`{AAn{AB`}}}}}{{A@h{AAj}}}}`{{{b{ACl}}}{{b{AEb}}}}{{{b{ACd}}}{{b{AEb}}}}{{{b{ABf}}}{{b{AEb}}}}{{{b{ACl}}}{{b{{Ah{AEd}}}}}}{{{b{ACd}}}{{b{{Ah{AEd}}}}}}{{{b{ABf}}}{{b{{Ah{AEd}}}}}}```{A@l{{A@h{{AEf{A@fA@f}}}}}}``{{A@ljN`}A@l}{{{b{ACl}}}Af}{{{b{ACd}}}Af}{{{b{ABf}}}Af}``{{A@lei}A@l{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}{{Aj{A`}}}{{ADb{}{{A@j{g}}}}}}{A@lA@l}{{ABdc}ABd{{Aj{{Ah{j}}}}}}{{A@ljcNd}ABb{{Aj{{Ah{j}}}}}}``{{{b{ACl}}}{{Bh{{b{AEh}}}}}}{{{b{ACd}}}{{Bh{{b{AEh}}}}}}{{{b{ABf}}}{{Bh{{b{AEh}}}}}}```{{{b{ABf}}AEj}{{A@h{A@f}}}}{{LhAElAf}A@l}{{cACf}{{A@h{A@l}}}{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}ACf}{{A@h{A@l}}}}{{cACh}{{A@h{A@l}}}{{Aj{AEb}}}}{{{B`{{Ah{AEd}}}}ACh}{{A@h{A@l}}}}{{{b{C`A@l}}}{{A@h{ABl}}}}{{{b{ABf}}{Bh{Hl}}}{{A@h{ABl}}}}`{{{b{C`A@l}}{b{C`{AAn{AAl}}}}{b{C`{AAn{AB`}}}}}{{A@h{ABl}}}}{{A@lc}A@l{{Aj{{Ah{j}}}}}}0{{A@lA@lcc}A@l{{Al{j}}}}{{{b{A@l}}{AAn{AAl}}{AAn{AB`}}}f}{{A@lc}A@l{{Al{j}}}}{{A@lce}A@l{{Al{j}}}{{Al{j}}}}``{{A@lAEdAEn}{{A@h{f}}}}{{A@lAEdAF`}{{A@h{f}}}}{{A@lEj{Bh{ACn}}AF`}{{A@h{f}}}}{{A@lAEdAFb}{{A@h{f}}}}{{A@lAEdAFd}{{A@h{f}}}}{{A@lEj{Bh{ACn}}AFd}{{A@h{f}}}}`{{A@lChABn}A@l}``{{A@lcCn}A@l{{Hf{AFf}}}}{{A@lcCn}A@l{{Aj{{Ah{j}}}}}}{{A@lHh}A@l}``{{ABdc}ABd{{Aj{A`}}}}{A@lA@l}{{A@lABn}A@l}{{ABb{Bh{Hl}}}A@l}{A@l{{A@h{AFh}}}}0{{{b{A@l}}Af}{{A@h{Ej}}}}{{{b{c}}}e{}{}}00000000{{A@lABncCn}A@l{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}Oj{}}000000000{{A@l{Bh{{Dj{Ej}}}}AFj}A@l}0{{A@le}A@l{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}}`{{ABdAFl}ABd}={ce{}{}}000000000{{ABdA@l}ABd}{{ABf{Bh{AFn}}}ABf}{{ACdAf}ACd}{{A@lAf}A@l}{{A@lj}A@l}{{A@lc}A@l{{Aj{{Ah{j}}}}}}022{{ACd{Bh{{b{A`}}}}}ACd}{{A@lc}A@l{{Aj{{Ah{A@l}}}}}}5{{ACd{Bh{ABl}}}ACd}{{ACdAG`}ACd}{{ACdHh}ACd}888{{ABfAf}ABf}{{ACd{Bh{Hl}}}ACd}{{ABf{Bh{Hl}}}ABf};;{{AClc}ACl{{Al{{Bh{Hl}}}}}}2{{ACdc}ACd{{Al{{Bh{Hl}}}}}}{{ABfc}ABf{{Al{{Bh{Hl}}}}}}3{{ACd{Bh{AGb}}}ACd}{{A@lACj}A@l}{{AClAEd}ACl}{{ACdAEd}ACd}{{ABfAEd}ABf}{{ACl{B`{{Ah{AEd}}}}}ACl}{{ACd{B`{{Ah{AEd}}}}}ACd}{{ABf{B`{{Ah{AEd}}}}}ABf}{{A@lAf}A@l}0{{ACd{Bh{Hh}}}ACd}{{ACdAf}ACd}{{AClAf}ACl}1{{ABfAf}ABf}4{{AClc}ACl{{Al{{Bh{AEh}}}}}}{{A@l{b{A`}}{Bh{ABn}}}A@l}{{ACdc}ACd{{Al{{Bh{AEh}}}}}}{{ACd{Bh{AEh}}}ACd}{{ABf{Bh{AEh}}}ABf}{{ABfc}ABf{{Al{{Bh{AEh}}}}}}{{ACd{Bh{ABl}}}ACd}{{ABf{Bh{ABl}}}ABf}{{ACdc}{{A@h{ACd}}}{{Bj{Lh}{{Bf{{A@h{Lh}}}}}}}}{{ACdHh}ACd}>{{ACdHl}ACd}0??==?{A@lA@l}{{{b{A@f}}ei{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@h{A@f}}}{{Aj{A`}}}{{ADb{}{{A@j{c}}}}}{{Aj{A`}}}{{ADb{}{{A@j{g}}}}}{{Aj{A`}}}{{ADb{}{{A@j{k}}}}}}0````{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{Hlf}{{{b{C`AGd}}{b{C`AGf}}}{{A@h{A@f}}}}{{{b{C`AGh}}{b{C`AGf}}}{{A@h{A@f}}}}{cc{}}{{}Hl}{ce{}{}}{c{{n{e}}}{}{}}0{{{b{c}}}Oj{}}2{{AAj{b{C`{AAn{AAl}}}}{b{C`{AAn{AB`}}}}}{{A@h{{AGj{AGd}}}}}}```````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{I`}}Ch{Bh{{b{AGl}}}}}{{n{Chl}}}}00{{{b{ABh}}}Af}00{{{b{ABh}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADd}}}ADd}{{{b{Nd}}}Nd}{{{b{I`}}}I`}{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{{b{ADj}}}ADj}{{{b{AFb}}}AFb}{{{b{ADf}}}ADf}{{{b{AFl}}}AFl}{{{b{AFd}}}AFd}{{{b{AGn}}}AGn}{{{b{Nb}}}Nb}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AA`}}}AA`}{{{b{Ij}}}Ij}{{{b{c}}{b{C`e}}}f{}{}}000000000000000``{{{b{I`}}{b{I`}}}AHd}`{{{b{c}}{b{e}}}AHd{}{}}``{{{b{Ij}}}{{n{{B`{Lh}}l}}}}`{{{b{I`}}}Ch}{{{b{I`}}}Af}{{}ADd}{{}Nd}{{}AEn}{{}AF`}{{}ADj}{{}AFb}{{}AFl}{{}AFd}{{}Nb}{{}AHb}{{}AA`}{{}Ij}{Hl{{b{c}}}{}}00000000000000000{Hl{{b{C`c}}}{}}00000000000000000`{{{b{Ij}}}{{n{Ejl}}}}0{c{{n{ADd}}}Ih}{c{{n{Nd}}}Ih}{c{{n{I`}}}Ih}{c{{n{AEn}}}Ih}{c{{n{AF`}}}Ih}{c{{n{ADj}}}Ih}{c{{n{AFb}}}Ih}{c{{n{ADf}}}Ih}{c{{n{AFl}}}Ih}{c{{n{AFd}}}Ih}{c{{n{AGn}}}Ih}{c{{n{Nb}}}Ih}{c{{n{AH`}}}Ih}{c{{n{AHb}}}Ih}{c{{n{AA`}}}Ih}{c{{n{Ij}}}Ih}`{{{b{Ij}}}{{n{{`{Mb}}l}}}}{Hlf}00000000000000000{{{b{ADd}}{b{ADd}}}Af}{{{b{Nd}}{b{Nd}}}Af}{{{b{I`}}{b{I`}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{ADj}}{b{ADj}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{ADf}}{b{ADf}}}Af}{{{b{AFl}}{b{AFl}}}Af}{{{b{AFd}}{b{AFd}}}Af}{{{b{AGn}}{b{AGn}}}Af}{{{b{Nb}}{b{Nb}}}Af}{{{b{AH`}}{b{AH`}}}Af}{{{b{AHb}}{b{AHb}}}Af}{{{b{AA`}}{b{AA`}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADd}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Nd}}{b{C`Jj}}}{{n{fJl}}}}{{{b{I`}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{ABh}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AEn}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AF`}}{b{C`Jj}}}{{n{fJl}}}}{{{b{ADj}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AFb}}{b{C`Jj}}}{{n{fJl}}}}{{{b{ADf}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{AFl}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{AFd}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AGn}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Nb}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AH`}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AHb}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AA`}}{b{C`Jj}}}{{n{fJl}}}}`{cc{}}00000{ADfADj}111111111111`{{{b{AH`}}}Cj}{{{b{AHf}}{Dj{Bd}}{b{ADd}}}{{n{{AEf{Bd{Dj{Bd}}AHh}}l}}}}{{{b{ADd}}{b{C`c}}}fLl}{{{b{Nd}}{b{C`c}}}fLl}{{{b{I`}}{b{C`c}}}fLl}{{{b{AEn}}{b{C`c}}}fLl}{{{b{AF`}}{b{C`c}}}fLl}{{{b{ADj}}{b{C`c}}}fLl}{{{b{AFb}}{b{C`c}}}fLl}{{{b{ADf}}{b{C`c}}}fLl}{{{b{AFl}}{b{C`c}}}fLl}{{{b{AFd}}{b{C`c}}}fLl}{{{b{AGn}}{b{C`c}}}fLl}{{{b{Nb}}{b{C`c}}}fLl}{{{b{AH`}}{b{C`c}}}fLl}{{{b{AHb}}{b{C`c}}}fLl}{{{b{AA`}}{b{C`c}}}fLl}``````{{}Hl}00000000000000000{ce{}{}}00000000000000000{{{b{ADf}}}Af}{{{b{I`}}{Bh{{b{A`}}}}}Af}{{{b{I`}}}Af}{{{b{AFl}}{b{ADf}}}{{n{fl}}}}1``{Mhj}{AHjj}{AH`j}````{AH`AH`}`{{{b{I`}}}Ch}6{{I`Ch}I`}`1{{{b{AFl}}}Af}8{ChI`}{ADfADj}````{{{b{A`}}}I`}`{{{b{I`}}{b{I`}}}{{Bh{AHd}}}}````{{{b{AHf}}{Dj{Bd}}{b{Nd}}}{{n{{AEf{Bd{Dj{Bd}}AHh}}l}}}}`{{{b{ABh}}AEj}{{n{A@fl}}}}{{{b{ABh}}{Bh{Hl}}}{{n{{B`{Lh}}l}}}}`{{{b{ADd}}c}nOb}{{{b{Nd}}c}nOb}{{{b{I`}}c}nOb}{{{b{AEn}}c}nOb}{{{b{AF`}}c}nOb}{{{b{ADj}}c}nOb}{{{b{AFb}}c}nOb}{{{b{ADf}}c}nOb}{{{b{AFl}}c}nOb}{{{b{AFd}}c}nOb}{{{b{AGn}}c}nOb}{{{b{Nb}}c}nOb}{{{b{AH`}}c}nOb}{{{b{AHb}}c}nOb}{{{b{AA`}}c}nOb}{{{b{Ij}}c}nOb}`````{{{b{ADj}}}{{b{A`}}}}`{Ij{{n{AFhl}}}}{{{b{AH`}}}{{Bh{AHl}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{I`}}Ch{Bh{{b{AGl}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AHn}}}}}{{Bj{AHn}{{Bf{Ch}}}}}}{{{b{I`}}Ch{Bh{{b{AGl}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}0000000000000{AHl{{n{AH`l}}}}1111111111111111111111{{{b{c}}}Oj{}}00000000000000000`{ce{}{}}00000000000000000{{{b{I`}}}Ch}{{{b{I`}}}Af}{{ADjAD`}ADj}`{{ADj{Bh{Ej}}}ADj}``````````````````````````````````````````````````````````","D":"GEh","p":[[1,"reference"],[5,"Private",3334],[1,"unit"],[5,"MetaNameSpace",6,3335],[6,"Expr",6,3336],[6,"PolarsError",3337],[6,"Result",3338],[1,"str"],[5,"ArrayNameSpace",6,3339],[5,"ListNameSpace",6,3340],[1,"bool"],[1,"slice"],[10,"AsRef",3341],[10,"Into",3341],[10,"FunctionOutputField",6,3342],[5,"Arc",3343],[5,"SpecialEq",6,3342],[5,"Series",3344],[17,"Output"],[6,"Option",3345],[10,"Fn",3346],[10,"Send",3347],[10,"Sync",3347],[0,"mut"],[6,"VisitRecursion",3348],[10,"FnMut",3346],[6,"FunctionExpr",6,3349],[1,"i64"],[6,"DataType",3350],[5,"SortOptions",3351],[5,"SortMultipleOptions",3351],[5,"FieldsMapper",6,3352],[5,"Field",3353],[10,"SeriesUdf",6,3342],[10,"Any",3354],[6,"AggExpr",6,3336],[5,"Vec",3355],[1,"u64"],[5,"BinaryNameSpace",1577,3356],[6,"Operator",6,3336],[10,"Clone",3357],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6,3342],[5,"String",3358],[5,"UserDefinedFunction",6,3359],[10,"SeriesBinaryUdf",6,3342],[5,"CategoricalNameSpace",6,3360],[5,"When",6,3361],[5,"Then",6,3361],[5,"ChainedWhen",6,3361],[5,"ChainedThen",6,3361],[6,"Excluded",6,3336],[6,"BooleanFunction",6,3362],[6,"CategoricalFunction",6,3363],[6,"TemporalFunction",6,3364],[6,"PowFunction",6,3365],[6,"StringFunction",6,3366],[5,"DatetimeArgs",6,3367],[5,"DurationArgs",6,3367],[5,"RollingCovOptions",6,3368],[5,"StrptimeOptions",6,3368],[5,"JoinOptions",6,3368],[6,"WindowType",6,3368],[6,"WindowMapping",6,3368],[6,"NestedType",6,3368],[10,"IntoVec",3369],[1,"u8"],[10,"ExprEvalExtension",6,3370],[1,"usize"],[1,"f64"],[5,"Duration",2687,3371],[6,"ClosedWindow",3372],[6,"TimeUnit",3373],[10,"BinaryUdfOutputField",6,3342],[10,"Deserializer",3374],[6,"DslPlan",2687,3375],[6,"NullBehavior",3376],[5,"DateLikeNameSpace",1598,3377],[10,"Sized",3347],[10,"ListNameSpaceExtension",6,3378],[5,"EWMOptions",3379],[5,"StructNameSpace",6,3380],[6,"FillNullStrategy",3381],[5,"Formatter",3382],[5,"Error",3382],[10,"UdfSchema",6,3383],[1,"i8"],[1,"f32"],[1,"u32"],[1,"u16"],[1,"i16"],[6,"StructFunction",3384],[6,"ListFunction",3385],[6,"ArrayFunction",3386],[6,"RangeFunction",3387],[6,"BusinessFunction",3388],[6,"BinaryFunction",3389],[5,"FunctionOptions",3390],[5,"Schema",3391],[6,"Context",3375],[10,"Hasher",3392],[6,"InterpolationMethod",3393],[10,"IntoListNameSpace",6,3378],[10,"Display",3382],[6,"ClosedInterval",3394],[5,"ExprNameNameSpace",6,3395],[10,"Literal",2687,3396],[10,"FnOnce",3346],[5,"PythonUdfExpression",2116,3397],[5,"UnitVec",3398],[6,"QuantileInterpolOptions",3399],[5,"RankOptions",2687,3400],[5,"RollingGroupOptions",2687,3401],[5,"RollingOptionsFixedWindow",3402],[5,"Float64Type",3403],[5,"ChunkedArray",3404],[10,"Copy",3347],[5,"RollingOptionsDynamicWindow",3405],[6,"SearchSortedSide",3406],[10,"Serializer",3407],[6,"IsSorted",3408],[5,"StringNameSpace",2161,3409],[6,"ListToStructWidthStrategy",3410],[5,"TypeId",3354],[6,"Roll",3411],[6,"NonExistent",3412],[6,"RollingFunction",1936,3413],[6,"RollingFunctionBy",1968,3414],[6,"TrigonometricFunction",1999,3415],[5,"DataFrame",3416],[8,"PolarsResult",3337],[17,"Item"],[5,"LazyFrame",2228],[10,"IntoParallelIterator",3417],[5,"UnionArgs",2687,3390],[5,"PythonFunction",2116,3397],[5,"PyAny",3418],[5,"Py",3419],[1,"char"],[5,"Node",3420],[6,"IR",3421],[5,"Arena",3420],[6,"AExpr",3422],[5,"LazyGroupBy",2228],[5,"JoinBuilder",2228],[5,"LazyJsonLineReader",2228,3423],[10,"AnonymousScan",2687,3424],[5,"ScanArgsAnonymous",2228,3425],[8,"SchemaRef",3391],[8,"IdxSize",3426],[5,"InProcessQuery",2228,3427],[8,"PlHashMap",3428],[5,"LazyCsvReader",2228,3429],[5,"ScanArgsIpc",2228,3430],[5,"ScanArgsParquet",2228,3431],[5,"OptState",2228,3432],[10,"LazyFileListReader",2228,3433],[5,"CloudOptions",3434],[6,"JoinCoalesce",3435],[10,"IntoIterator",3436],[5,"DynamicGroupOptions",2687,3401],[6,"JoinType",2687,3435],[8,"PathIterator",2228,3433],[5,"JoinArgs",2687,3435],[10,"IntoLazy",2228],[8,"AllowedOptimizations",2228,3432],[5,"MeltArgs",3437],[5,"Path",3438],[5,"PathBuf",3438],[1,"tuple"],[5,"RowIndex",3439],[5,"AnonymousScanArgs",2687,3424],[8,"PyObject",3419],[5,"CsvWriterOptions",2687,3440],[5,"IpcWriterOptions",2687,3441],[5,"JsonWriterOptions",2687,3442],[5,"ParquetWriteOptions",2687,3443],[8,"String",3444],[5,"IRPlan",3421],[6,"UniqueKeepStrategy",3416],[6,"JoinValidation",2687,3435],[8,"NonZeroUsize",3445],[6,"CsvEncoding",3446],[6,"NullValues",3446],[10,"Executor",2670,3447],[5,"ExecutionState",3448],[5,"Dummy",2670,3447],[5,"Box",3449],[6,"Tz",3450],[6,"RankMethod",2687,3400],[6,"LiteralValue",2687,3396],[5,"AnonymousScanOptions",2687,3390],[6,"Ordering",3451],[10,"PolarsTemporalGroupby",2687,3401],[6,"GroupsProxy",3452],[5,"Null",2687,3396],[6,"AnyValue",3453],[5,"NaiveDateTime",3454],[15,"Quantile",1467],[15,"Min",1467],[15,"Max",1467],[15,"IsBetween",1861],[15,"Any",1861],[15,"All",1861],[15,"SortBy",1477],[15,"Filter",1477],[15,"Cast",1477],[15,"Sort",1477],[15,"Gather",1477],[15,"RenameAlias",1477],[15,"Ternary",1477],[15,"Function",1477],[15,"Window",1477],[15,"AnonymousFunction",1477],[15,"Slice",1477],[15,"BinaryExpr",1477],[15,"QCut",1864],[15,"Entropy",1864],[15,"Log",1864],[15,"Hist",1864],[15,"Cut",1864],[15,"Correlation",1864],[15,"Round",1864],[15,"RoundSF",1864],[15,"EwmMeanBy",1864],[15,"Clip",1864],[15,"BackwardFill",1864],[15,"ForwardFill",1864],[15,"Random",1864],[15,"GatherEvery",1864],[15,"ValueCounts",1864],[15,"Rank",1864],[15,"EwmMean",1864],[15,"EwmStd",1864],[15,"EwmVar",1864],[15,"Replace",1864],[15,"CumCount",1864],[15,"CumSum",1864],[15,"CumProd",1864],[15,"CumMin",1864],[15,"CumMax",1864],[15,"TopK",1864],[15,"TopKBy",1864],[15,"ConcatHorizontal",1908],[15,"ConcatVertical",1908],[15,"ExtractGroups",1908],[15,"JsonDecode",1908],[15,"PadStart",1908],[15,"PadEnd",1908],[15,"SplitExact",1908],[15,"Contains",1908],[15,"Find",1908],[15,"Replace",1908],[15,"DatetimeFunction",1928],[15,"GroupBy",3276],[15,"Union",3276],[15,"Sort",3276],[15,"Cache",3276],[15,"ExtContext",3276],[15,"DataFrameScan",3276],[15,"IR",3276],[15,"Select",3276],[15,"HStack",3276],[15,"Scan",3276],[15,"MapFunction",3276],[15,"Filter",3276],[15,"Distinct",3276],[15,"Slice",3276],[15,"Sink",3276],[15,"Join",3276],[15,"HConcat",3276],[15,"PythonScan",3276],[15,"Range",3331]],"r":[[8,3336],[22,3339],[31,3342],[33,3362],[38,3363],[39,3360],[43,3361],[44,3361],[68,3367],[78,3367],[88,3336],[92,3336],[93,3370],[94,3395],[100,3352],[101,3395],[111,3349],[112,3342],[118,3342],[132,3378],[148,3368],[159,3340],[160,3378],[175,3335],[193,3368],[199,3336],[210,3365],[221,3342],[230,3368],[239,3342],[240,3342],[251,3342],[259,3366],[266,3368],[268,3380],[274,3364],[276,3361],[296,3383],[301,3359],[306,3361],[309,3368],[310,3368],[347,3455],[351,3456],[358,3456],[361,3457],[365,3458],[367,3459],[382,3460],[384,3460],[390,3461],[391,3462],[393,3458],[395,3361],[460,3463],[467,3462],[469,3458],[524,3456],[525,3455],[526,3455],[527,3464],[528,3464],[529,3464],[538,3465],[540,3456],[544,3456],[549,3459],[550,3367],[551,3459],[552,3459],[687,3458],[689,3455],[690,3455],[691,3367],[774,3458],[812,3456],[815,3464],[879,3458],[921,3455],[954,3459],[955,3459],[1004,3462],[1006,3462],[1016,3458],[1019,3458],[1023,3396],[1033,3457],[1044,3458],[1047,3458],[1054,3462],[1058,3456],[1059,3462],[1062,3456],[1063,3462],[1071,3462],[1075,3456],[1101,3462],[1103,3458],[1115,3465],[1122,3458],[1125,3462],[1129,3456],[1133,3466],[1145,3465],[1146,3465],[1218,3465],[1226,3458],[1231,3462],[1235,3456],[1241,3361],[1244,3459],[1389,3458],[1436,3361],[1577,3356],[1597,3360],[1598,3377],[1671,3362],[1675,3363],[1721,3349],[1780,3365],[1816,3366],[1827,3364],[1856,3349],[1857,3349],[1858,3349],[1859,3349],[1860,3349],[1930,3363],[1934,3365],[1940,3413],[1972,3414],[2014,3415],[2041,3367],[2042,3367],[2043,3455],[2044,3456],[2046,3456],[2047,3457],[2048,3459],[2049,3460],[2050,3460],[2051,3461],[2052,3462],[2053,3462],[2054,3456],[2055,3455],[2057,3455],[2059,3464],[2062,3464],[2063,3464],[2064,3465],[2065,3456],[2066,3456],[2067,3459],[2068,3459],[2069,3367],[2070,3459],[2071,3459],[2074,3455],[2075,3455],[2076,3367],[2077,3456],[2078,3464],[2081,3455],[2082,3459],[2083,3459],[2084,3462],[2085,3462],[2086,3457],[2087,3462],[2088,3462],[2089,3462],[2093,3462],[2098,3462],[2099,3465],[2100,3462],[2101,3456],[2102,3466],[2103,3465],[2104,3465],[2107,3465],[2108,3462],[2109,3459],[2110,3459],[2116,3397],[2117,3397],[2118,3397],[2119,3397],[2161,3409],[2222,3359],[2228,3432],[2229,3427],[2232,3429],[2233,3433],[2236,3423],[2237,3432],[2238,3433],[2239,3425],[2240,3430],[2241,3431],[2670,3447],[2671,3447],[2686,3467],[2687,3424],[2688,3424],[2689,3390],[2697,3440],[2703,3375],[2704,3371],[2706,3401],[2723,3441],[2725,3435],[2726,3435],[2727,3435],[2728,3442],[2730,3396],[2731,3396],[2737,3396],[2738,3396],[2743,3443],[2744,3401],[2747,3400],[2748,3400],[2749,3401],[2765,3390]],"b":[[557,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[558,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[559,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[634,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[635,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[636,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[694,"impl-PartialEq-for-Expr"],[695,"impl-Expr"],[698,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[699,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[785,"impl-Debug-for-Expr"],[786,"impl-Display-for-Expr"],[788,"impl-Display-for-Operator"],[789,"impl-Debug-for-Operator"],[791,"impl-Display-for-BooleanFunction"],[792,"impl-Debug-for-BooleanFunction"],[793,"impl-Display-for-CategoricalFunction"],[794,"impl-Debug-for-CategoricalFunction"],[795,"impl-Debug-for-TemporalFunction"],[796,"impl-Display-for-TemporalFunction"],[797,"impl-Display-for-PowFunction"],[798,"impl-Debug-for-PowFunction"],[799,"impl-Debug-for-StringFunction"],[800,"impl-Display-for-StringFunction"],[801,"impl-Debug-for-FunctionExpr"],[802,"impl-Display-for-FunctionExpr"],[829,"impl-From%3Ci32%3E-for-Expr"],[830,"impl-From%3Cbool%3E-for-Expr"],[831,"impl-From%3CAggExpr%3E-for-Expr"],[832,"impl-From%3Ci8%3E-for-Expr"],[833,"impl-From%3Cf32%3E-for-Expr"],[834,"impl-From%3Cu32%3E-for-Expr"],[835,"impl-From%3C%26str%3E-for-Expr"],[836,"impl-From%3Cu16%3E-for-Expr"],[837,"impl-From%3Ci64%3E-for-Expr"],[839,"impl-From%3Cf64%3E-for-Expr"],[840,"impl-From%3Cu8%3E-for-Expr"],[841,"impl-From%3Ci16%3E-for-Expr"],[842,"impl-From%3Cu64%3E-for-Expr"],[845,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[846,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[847,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[848,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[849,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[850,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[851,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[853,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[854,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[855,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[856,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[862,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[864,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[865,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[866,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[899,"impl-Hash-for-Expr"],[900,"impl-Expr"],[1183,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1184,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1185,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1955,"impl-Display-for-RollingFunction"],[1956,"impl-Debug-for-RollingFunction"],[1986,"impl-Display-for-RollingFunctionBy"],[1987,"impl-Debug-for-RollingFunctionBy"],[2028,"impl-Debug-for-TrigonometricFunction"],[2029,"impl-Display-for-TrigonometricFunction"],[2391,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2392,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2627,"impl-LazyCsvReader"],[2628,"impl-LazyFileListReader-for-LazyCsvReader"],[2629,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2630,"impl-LazyJsonLineReader"],[2649,"impl-LazyFileListReader-for-LazyCsvReader"],[2650,"impl-LazyCsvReader"],[2651,"impl-LazyJsonLineReader"],[2652,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3010,"impl-Display-for-Duration"],[3011,"impl-Debug-for-Duration"],[3017,"impl-Debug-for-JoinType"],[3018,"impl-Display-for-JoinType"],[3019,"impl-Debug-for-JoinValidation"],[3020,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFoJ8wAEABIAGAAPACkAAgAuABYARgAIAFAABwBZAAIAXgAAAGAAFwB5ABoAlQACAJkABgChAA4AsQAUAMcAAwDMACIA8gAJAP0ADwAOAQUAFgEXAC8BAwA0AQAANgEhAFkBAABeAQAAYQEBAGUBAABrAQAAbQEAAHgBAAB7AQAAggEBAIUBAQCKAQAAjQE9AM0BAADPAQAA0QEBANYBAADdAS8AEAIAACoCDAA4AlEAjAIAAI4CHgCuAgAAsAIAALYCAQC5Ag8AygIpAPwCAAD/AgEABQMAAAsDAAAOAx4ALgMAAD4DCABIAwMATgMGAFYDAwBfAwAAYQMCAGkDAABuAwAAcAMAAHUDAQB6AwUAgwMBAIYDDQCXAwEAmwMeAN4DAgDiAwAA9gMAAP4DAAALBAAADgQFABcEAAAaBAAAKgQAAC0EAgA1BAIAOQQDAEIEAQBGBAIATAQBAFgEAABaBAEAYQQAAGMEAABrBAEAcQQBAHQEAAB5BAIAkwQFAJoEFAC4BAAAvwQAAMYEAADLBAAAzQQAAM8EAADVBAAA2gQAANwEAADeBAIA5QQYAP8ECAAMBT0ATAUAAE4FIAB7BQAAfQUfAKAFAQClBQAAsgUAALYFAQC7BRMA0gUBANUFAQDYBQEA2wUEAOEFSAArBgMAMAYCADUGAgA6BgMAQgYBAEsGAgBRBgAAUwYAAGAGAABvBgMAdwYuAacHAQCqBxoAxgcBAMkHJQDwBwEA8wcGAP4HAAAMCAAAGQgBACAIAQArCAIALwgDADgIAwBACB0AXwgAAGEIAgBmCAsAcwgDAHsIAgCBCAAAhggCAIoIAQCqCAMAtggDAL0IAAC/CA0A0AgBANQIFQDrCAEA8AgRAAQJAQAKCQAAEQkAABQJGAAxCQMANgkGAFEJAQBUCQAAWAkBAGQJAgBsCQAAbgkKAIoJAQCPCQEAkgkAAJQJAACZCQEAnwkDAKQJAwCqCQEArQkEALoJAwDHCQQAzQkAANEJAgDVCQAA1wkAAOIJAADvCQEA8gkdABIKCQAfCgEAIgoJAC0KAAA2CgEARQoBAEsKAQBOCgEAWgoAAF0KAABrCgQAcQoGAHkKAAB7CgoAiQoAAIwKAgCQCgMAlgoAAJkKAACdCgIApAoAAKYKBgCwCgIAtAoAALcKCADBCgIAxgoAAMgKAADOChMA5QpKADQLiwDBCxMA2wsAAOgLAADqCxEA/QsAAAAMEQAkDAEAJwwAACkMAAAsDAIAMgwFADkMAAA8DAAAPgwCAEIMAQBGDAIATAwUAGIMpAA="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPKNNNNHNNENNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKKNMMMNNHHHNNHHNNNNNNNNNNNNNNNNNNNHNNHHHHHHNNHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","_left_join_from_series","_left_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesReshape","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","get_leaf_array","get_leaf_array","hash","implode","implode","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","reshape_list","reshape_list","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[232,"polars_ops::prelude"],[234,"polars_ops::series"],[292,"polars_ops::chunked_array::binary"],[293,"polars_core::datatypes"],[294,"polars_ops::chunked_array::binary::namespace"],[295,"polars_ops::chunked_array::scatter"],[296,"polars_utils::index"],[297,"polars_core::series"],[298,"polars_error"],[299,"core::marker"],[300,"core::option"],[301,"core::iter::traits::collect"],[302,"polars_ops::chunked_array::list::namespace"],[303,"polars_core::datatypes::aliases"],[304,"polars_core::chunked_array::ops::sort::options"],[305,"polars_core::frame"],[306,"dyn_clone::sealed"],[307,"polars_ops::frame::join::hash_join"],[308,"polars_ops::frame::join::args"],[309,"alloc::string"],[310,"polars_ops::frame::join::cross_join"],[311,"core::fmt"],[312,"core::convert"],[313,"core::hash"],[314,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[315,"polars_arrow::array::primitive"],[316,"core::result"],[317,"core::any"],[318,"polars_ops::series::ops::arg_min_max"],[319,"polars_ops::series::ops"],[320,"polars_core::chunked_array::ops::search_sorted"],[321,"polars_ops::series::ops::various"],[322,"polars_ops::series::ops::reshape"],[323,"polars_ops::frame::join::general"],[324,"polars_ops::series::ops::clip"],[325,"polars_ops::series::ops::horizontal"],[326,"polars_ops::series::ops::index"],[327,"polars_ops::series::ops::negate"],[328,"polars_ops::series::ops::not"],[329,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,0,33,36,37,38,0,31,31,0,31,31,31,31,0,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,0,0,54,0,54,54,0,0,0,0,54,52,52,53,54,54,0,0,0,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,57,57,54,57,57,54,54,0,55,55,0,0,0,0,0,0,57,57,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{cc{}}{DjDb}111{{{d{Eh}}{d{Ch}}ee}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}ClEl}{{{d{Dh}}{d{Dfc}}}ClEl}{{{d{Dj}}{d{Dfc}}}ClEl}{{{d{Dl}}{d{Dfc}}}ClEl}{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{F`Bh}}}}}}0{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dj}}}Bh}{{{d{Dl}}{d{Dj}}}{{Af{Cl}}}}{{{d{Eh}}{d{Ch}}eeDb}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bh}={{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}{{Db{Al{Dd}}}Db}``````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClG`}}}}{cc{}}{{{d{Gb}}}Ad}0{{{d{Fl}}{d{Dfc}}}ClEl}{{{d{Gb}}}{{Af{Bb}}}}0{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}{{{d{Gb}}{d{{l{Bn}}}}}{{Af{Ad}}}}03{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDd}{{Af{Ch}}}}0","D":"En","p":[[10,"AsBinary",4,292],[1,"reference"],[8,"BinaryChunked",293],[10,"BinaryNameSpaceImpl",4,294],[1,"u8"],[1,"slice"],[8,"BooleanChunked",293],[10,"ChunkedSet",4,295],[8,"IdxSize",296],[5,"Series",297],[8,"PolarsResult",298],[10,"Copy",299],[17,"Item"],[6,"Option",300],[10,"IntoIterator",301],[10,"AsList",23],[8,"ListChunked",293],[10,"ListNameSpaceImpl",23,302],[1,"str"],[1,"bool"],[8,"StringChunked",293],[8,"IdxCa",303],[1,"i64"],[1,"usize"],[5,"SortOptions",304],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",305],[5,"Private",306],[1,"unit"],[10,"JoinDispatch",78,307],[8,"LeftJoinIds",78,308],[5,"JoinArgs",78,308],[5,"String",309],[0,"mut"],[6,"JoinCoalesce",78,308],[6,"JoinType",78,308],[6,"JoinValidation",78,308],[10,"CrossJoin",78,310],[1,"tuple"],[8,"ChunkJoinOptIds",78,308],[5,"Formatter",311],[8,"Result",311],[10,"DataFrameJoinOps",78],[10,"AsRef",312],[10,"Hasher",313],[10,"SeriesJoin",78,314],[8,"InnerJoinIds",78,308],[5,"PrimitiveArray",315],[6,"Result",316],[5,"TypeId",317],[10,"ArgAgg",234,318],[10,"SeriesSealed",234,319],[6,"SearchSortedSide",234,320],[10,"SeriesMethods",234,321],[5,"Error",311],[10,"SeriesReshape",234,322]],"r":[[4,292],[5,294],[6,295],[24,302],[78,308],[79,308],[82,310],[86,308],[87,308],[88,308],[89,307],[91,308],[92,308],[95,308],[100,314],[105,323],[108,323],[113,323],[141,307],[232,78],[233,74],[235,318],[238,320],[239,321],[240,322],[241,319],[248,324],[249,324],[250,324],[253,325],[254,326],[274,326],[277,325],[278,325],[279,325],[280,327],[281,328],[282,329],[285,325]],"b":[[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinType"],[174,"impl-Debug-for-JoinValidation"],[175,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPUAEwAAAAgACwABAA8AAwAVAA8AKQA3AGUABQBtABkAiQAnALIAAAC3AAwAyQABAMwAAADOAB0A7QAGAPYAAgD8AA4ADgEAABEBAAAWAQwA"}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::logical_plan::options"],[122,"polars_plan::logical_plan"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",31],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",31,121],[1,"bool"],[6,"Context",31,122],[5,"DefaultFunctionRegistry",31],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[23,127],[32,122],[35,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_no_offset_ms","truncate_no_offset_ns","truncate_no_offset_us","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[285,"polars_time::series"],[306,"chrono::naive::datetime"],[307,"polars_time::windows::duration"],[308,"polars_time::windows::group_by"],[309,"polars_core::datatypes::time_unit"],[310,"polars_arrow::legacy::time_zone"],[311,"core::option"],[312,"polars_core::chunked_array::logical::datetime"],[313,"polars_error"],[314,"polars_time::month_end"],[315,"polars_time::month_start"],[316,"polars_time::round"],[317,"polars_core::datatypes"],[318,"chrono::naive::time"],[319,"polars_core::chunked_array::logical::time"],[320,"polars_time::truncate"],[321,"polars_time::upsample"],[322,"polars_core::frame"],[323,"alloc::string"],[324,"polars_core::utils"],[325,"dyn_clone::sealed"],[326,"polars_time::chunkedarray::string::patterns"],[327,"core::fmt"],[328,"core::hash"],[329,"core::result"],[330,"core::any"],[331,"core::clone"],[332,"polars_time::windows::bounds"],[333,"polars_time::windows::window"],[334,"core::cmp"],[335,"polars_core::datatypes::dtype"],[336,"polars_core::frame::group_by::proxy"],[337,"alloc::vec"],[338,"core::ops::function"],[339,"polars_core::series"],[340,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,0,0,5,0,0,0,0,12,13,46,4,0,14,0,0,18,19,19,0,0,0,27,27,27,27,27,0,0,27,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,0,41,0,0,34,34,34,34,34,34,34,34,34,0,34,34,34,34,37,34,34,34,41,34,34,5,0,0,0,44,45,0,45,0,5,44,45,5,5,44,45,0,45,0,45,45,45,0,45,43,4,5,44,45,46,4,4,4,49,43,4,5,44,45,46,49,43,4,5,44,45,46,43,4,5,44,45,46,43,4,5,44,45,46,4,4,4,4,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,0,0,4,5,44,45,4,4,4,5,5,5,44,44,44,45,45,45,43,4,4,5,44,45,49,43,4,5,44,45,46,46,46,46,46,0,0,4,5,44,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,4,4,4,4,4,4,4,4,4,46,49,46,4,4,4,46,46,46,43,4,5,44,45,46,4,4,4,46,46,46,46,4,46,4,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,45,4,4,0,0,57,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":"`````````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}{{{d{Ah}}{A`{{d{n}}}}}{{Ad{Ah}}}}{{{d{Aj}}{A`{{d{n}}}}}{{Ad{Aj}}}}```{{{d{Al}}{d{An}}h{A`{{d{n}}}}}{{Ad{Al}}}}`{{{d{b}}B`B`hj}{{Ad{Bb}}}}{{{d{Bd}}{A`{{d{n}}}}{d{An}}{d{b}}}{{Ad{Bd}}}}{{{d{Bf}}c{d{b}}hh}{{Ad{Bh}}}{{Bl{Bj}}}}0``````````{{{d{c}}Bn}C`{}}{{{d{Cb}}}{{d{An}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{Cf}}}Cf}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}{{{d{Cf}}{d{Cf}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cf}}{d{CdCj}}}Cl}{cc{}}{{{d{Cf}}{d{Cdc}}}C`Cn}`{{}Ch}{ce{}{}}{{{d{Cf}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{D`{e}}}{}{}}0{{{d{c}}}Db{}}````{{{d{c}}Bn}C`{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{{Dd{c}}}}}{{Dd{c}}}{DfDh}}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}?{{{d{b}}}{{A`{Cf}}}}>=`{{{d{Cd{Dd{c}}}}{d{b}}}A`Dh}{{{d{CdDj}}{d{{Dn{Dl}}}}{A`{l}}}{{A`{c}}}{}}`=<{{c{A`{l}}}{{Ad{{Eb{}{{E`{e}}}}}}}{}{}}=<````````````````````````;;;;;;{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00;;;;;;;:::::::{{{d{Ef}}}Ef}{{{d{h}}}h}{{{d{j}}}j}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{El}}}El}>>>>>>{{{d{h}}{d{h}}}En}{{{d{c}}{d{e}}}En{}{}}{{{d{h}}}Ed}{{{d{h}}}Af}{{}Ej}{Ch{{d{c}}}{}}000000{Ch{{d{Cdc}}}{}}000000{ChC`}000000{{h{d{F`}}{d{b}}}{{Ad{C`}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{C`}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Eh}}{d{Eh}}}Af}{{{d{Ej}}{d{Ej}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Ef}}{d{CdCj}}}Cl}{{{d{h}}{d{CdCj}}}Cl}0{{{d{j}}{d{CdCj}}}Cl}{{{d{Eh}}{d{CdCj}}}Cl}{{{d{Ej}}{d{CdCj}}}Cl}{cc{}}000000{{{d{El}}Edj{A`{{d{n}}}}}{{Ad{Ef}}}}00{{{d{El}}Efjl{A`{{d{n}}}}Ej}{{Ad{Fb}}}}{{hh{d{{Dn{Ed}}}}jl{A`{n}}}{{Ad{Fd}}}}{{El{d{{Dn{Ed}}}}jl{d{{A`{Ff}}}}AfAfEj}{{Fj{Fd{Fh{Ed}}{Fh{Ed}}}}}}{{{d{h}}{d{Cdc}}}C`Cn}{{{d{j}}{d{Cdc}}}C`Cn}{{{d{Eh}}{d{Cdc}}}C`Cn}{{{d{Ej}}{d{Cdc}}}C`Cn}{{}Ch}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}Ed}1{{hEd}h}12{Edh}{{hhh}El}{{{d{CdFb}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{En}}}}{{{d{El}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bj{}}{{{d{h}}Ed{A`{{d{n}}}}ceg}{{Ad{Ed}}}{{Fn{Ed}{{Fl{Ed}}}}}{{Fn{Ed}{{Fl{f}}}}}{{Fn{f}{{Fl{Ed}}}}}}{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}44440404{c{{D`{e}}}{}{}}0000000000000{{{d{c}}}Db{}}000000{{{d{Ej}}}{{A`{G`}}}}>?``{{{d{Gb}}}{{d{Gd}}}}{{{d{Gf}}}{{Ad{Gh}}}}{{{d{Gf}}}{{Ad{Gj}}}}0{{{d{Gf}}}{{Ad{Gl}}}}22112{{{d{Gf}}}{{Ad{Gn}}}}322{{{d{Gf}}{d{b}}}{{Ad{Gd}}}}0334","D":"Gb","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",306],[5,"Duration",85,307],[6,"ClosedWindow",85,308],[6,"TimeUnit",309],[6,"Tz",310],[6,"Option",311],[8,"DatetimeChunked",312],[8,"PolarsResult",313],[1,"bool"],[10,"PolarsMonthEnd",0,314],[10,"PolarsMonthStart",0,315],[10,"PolarsRound",0,316],[8,"StringChunked",317],[5,"NaiveTime",318],[8,"TimeChunked",319],[10,"PolarsTruncate",0,320],[10,"PolarsUpsample",0,321],[5,"DataFrame",322],[5,"String",323],[10,"IntoVec",324],[5,"Private",325],[1,"unit"],[10,"AsString",28],[0,"mut"],[6,"Pattern",28,326],[1,"usize"],[5,"Formatter",327],[8,"Result",327],[10,"Hasher",328],[6,"Result",329],[5,"TypeId",330],[5,"DatetimeInfer",60],[10,"Clone",331],[10,"PolarsNumericType",317],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85,332],[6,"Label",85,308],[6,"StartBy",85,308],[5,"Window",85,333],[6,"Ordering",334],[6,"DataType",335],[5,"BoundsIter",85,333],[8,"GroupsSlice",336],[8,"TimeZone",335],[5,"Vec",337],[1,"tuple"],[17,"Output"],[10,"Fn",338],[1,"u32"],[10,"AsSeries",285],[5,"Series",339],[10,"TemporalMethods",285],[8,"Int32Chunked",317],[8,"Int8Chunked",317],[8,"BooleanChunked",317],[8,"Int16Chunked",317]],"r":[[1,308],[2,307],[5,314],[6,315],[7,316],[8,320],[9,321],[11,333],[13,340],[14,340],[22,340],[26,28],[34,326],[86,332],[87,333],[88,308],[91,307],[93,308],[101,308],[103,285],[107,333],[170,307],[171,307],[205,308],[206,308]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPkAFQAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDsAAIA8AABAPUADQAEAQAABgEaACUBAAA="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQQQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[41,"polars_utils::abs_diff"],[45,"polars_utils::aliases"],[61,"polars_utils::arena"],[121,"polars_utils::atomic"],[141,"polars_utils::binary_search"],[143,"polars_utils::cache"],[179,"polars_utils::cell"],[199,"polars_utils::clmul"],[203,"polars_utils::contention_pool"],[218,"polars_utils::cpuid"],[220,"polars_utils::float"],[226,"polars_utils::floor_divmod"],[228,"polars_utils::functions"],[232,"polars_utils::hashing"],[264,"polars_utils::idx_vec"],[308,"polars_utils::index"],[370,"polars_utils::io"],[372,"polars_utils::iter"],[385,"polars_utils::mem"],[386,"polars_utils::min_max"],[393,"polars_utils::nulls"],[398,"polars_utils::ord"],[400,"polars_utils::partitioned"],[419,"polars_utils::slice"],[433,"polars_utils::sort"],[435,"polars_utils::sync"],[458,"polars_utils::sys"],[472,"polars_utils::total_ord"],[522,"polars_utils::unwrap"],[524,"polars_utils::vec"],[537,"num_traits"],[538,"core::cmp"],[539,"core::marker"],[540,"core::fmt"],[541,"core::clone"],[542,"core::option"],[543,"core::hash"],[544,"core::default"],[545,"core::ops::function"],[546,"core::result"],[547,"core::any"],[548,"core::borrow"],[549,"alloc::sync"],[550,"alloc::vec"],[551,"core::convert"],[552,"core::ops::range"],[553,"core::iter::traits::collect"],[554,"polars_utils::iter::fallible"],[555,"core::slice::iter"],[556,"polars_error"],[557,"std::fs"],[558,"std::path"],[559,"polars_utils::iter::enumerate_idx"],[560,"core::error"],[561,"core::iter::traits::iterator"],[562,"hashbrown::map"],[563,"core::mem::maybe_uninit"],[564,"core::slice::index"],[565,"num_traits::cast"],[566,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,113,0,0,0,0,0,113,10,11,114,115,113,10,11,114,115,0,0,13,15,13,15,13,13,15,13,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,13,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,38,35,38,35,35,35,35,38,35,38,35,38,35,38,38,35,35,35,35,38,35,35,38,35,38,35,35,38,35,35,38,35,38,35,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,45,45,45,45,0,46,0,0,0,0,0,0,52,52,52,52,52,52,53,52,52,52,52,52,52,52,52,52,0,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,66,0,0,0,0,64,65,64,65,0,64,65,64,65,64,65,64,65,64,65,64,64,64,64,65,64,65,64,64,65,66,66,64,64,65,64,65,64,65,68,65,64,64,68,64,65,69,65,70,64,64,65,64,65,64,65,64,65,0,0,0,0,0,78,0,78,73,73,73,73,74,59,78,0,0,80,80,80,80,80,80,67,67,0,67,67,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,0,0,0,86,88,88,90,0,91,91,92,92,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,97,97,97,97,97,97,97,97,97,97,97,97,105,0,0,0,0,105,0,100,100,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,105,100,105,93,101,93,93,102,102,93,93,101,100,100,100,100,0,106,0,0,0,108,0,0,108,108,109,110,111,110,112],"f":"```````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}D`}{Ab{{Al{c}}}{}}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{Edc{}}{cc{}}{c{{Eb{c}}}{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}5{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Eh{c}}}}}cCb}>={Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb}<<;{{}Bf}0`00{{{Al{Ej}}}Bf}10`{{ElEl}{{En{ElEl}}}}{{{F`{c}}e}{{F`{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fb{c}}}Bb{{Fd{{Db{c}}}}}}{{AbAb{Ff{Ab}}}{{Ff{Ab}}}}{{{F`{c}}g}{{Ch{{F`{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``?>{{{Al{Fh}}}Fh}{{{Al{c}}{Al{Ahe}}}B`{}{}}?>{{{Al{Fj}}}Ef}{{{Al{Fh}}}Ef}?{{{Al{Fh}}{Al{Fh}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fh}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fh}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fh}}}Bf}{{{Bn{{Al{{Db{Fl}}}}}}Ef}Fh}2{{{Al{c}}}e{}{}}{{{Al{Fh}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Fhc{}}``{{{Al{Ah{Fn{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{Fn{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fn{c}}}}}Ab{}}{{{Al{{Fn{c}}}}}{{Fn{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Fn{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Fn{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Fn{c}}}}}B`{}}{AbB`}{{{Al{{Fn{c}}}}{Al{{Fn{c}}}}}BfG`}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Fn{c}}}}e}B`{}{{Gd{}{{Gb{c}}}}}}{{{Al{{Fn{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{{Fb{c}}}{{Fn{c}}}{}}{{{Al{{Db{c}}}}}{{Fn{c}}}Bb}{g{{Ch{ic}}}{}{}{{Gf{c}{{Gb{e}}}}}{}}{e{{Fn{c}}}{}{{Gd{}{{Gb{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Fn{c}}}}}Bf{}}{{{Al{{Fn{c}}}}}{{Gh{c}}}{}}{{{Al{Ah{Fn{c}}}}}{{Gj{c}}}{}}{{{Al{{Fn{c}}}}}Ab{}}{{}{{Fn{c}}}{}}{{{Al{Ah{Fn{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Fn{c}}}}c}B`{}}0{{{Al{Ah{Fn{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{Fn{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{Gl}}}}Gl}{{Gn{B`}}}}{{{Al{H`}}}H`}{{{Al{Hb}}}Hb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{H`}}{Al{H`}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hb{{En{GlGl}}}}{{{Al{H`}}{Al{AhBh}}}Bj}{{{Al{Hb}}{Al{AhBh}}}Bj}{cc{}}{GlH`}1{{{Al{{Hd{}{{Gb{c}}}}}}Ab}cHf}0{{{Al{H`}}}Gl}{{}Ab}0`{{{Al{AhHb}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hh}}}Bf}{{{Al{Hb}}}Bf}{{{Al{H`}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hh}}}Ab}{{}H`}{{}Hb}{{{Al{Hj}}}Ab}{{GlGl}Hb}{{HlEf}Gl}{{{Al{H`}}}{{Bn{Gl}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{Gn{Hn}}}{{Fd{I`}}}}0``````{Ib{{`{IbGl}}}}0{Ib{{`{IbCn}}}}0{g{{Ch{Idc}}}If{}{{Gf{c}{{Gb{e}}}}}}{{{Al{AhGf}}}{{Ch{B`c}}}If}{{{Il{}{{Ih{c}}{Ij{e}}}}}e{}{{In{}{{Gb{c}}}}}}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{J`J`}J`}000{{{Al{J`}}{Al{J`}}}Bf}0```{{{Al{{Hf{}{{Jb{c}}}}}}}Bf{}}{{{Hf{}{{Jb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEj}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jd{ceg}}}}}{{Al{{Db{{Jf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}}{{Al{Ah{Fb{{Jf{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fb{{Jf{ceg}}}}}{{Jd{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ef}{{Jh{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ef}{{En{{Jh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ef}{{En{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ef}{{Jj{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Jl}}}{{Al{{Db{{Jn{c}}}}}}}{}}{{{Al{K`}}e}Al{}{{Kb{{Db{c}}}}}}{{{Al{AhK`}}e}{{Al{Ah}}}{}{{Kb{{Db{c}}}}}}{{{Al{Kd}}}Bf}{{{Al{{Db{Fl}}}}}Ef}{{{Al{Kf}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kh}}{Ff{Ab}}}Kh}0{{e{Al{Ah{Fb{Fl}}}}Ab}{{Al{Ah{Db{g}}}}}{Kjj}{{Gd{}{{Gb{c}}}}}{Klj}}{{{Al{Kn}}{Al{{Db{{En{GlGl}}}}}}{Al{Ah{Fb{Gl}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{L`{c}}}}}{{L`{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{L`{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{L`{c}}}}{Al{AhBh}}}Bjl}{{}{{L`{c}}}{}}{cc{}}1{{{Al{{L`{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{L`{c}}}}}Bf{}}55{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Lb}}}Ef}:87443```````21{LdLd}{LfLf}{{{Al{{Lh{c}}}}}{{Lh{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BdKj}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lh{c}}}}}EfFj}{AbB`}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfLj}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfKj}0{{{Al{{Lh{c}}}}{Al{Ahe}}}B`LlC`}{{}Ab}{ce{}{}}{{{Al{{Lh{c}}}}}BfHf}447{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}{{Bn{Bd}}}Kj}2{{{Al{c}}}e{}{}}{{{Al{{Mb{}{{Ln{c}}{M`{e}}}}}}}c{}{}}{{{Al{Kj}}{Al{Kj}}}Bd}{{{Al{Lj}}{Al{Lj}}}Bf}{{{Al{Kj}}{Al{Kj}}}Bf}0{{{Al{Ll}}{Al{Ahc}}}B`C`}{{{Al{{Db{Ll}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Lh{c}}}eHf{}}`{Mdc{}}``````{{{Al{{Mh{}{{Mf{c}}}}}}g}{{Fb{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Mh{}{{Mf{c}}}}g}{{Fb{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMj}}Abc}B`j}{Ml{{En{AbAb}}}}{{{Al{AhMn}}c}B`{}}{{{Al{Ml}}}{{En{AbAb}}}}{{AbLf}N`}","D":"Id","p":[[17,"Abs"],[10,"AbsDiff",41],[10,"Num",537],[10,"PartialOrd",538],[10,"Copy",539],[10,"Debug",540],[10,"Send",539],[10,"Sync",539],[1,"usize"],[8,"PlHashMap",45],[8,"PlHashSet",45],[0,"mut"],[5,"Arena",61],[1,"reference"],[5,"Node",61],[1,"unit"],[10,"Clone",541],[6,"Ordering",538],[1,"bool"],[5,"Formatter",540],[8,"Result",540],[1,"array"],[6,"Option",542],[10,"Hasher",543],[10,"Default",544],[17,"Output"],[10,"FnOnce",545],[6,"Result",546],[10,"FnMut",545],[5,"TypeId",547],[1,"u32"],[5,"SyncCounter",121],[1,"slice"],[10,"Ord",538],[5,"FastFixedCache",143],[10,"Hash",543],[10,"Eq",538],[5,"FastCachedFunc",143],[10,"Sized",539],[10,"Borrow",548],[5,"SyncUnsafeCell",179],[1,"never"],[1,"u64"],[5,"LowContentionPool",203],[10,"IsFloat",220],[10,"FloorDivMod",226],[1,"tuple"],[5,"Arc",549],[5,"Vec",550],[10,"AsRef",551],[5,"Range",552],[5,"BytesHash",232],[10,"DirtyHash",232],[1,"u8"],[5,"UnitVec",264],[10,"PartialEq",538],[17,"Item"],[10,"IntoIterator",553],[10,"FallibleIterator",372,554],[5,"Iter",555],[5,"IterMut",555],[8,"IdxSize",308],[8,"PolarsResult",556],[5,"NullableIdxSize",308],[5,"ChunkId",308],[10,"Indexable",308],[10,"IsNull",393],[10,"Bounded",308],[10,"NullCount",308],[10,"ToIdx",308],[5,"File",557],[5,"Path",558],[10,"EnumerateIdxTrait",372,559],[10,"FromFallibleIterator",372,554],[10,"Error",560],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",372],[10,"Iterator",561],[10,"MinMax",386],[17,"Inner"],[5,"PartitionedHashMap",400],[5,"HashMap",562],[5,"RawEntryBuilder",562],[5,"RawEntryBuilderMut",562],[10,"Slice2Uninit",419],[20,"MaybeUninit",563],[10,"GetSaferUnchecked",419],[10,"SliceIndex",564],[10,"SortedSlice",419],[10,"Extrema",419],[10,"SliceAble",419],[10,"TotalOrd",472],[10,"FromPrimitive",565],[5,"ThreadPool",566],[5,"SyncPtr",435],[5,"MemInfo",458],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",472],[10,"TotalEq",472],[10,"TotalHash",472],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",472],[10,"UnwrapUncheckedRelease",522],[17,"ItemIn"],[10,"ConvertVec",524],[10,"ResizeFaster",524],[10,"IntoRawParts",524],[10,"PushUnchecked",524],[10,"CapacityByFactor",524],[10,"InitHashMaps",45],[8,"PlIndexMap",45],[8,"PlIndexSet",45]],"r":[[0,308],[1,308],[372,559],[373,554],[374,554]],"b":[[288,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[289,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM8BNQAAAAgACgBPAFwAAABeAAEAYQACAGYAEwB7AAkAhgAAAIkABACRAA4AogAFAKoACQC1AAEAuAADAMAAAADFAAwA0wABANYABgDeAAoA6gAOAPoAAgD+AAsACwEUACEBBAAnAQYALwEkAFUBAABXAQAAWQEEAGABFwB5AQAAewEGAIMBCwCRAQUAmAECAJwBDQCsAQQAsgEAALUBBQC8AQIAwAECAMQBAADGAQUAzQEEANQBAADWAQMA3gEDAOQBCwDxAQMA9gEVAA0CBAATAgMAGAIBAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
